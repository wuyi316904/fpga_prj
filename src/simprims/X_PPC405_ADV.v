///////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995/2004 Xilinx, Inc.
// All Right Reserved.
///////////////////////////////////////////////////////////////////////////////
//   ____  ____
//  /   /\/   /
// /___/  \  /    Vendor : Xilinx
// \   \   \/     Version : 8.1i (I.17)
//  \   \         Description : Xilinx Timing Simulation Library Component
//  /   /                  Power PC Core
// /___/   /\     Filename : X_PPC405_ADV.v
// \   \  /  \    Timestamp : Fri Jun 18 10:57:22 PDT 2004
//  \___\/\___\
//
// Revision:
//    03/23/04 - Initial version.

`timescale 1 ps / 1 ps

module X_PPC405_ADV (
	APUFCMDECODED,
	APUFCMDECUDI,
	APUFCMDECUDIVALID,
	APUFCMENDIAN,
	APUFCMFLUSH,
	APUFCMINSTRUCTION,
	APUFCMINSTRVALID,
	APUFCMLOADBYTEEN,
	APUFCMLOADDATA,
	APUFCMLOADDVALID,
	APUFCMOPERANDVALID,
	APUFCMRADATA,
	APUFCMRBDATA,
	APUFCMWRITEBACKOK,
	APUFCMXERCA,
	C405CPMCORESLEEPREQ,
	C405CPMMSRCE,
	C405CPMMSREE,
	C405CPMTIMERIRQ,
	C405CPMTIMERRESETREQ,
	C405DBGLOADDATAONAPUDBUS,
	C405DBGMSRWE,
	C405DBGSTOPACK,
	C405DBGWBCOMPLETE,
	C405DBGWBFULL,
	C405DBGWBIAR,
	C405JTGCAPTUREDR,
	C405JTGEXTEST,
	C405JTGPGMOUT,
	C405JTGSHIFTDR,
	C405JTGTDO,
	C405JTGTDOEN,
	C405JTGUPDATEDR,
	C405PLBDCUABORT,
	C405PLBDCUABUS,
	C405PLBDCUBE,
	C405PLBDCUCACHEABLE,
	C405PLBDCUGUARDED,
	C405PLBDCUPRIORITY,
	C405PLBDCUREQUEST,
	C405PLBDCURNW,
	C405PLBDCUSIZE2,
	C405PLBDCUU0ATTR,
	C405PLBDCUWRDBUS,
	C405PLBDCUWRITETHRU,
	C405PLBICUABORT,
	C405PLBICUABUS,
	C405PLBICUCACHEABLE,
	C405PLBICUPRIORITY,
	C405PLBICUREQUEST,
	C405PLBICUSIZE,
	C405PLBICUU0ATTR,
	C405RSTCHIPRESETREQ,
	C405RSTCORERESETREQ,
	C405RSTSYSRESETREQ,
	C405TRCCYCLE,
	C405TRCEVENEXECUTIONSTATUS,
	C405TRCODDEXECUTIONSTATUS,
	C405TRCTRACESTATUS,
	C405TRCTRIGGEREVENTOUT,
	C405TRCTRIGGEREVENTTYPE,
	C405XXXMACHINECHECK,
	DCREMACABUS,
	DCREMACCLK,
	DCREMACDBUS,
	DCREMACENABLER,
	DCREMACREAD,
	DCREMACWRITE,
	DSOCMBRAMABUS,
	DSOCMBRAMBYTEWRITE,
	DSOCMBRAMEN,
	DSOCMBRAMWRDBUS,
	DSOCMBUSY,
	DSOCMRDADDRVALID,
	DSOCMWRADDRVALID,
	EXTDCRABUS,
	EXTDCRDBUSOUT,
	EXTDCRREAD,
	EXTDCRWRITE,
	ISOCMBRAMEN,
	ISOCMBRAMEVENWRITEEN,
	ISOCMBRAMODDWRITEEN,
	ISOCMBRAMRDABUS,
	ISOCMBRAMWRABUS,
	ISOCMBRAMWRDBUS,
	ISOCMDCRBRAMEVENEN,
	ISOCMDCRBRAMODDEN,
	ISOCMDCRBRAMRDSELECT,
	BRAMDSOCMCLK,
	BRAMDSOCMRDDBUS,
	BRAMISOCMCLK,
	BRAMISOCMDCRRDDBUS,
	BRAMISOCMRDDBUS,
	CPMC405CLOCK,
	CPMC405CORECLKINACTIVE,
	CPMC405CPUCLKEN,
	CPMC405JTAGCLKEN,
	CPMC405SYNCBYPASS,
	CPMC405TIMERCLKEN,
	CPMC405TIMERTICK,
	CPMDCRCLK,
	CPMFCMCLK,
	DBGC405DEBUGHALT,
	DBGC405EXTBUSHOLDACK,
	DBGC405UNCONDDEBUGEVENT,
	DSARCVALUE,
	DSCNTLVALUE,
	DSOCMRWCOMPLETE,
	EICC405CRITINPUTIRQ,
	EICC405EXTINPUTIRQ,
	EMACDCRACK,
	EMACDCRDBUS,
	EXTDCRACK,
	EXTDCRDBUSIN,
	FCMAPUCR,
	FCMAPUDCDCREN,
	FCMAPUDCDFORCEALIGN,
	FCMAPUDCDFORCEBESTEERING,
	FCMAPUDCDFPUOP,
	FCMAPUDCDGPRWRITE,
	FCMAPUDCDLDSTBYTE,
	FCMAPUDCDLDSTDW,
	FCMAPUDCDLDSTHW,
	FCMAPUDCDLDSTQW,
	FCMAPUDCDLDSTWD,
	FCMAPUDCDLOAD,
	FCMAPUDCDPRIVOP,
	FCMAPUDCDRAEN,
	FCMAPUDCDRBEN,
	FCMAPUDCDSTORE,
	FCMAPUDCDTRAPBE,
	FCMAPUDCDTRAPLE,
	FCMAPUDCDUPDATE,
	FCMAPUDCDXERCAEN,
	FCMAPUDCDXEROVEN,
	FCMAPUDECODEBUSY,
	FCMAPUDONE,
	FCMAPUEXCEPTION,
	FCMAPUEXEBLOCKINGMCO,
	FCMAPUEXECRFIELD,
	FCMAPUEXENONBLOCKINGMCO,
	FCMAPUINSTRACK,
	FCMAPULOADWAIT,
	FCMAPURESULT,
	FCMAPURESULTVALID,
	FCMAPUSLEEPNOTREADY,
	FCMAPUXERCA,
	FCMAPUXEROV,
	ISARCVALUE,
	ISCNTLVALUE,
	JTGC405BNDSCANTDO,
	JTGC405TCK,
	JTGC405TDI,
	JTGC405TMS,
	JTGC405TRSTNEG,
	MCBCPUCLKEN,
	MCBJTAGEN,
	MCBTIMEREN,
	MCPPCRST,
	PLBC405DCUADDRACK,
	PLBC405DCUBUSY,
	PLBC405DCUERR,
	PLBC405DCURDDACK,
	PLBC405DCURDDBUS,
	PLBC405DCURDWDADDR,
	PLBC405DCUSSIZE1,
	PLBC405DCUWRDACK,
	PLBC405ICUADDRACK,
	PLBC405ICUBUSY,
	PLBC405ICUERR,
	PLBC405ICURDDACK,
	PLBC405ICURDDBUS,
	PLBC405ICURDWDADDR,
	PLBC405ICUSSIZE1,
	PLBCLK,
	RSTC405RESETCHIP,
	RSTC405RESETCORE,
	RSTC405RESETSYS,
	TIEAPUCONTROL,
	TIEAPUUDI1,
	TIEAPUUDI2,
	TIEAPUUDI3,
	TIEAPUUDI4,
	TIEAPUUDI5,
	TIEAPUUDI6,
	TIEAPUUDI7,
	TIEAPUUDI8,
	TIEC405DETERMINISTICMULT,
	TIEC405DISOPERANDFWD,
	TIEC405MMUEN,
	TIEDCRADDR,
	TIEPVRBIT10,
	TIEPVRBIT11,
	TIEPVRBIT28,
	TIEPVRBIT29,
	TIEPVRBIT30,
	TIEPVRBIT31,
	TIEPVRBIT8,
	TIEPVRBIT9,
	TRCC405TRACEDISABLE,
	TRCC405TRIGGEREVENTIN
);

parameter LOC = "UNPLACED";

parameter in_delay=1;
parameter out_delay=0;

output APUFCMDECODED;
output APUFCMDECUDIVALID;
output APUFCMENDIAN;
output APUFCMFLUSH;
output APUFCMINSTRVALID;
output APUFCMLOADDVALID;
output APUFCMOPERANDVALID;
output APUFCMWRITEBACKOK;
output APUFCMXERCA;
output C405CPMCORESLEEPREQ;
output C405CPMMSRCE;
output C405CPMMSREE;
output C405CPMTIMERIRQ;
output C405CPMTIMERRESETREQ;
output C405DBGLOADDATAONAPUDBUS;
output C405DBGMSRWE;
output C405DBGSTOPACK;
output C405DBGWBCOMPLETE;
output C405DBGWBFULL;
output C405JTGCAPTUREDR;
output C405JTGEXTEST;
output C405JTGPGMOUT;
output C405JTGSHIFTDR;
output C405JTGTDO;
output C405JTGTDOEN;
output C405JTGUPDATEDR;
output C405PLBDCUABORT;
output C405PLBDCUCACHEABLE;
output C405PLBDCUGUARDED;
output C405PLBDCUREQUEST;
output C405PLBDCURNW;
output C405PLBDCUSIZE2;
output C405PLBDCUU0ATTR;
output C405PLBDCUWRITETHRU;
output C405PLBICUABORT;
output C405PLBICUCACHEABLE;
output C405PLBICUREQUEST;
output C405PLBICUU0ATTR;
output C405RSTCHIPRESETREQ;
output C405RSTCORERESETREQ;
output C405RSTSYSRESETREQ;
output C405TRCCYCLE;
output C405TRCTRIGGEREVENTOUT;
output C405XXXMACHINECHECK;
output DCREMACCLK;
output DCREMACENABLER;
output DCREMACREAD;
output DCREMACWRITE;
output DSOCMBRAMEN;
output DSOCMBUSY;
output DSOCMRDADDRVALID;
output DSOCMWRADDRVALID;
output EXTDCRREAD;
output EXTDCRWRITE;
output ISOCMBRAMEN;
output ISOCMBRAMEVENWRITEEN;
output ISOCMBRAMODDWRITEEN;
output ISOCMDCRBRAMEVENEN;
output ISOCMDCRBRAMODDEN;
output ISOCMDCRBRAMRDSELECT;
output [0:10] C405TRCTRIGGEREVENTTYPE;
output [0:1] C405PLBDCUPRIORITY;
output [0:1] C405PLBICUPRIORITY;
output [0:1] C405TRCEVENEXECUTIONSTATUS;
output [0:1] C405TRCODDEXECUTIONSTATUS;
output [0:29] C405DBGWBIAR;
output [0:29] C405PLBICUABUS;
output [0:2] APUFCMDECUDI;
output [0:31] APUFCMINSTRUCTION;
output [0:31] APUFCMLOADDATA;
output [0:31] APUFCMRADATA;
output [0:31] APUFCMRBDATA;
output [0:31] C405PLBDCUABUS;
output [0:31] DCREMACDBUS;
output [0:31] DSOCMBRAMWRDBUS;
output [0:31] EXTDCRDBUSOUT;
output [0:31] ISOCMBRAMWRDBUS;
output [0:3] APUFCMLOADBYTEEN;
output [0:3] C405TRCTRACESTATUS;
output [0:3] DSOCMBRAMBYTEWRITE;
output [0:63] C405PLBDCUWRDBUS;
output [0:7] C405PLBDCUBE;
output [0:9] EXTDCRABUS;
output [2:3] C405PLBICUSIZE;
output [8:28] ISOCMBRAMRDABUS;
output [8:28] ISOCMBRAMWRABUS;
output [8:29] DSOCMBRAMABUS;
output [8:9] DCREMACABUS;

input BRAMDSOCMCLK;
input BRAMISOCMCLK;
input CPMC405CLOCK;
input CPMC405CORECLKINACTIVE;
input CPMC405CPUCLKEN;
input CPMC405JTAGCLKEN;
input CPMC405SYNCBYPASS;
input CPMC405TIMERCLKEN;
input CPMC405TIMERTICK;
input CPMDCRCLK;
input CPMFCMCLK;
input DBGC405DEBUGHALT;
input DBGC405EXTBUSHOLDACK;
input DBGC405UNCONDDEBUGEVENT;
input DSOCMRWCOMPLETE;
input EICC405CRITINPUTIRQ;
input EICC405EXTINPUTIRQ;
input EMACDCRACK;
input EXTDCRACK;
input FCMAPUDCDCREN;
input FCMAPUDCDFORCEALIGN;
input FCMAPUDCDFORCEBESTEERING;
input FCMAPUDCDFPUOP;
input FCMAPUDCDGPRWRITE;
input FCMAPUDCDLDSTBYTE;
input FCMAPUDCDLDSTDW;
input FCMAPUDCDLDSTHW;
input FCMAPUDCDLDSTQW;
input FCMAPUDCDLDSTWD;
input FCMAPUDCDLOAD;
input FCMAPUDCDPRIVOP;
input FCMAPUDCDRAEN;
input FCMAPUDCDRBEN;
input FCMAPUDCDSTORE;
input FCMAPUDCDTRAPBE;
input FCMAPUDCDTRAPLE;
input FCMAPUDCDUPDATE;
input FCMAPUDCDXERCAEN;
input FCMAPUDCDXEROVEN;
input FCMAPUDECODEBUSY;
input FCMAPUDONE;
input FCMAPUEXCEPTION;
input FCMAPUEXEBLOCKINGMCO;
input FCMAPUEXENONBLOCKINGMCO;
input FCMAPUINSTRACK;
input FCMAPULOADWAIT;
input FCMAPURESULTVALID;
input FCMAPUSLEEPNOTREADY;
input FCMAPUXERCA;
input FCMAPUXEROV;
input JTGC405BNDSCANTDO;
input JTGC405TCK;
input JTGC405TDI;
input JTGC405TMS;
input JTGC405TRSTNEG;
input MCBCPUCLKEN;
input MCBJTAGEN;
input MCBTIMEREN;
input MCPPCRST;
input PLBC405DCUADDRACK;
input PLBC405DCUBUSY;
input PLBC405DCUERR;
input PLBC405DCURDDACK;
input PLBC405DCUSSIZE1;
input PLBC405DCUWRDACK;
input PLBC405ICUADDRACK;
input PLBC405ICUBUSY;
input PLBC405ICUERR;
input PLBC405ICURDDACK;
input PLBC405ICUSSIZE1;
input PLBCLK;
input RSTC405RESETCHIP;
input RSTC405RESETCORE;
input RSTC405RESETSYS;
input TIEC405DETERMINISTICMULT;
input TIEC405DISOPERANDFWD;
input TIEC405MMUEN;
input TIEPVRBIT10;
input TIEPVRBIT11;
input TIEPVRBIT28;
input TIEPVRBIT29;
input TIEPVRBIT30;
input TIEPVRBIT31;
input TIEPVRBIT8;
input TIEPVRBIT9;
input TRCC405TRACEDISABLE;
input TRCC405TRIGGEREVENTIN;
input [0:15] TIEAPUCONTROL;
input [0:23] TIEAPUUDI1;
input [0:23] TIEAPUUDI2;
input [0:23] TIEAPUUDI3;
input [0:23] TIEAPUUDI4;
input [0:23] TIEAPUUDI5;
input [0:23] TIEAPUUDI6;
input [0:23] TIEAPUUDI7;
input [0:23] TIEAPUUDI8;
input [0:2] FCMAPUEXECRFIELD;
input [0:31] BRAMDSOCMRDDBUS;
input [0:31] BRAMISOCMDCRRDDBUS;
input [0:31] EMACDCRDBUS;
input [0:31] EXTDCRDBUSIN;
input [0:31] FCMAPURESULT;
input [0:3] FCMAPUCR;
input [0:5] TIEDCRADDR;
input [0:63] BRAMISOCMRDDBUS;
input [0:63] PLBC405DCURDDBUS;
input [0:63] PLBC405ICURDDBUS;
input [0:7] DSARCVALUE;
input [0:7] DSCNTLVALUE;
input [0:7] ISARCVALUE;
input [0:7] ISCNTLVALUE;
input [1:3] PLBC405DCURDWDADDR;
input [1:3] PLBC405ICURDWDADDR;


reg notifier;

tri0 GSR = glbl.GSR;

wire APUFCMDECODED_delay;
wire APUFCMDECUDIVALID_delay;
wire APUFCMENDIAN_delay;
wire APUFCMFLUSH_delay;
wire APUFCMINSTRVALID_delay;
wire APUFCMLOADDVALID_delay;
wire APUFCMOPERANDVALID_delay;
wire APUFCMWRITEBACKOK_delay;
wire APUFCMXERCA_delay;
wire BRAMDSOCMCLK_delay;
wire BRAMISOCMCLK_delay;
wire C405CPMCORESLEEPREQ_delay;
wire C405CPMMSRCE_delay;
wire C405CPMMSREE_delay;
wire C405CPMTIMERIRQ_delay;
wire C405CPMTIMERRESETREQ_delay;
wire C405DBGLOADDATAONAPUDBUS_delay;
wire C405DBGMSRWE_delay;
wire C405DBGSTOPACK_delay;
wire C405DBGWBCOMPLETE_delay;
wire C405DBGWBFULL_delay;
wire C405JTGCAPTUREDR_delay;
wire C405JTGEXTEST_delay;
wire C405JTGPGMOUT_delay;
wire C405JTGSHIFTDR_delay;
wire C405JTGTDOEN_delay;
wire C405JTGTDO_delay;
wire C405JTGUPDATEDR_delay;
wire C405PLBDCUABORT_delay;
wire C405PLBDCUCACHEABLE_delay;
wire C405PLBDCUGUARDED_delay;
wire C405PLBDCUREQUEST_delay;
wire C405PLBDCURNW_delay;
wire C405PLBDCUSIZE2_delay;
wire C405PLBDCUU0ATTR_delay;
wire C405PLBDCUWRITETHRU_delay;
wire C405PLBICUABORT_delay;
wire C405PLBICUCACHEABLE_delay;
wire C405PLBICUREQUEST_delay;
wire C405PLBICUU0ATTR_delay;
wire C405RSTCHIPRESETREQ_delay;
wire C405RSTCORERESETREQ_delay;
wire C405RSTSYSRESETREQ_delay;
wire C405TRCCYCLE_delay;
wire C405TRCTRIGGEREVENTOUT_delay;
wire C405XXXMACHINECHECK_delay;
wire CPMC405CLOCK_delay;
wire CPMC405CORECLKINACTIVE_delay;
wire CPMC405CPUCLKEN_delay;
wire CPMC405JTAGCLKEN_delay;
wire CPMC405SYNCBYPASS_delay;
wire CPMC405TIMERCLKEN_delay;
wire CPMC405TIMERTICK_delay;
wire CPMDCRCLK_delay;
wire CPMFCMCLK_delay;
wire DBGC405DEBUGHALT_delay;
wire DBGC405EXTBUSHOLDACK_delay;
wire DBGC405UNCONDDEBUGEVENT_delay;
wire DCREMACCLK_delay;
wire DCREMACENABLER_delay;
wire DCREMACREAD_delay;
wire DCREMACWRITE_delay;
wire DSOCMBRAMEN_delay;
wire DSOCMBUSY_delay;
wire DSOCMRDADDRVALID_delay;
wire DSOCMRWCOMPLETE_delay;
wire DSOCMWRADDRVALID_delay;
wire EICC405CRITINPUTIRQ_delay;
wire EICC405EXTINPUTIRQ_delay;
wire EMACDCRACK_delay;
wire EXTDCRACK_delay;
wire EXTDCRREAD_delay;
wire EXTDCRWRITE_delay;
wire FCMAPUDCDCREN_delay;
wire FCMAPUDCDFORCEALIGN_delay;
wire FCMAPUDCDFORCEBESTEERING_delay;
wire FCMAPUDCDFPUOP_delay;
wire FCMAPUDCDGPRWRITE_delay;
wire FCMAPUDCDLDSTBYTE_delay;
wire FCMAPUDCDLDSTDW_delay;
wire FCMAPUDCDLDSTHW_delay;
wire FCMAPUDCDLDSTQW_delay;
wire FCMAPUDCDLDSTWD_delay;
wire FCMAPUDCDLOAD_delay;
wire FCMAPUDCDPRIVOP_delay;
wire FCMAPUDCDRAEN_delay;
wire FCMAPUDCDRBEN_delay;
wire FCMAPUDCDSTORE_delay;
wire FCMAPUDCDTRAPBE_delay;
wire FCMAPUDCDTRAPLE_delay;
wire FCMAPUDCDUPDATE_delay;
wire FCMAPUDCDXERCAEN_delay;
wire FCMAPUDCDXEROVEN_delay;
wire FCMAPUDECODEBUSY_delay;
wire FCMAPUDONE_delay;
wire FCMAPUEXCEPTION_delay;
wire FCMAPUEXEBLOCKINGMCO_delay;
wire FCMAPUEXENONBLOCKINGMCO_delay;
wire FCMAPUINSTRACK_delay;
wire FCMAPULOADWAIT_delay;
wire FCMAPURESULTVALID_delay;
wire FCMAPUSLEEPNOTREADY_delay;
wire FCMAPUXERCA_delay;
wire FCMAPUXEROV_delay;
wire ISOCMBRAMEN_delay;
wire ISOCMBRAMEVENWRITEEN_delay;
wire ISOCMBRAMODDWRITEEN_delay;
wire ISOCMDCRBRAMEVENEN_delay;
wire ISOCMDCRBRAMODDEN_delay;
wire ISOCMDCRBRAMRDSELECT_delay;
wire JTGC405BNDSCANTDO_delay;
wire JTGC405TCK_delay;
wire JTGC405TDI_delay;
wire JTGC405TMS_delay;
wire JTGC405TRSTNEG_delay;
wire MCBCPUCLKEN_delay;
wire MCBJTAGEN_delay;
wire MCBTIMEREN_delay;
wire MCPPCRST_delay;
wire PLBC405DCUADDRACK_delay;
wire PLBC405DCUBUSY_delay;
wire PLBC405DCUERR_delay;
wire PLBC405DCURDDACK_delay;
wire PLBC405DCUSSIZE1_delay;
wire PLBC405DCUWRDACK_delay;
wire PLBC405ICUADDRACK_delay;
wire PLBC405ICUBUSY_delay;
wire PLBC405ICUERR_delay;
wire PLBC405ICURDDACK_delay;
wire PLBC405ICUSSIZE1_delay;
wire PLBCLK_delay;
wire RSTC405RESETCHIP_delay;
wire RSTC405RESETCORE_delay;
wire RSTC405RESETSYS_delay;
wire TIEC405DETERMINISTICMULT_delay;
wire TIEC405DISOPERANDFWD_delay;
wire TIEC405MMUEN_delay;
wire TIEPVRBIT10_delay;
wire TIEPVRBIT11_delay;
wire TIEPVRBIT28_delay;
wire TIEPVRBIT29_delay;
wire TIEPVRBIT30_delay;
wire TIEPVRBIT31_delay;
wire TIEPVRBIT8_delay;
wire TIEPVRBIT9_delay;
wire TRCC405TRACEDISABLE_delay;
wire TRCC405TRIGGEREVENTIN_delay;
wire [0:10] C405TRCTRIGGEREVENTTYPE_delay;
wire [0:15] TIEAPUCONTROL_delay;
wire [0:1] C405PLBDCUPRIORITY_delay;
wire [0:1] C405PLBICUPRIORITY_delay;
wire [0:1] C405TRCEVENEXECUTIONSTATUS_delay;
wire [0:1] C405TRCODDEXECUTIONSTATUS_delay;
wire [0:23] TIEAPUUDI1_delay;
wire [0:23] TIEAPUUDI2_delay;
wire [0:23] TIEAPUUDI3_delay;
wire [0:23] TIEAPUUDI4_delay;
wire [0:23] TIEAPUUDI5_delay;
wire [0:23] TIEAPUUDI6_delay;
wire [0:23] TIEAPUUDI7_delay;
wire [0:23] TIEAPUUDI8_delay;
wire [0:29] C405DBGWBIAR_delay;
wire [0:29] C405PLBICUABUS_delay;
wire [0:2] APUFCMDECUDI_delay;
wire [0:2] FCMAPUEXECRFIELD_delay;
wire [0:31] APUFCMINSTRUCTION_delay;
wire [0:31] APUFCMLOADDATA_delay;
wire [0:31] APUFCMRADATA_delay;
wire [0:31] APUFCMRBDATA_delay;
wire [0:31] BRAMDSOCMRDDBUS_delay;
wire [0:31] BRAMISOCMDCRRDDBUS_delay;
wire [0:31] C405PLBDCUABUS_delay;
wire [0:31] DCREMACDBUS_delay;
wire [0:31] DSOCMBRAMWRDBUS_delay;
wire [0:31] EMACDCRDBUS_delay;
wire [0:31] EXTDCRDBUSIN_delay;
wire [0:31] EXTDCRDBUSOUT_delay;
wire [0:31] FCMAPURESULT_delay;
wire [0:31] ISOCMBRAMWRDBUS_delay;
wire [0:3] APUFCMLOADBYTEEN_delay;
wire [0:3] C405TRCTRACESTATUS_delay;
wire [0:3] DSOCMBRAMBYTEWRITE_delay;
wire [0:3] FCMAPUCR_delay;
wire [0:5] TIEDCRADDR_delay;
wire [0:63] BRAMISOCMRDDBUS_delay;
wire [0:63] C405PLBDCUWRDBUS_delay;
wire [0:63] PLBC405DCURDDBUS_delay;
wire [0:63] PLBC405ICURDDBUS_delay;
wire [0:7] C405PLBDCUBE_delay;
wire [0:7] DSARCVALUE_delay;
wire [0:7] DSCNTLVALUE_delay;
wire [0:7] ISARCVALUE_delay;
wire [0:7] ISCNTLVALUE_delay;
wire [0:9] EXTDCRABUS_delay;
wire [1:3] PLBC405DCURDWDADDR_delay;
wire [1:3] PLBC405ICURDWDADDR_delay;
wire [2:3] C405PLBICUSIZE_delay;
wire [8:28] ISOCMBRAMRDABUS_delay;
wire [8:28] ISOCMBRAMWRABUS_delay;
wire [8:29] DSOCMBRAMABUS_delay;
wire [8:9] DCREMACABUS_delay;

wire BRAMDSOCMCLK_delay_1;
wire BRAMISOCMCLK_delay_1;
wire CPMC405CLOCK_delay_1;
wire CPMC405CORECLKINACTIVE_delay_1;
wire CPMC405CPUCLKEN_delay_1;
wire CPMC405JTAGCLKEN_delay_1;
wire CPMC405SYNCBYPASS_delay_1;
wire CPMC405TIMERCLKEN_delay_1;
wire CPMC405TIMERTICK_delay_1;
wire CPMDCRCLK_delay_1;
wire CPMFCMCLK_delay_1;
wire DBGC405DEBUGHALT_delay_1;
wire DBGC405EXTBUSHOLDACK_delay_1;
wire DBGC405UNCONDDEBUGEVENT_delay_1;
wire DSOCMRWCOMPLETE_delay_1;
wire EICC405CRITINPUTIRQ_delay_1;
wire EICC405EXTINPUTIRQ_delay_1;
wire EMACDCRACK_delay_1;
wire EXTDCRACK_delay_1;
wire FCMAPUDCDCREN_delay_1;
wire FCMAPUDCDFORCEALIGN_delay_1;
wire FCMAPUDCDFORCEBESTEERING_delay_1;
wire FCMAPUDCDFPUOP_delay_1;
wire FCMAPUDCDGPRWRITE_delay_1;
wire FCMAPUDCDLDSTBYTE_delay_1;
wire FCMAPUDCDLDSTDW_delay_1;
wire FCMAPUDCDLDSTHW_delay_1;
wire FCMAPUDCDLDSTQW_delay_1;
wire FCMAPUDCDLDSTWD_delay_1;
wire FCMAPUDCDLOAD_delay_1;
wire FCMAPUDCDPRIVOP_delay_1;
wire FCMAPUDCDRAEN_delay_1;
wire FCMAPUDCDRBEN_delay_1;
wire FCMAPUDCDSTORE_delay_1;
wire FCMAPUDCDTRAPBE_delay_1;
wire FCMAPUDCDTRAPLE_delay_1;
wire FCMAPUDCDUPDATE_delay_1;
wire FCMAPUDCDXERCAEN_delay_1;
wire FCMAPUDCDXEROVEN_delay_1;
wire FCMAPUDECODEBUSY_delay_1;
wire FCMAPUDONE_delay_1;
wire FCMAPUEXCEPTION_delay_1;
wire FCMAPUEXEBLOCKINGMCO_delay_1;
wire FCMAPUEXENONBLOCKINGMCO_delay_1;
wire FCMAPUINSTRACK_delay_1;
wire FCMAPULOADWAIT_delay_1;
wire FCMAPURESULTVALID_delay_1;
wire FCMAPUSLEEPNOTREADY_delay_1;
wire FCMAPUXERCA_delay_1;
wire FCMAPUXEROV_delay_1;
wire JTGC405BNDSCANTDO_delay_1;
wire JTGC405TCK_delay_1;
wire JTGC405TDI_delay_1;
wire JTGC405TMS_delay_1;
wire JTGC405TRSTNEG_delay_1;
wire MCBCPUCLKEN_delay_1;
wire MCBJTAGEN_delay_1;
wire MCBTIMEREN_delay_1;
wire MCPPCRST_delay_1;
wire PLBC405DCUADDRACK_delay_1;
wire PLBC405DCUBUSY_delay_1;
wire PLBC405DCUERR_delay_1;
wire PLBC405DCURDDACK_delay_1;
wire PLBC405DCUSSIZE1_delay_1;
wire PLBC405DCUWRDACK_delay_1;
wire PLBC405ICUADDRACK_delay_1;
wire PLBC405ICUBUSY_delay_1;
wire PLBC405ICUERR_delay_1;
wire PLBC405ICURDDACK_delay_1;
wire PLBC405ICUSSIZE1_delay_1;
wire PLBCLK_delay_1;
wire RSTC405RESETCHIP_delay_1;
wire RSTC405RESETCORE_delay_1;
wire RSTC405RESETSYS_delay_1;
wire TIEC405DETERMINISTICMULT_delay_1;
wire TIEC405DISOPERANDFWD_delay_1;
wire TIEC405MMUEN_delay_1;
wire TIEPVRBIT10_delay_1;
wire TIEPVRBIT11_delay_1;
wire TIEPVRBIT28_delay_1;
wire TIEPVRBIT29_delay_1;
wire TIEPVRBIT30_delay_1;
wire TIEPVRBIT31_delay_1;
wire TIEPVRBIT8_delay_1;
wire TIEPVRBIT9_delay_1;
wire TRCC405TRACEDISABLE_delay_1;
wire TRCC405TRIGGEREVENTIN_delay_1;
wire [0:15] TIEAPUCONTROL_delay_1;
wire [0:23] TIEAPUUDI1_delay_1;
wire [0:23] TIEAPUUDI2_delay_1;
wire [0:23] TIEAPUUDI3_delay_1;
wire [0:23] TIEAPUUDI4_delay_1;
wire [0:23] TIEAPUUDI5_delay_1;
wire [0:23] TIEAPUUDI6_delay_1;
wire [0:23] TIEAPUUDI7_delay_1;
wire [0:23] TIEAPUUDI8_delay_1;
wire [0:2] FCMAPUEXECRFIELD_delay_1;
wire [0:31] BRAMDSOCMRDDBUS_delay_1;
wire [0:31] BRAMISOCMDCRRDDBUS_delay_1;
wire [0:31] EMACDCRDBUS_delay_1;
wire [0:31] EXTDCRDBUSIN_delay_1;
wire [0:31] FCMAPURESULT_delay_1;
wire [0:3] FCMAPUCR_delay_1;
wire [0:5] TIEDCRADDR_delay_1;
wire [0:63] BRAMISOCMRDDBUS_delay_1;
wire [0:63] PLBC405DCURDDBUS_delay_1;
wire [0:63] PLBC405ICURDDBUS_delay_1;
wire [0:7] DSARCVALUE_delay_1;
wire [0:7] DSCNTLVALUE_delay_1;
wire [0:7] ISARCVALUE_delay_1;
wire [0:7] ISCNTLVALUE_delay_1;
wire [1:3] PLBC405DCURDWDADDR_delay_1;
wire [1:3] PLBC405ICURDWDADDR_delay_1;

buf B_APUFCMDECODED (APUFCMDECODED, APUFCMDECODED_delay);
buf B_APUFCMDECUDI0 (APUFCMDECUDI[0], APUFCMDECUDI_delay[0]);
buf B_APUFCMDECUDI1 (APUFCMDECUDI[1], APUFCMDECUDI_delay[1]);
buf B_APUFCMDECUDI2 (APUFCMDECUDI[2], APUFCMDECUDI_delay[2]);
buf B_APUFCMDECUDIVALID (APUFCMDECUDIVALID, APUFCMDECUDIVALID_delay);
buf B_APUFCMENDIAN (APUFCMENDIAN, APUFCMENDIAN_delay);
buf B_APUFCMFLUSH (APUFCMFLUSH, APUFCMFLUSH_delay);
buf B_APUFCMINSTRUCTION0 (APUFCMINSTRUCTION[0], APUFCMINSTRUCTION_delay[0]);
buf B_APUFCMINSTRUCTION1 (APUFCMINSTRUCTION[1], APUFCMINSTRUCTION_delay[1]);
buf B_APUFCMINSTRUCTION2 (APUFCMINSTRUCTION[2], APUFCMINSTRUCTION_delay[2]);
buf B_APUFCMINSTRUCTION3 (APUFCMINSTRUCTION[3], APUFCMINSTRUCTION_delay[3]);
buf B_APUFCMINSTRUCTION4 (APUFCMINSTRUCTION[4], APUFCMINSTRUCTION_delay[4]);
buf B_APUFCMINSTRUCTION5 (APUFCMINSTRUCTION[5], APUFCMINSTRUCTION_delay[5]);
buf B_APUFCMINSTRUCTION6 (APUFCMINSTRUCTION[6], APUFCMINSTRUCTION_delay[6]);
buf B_APUFCMINSTRUCTION7 (APUFCMINSTRUCTION[7], APUFCMINSTRUCTION_delay[7]);
buf B_APUFCMINSTRUCTION8 (APUFCMINSTRUCTION[8], APUFCMINSTRUCTION_delay[8]);
buf B_APUFCMINSTRUCTION9 (APUFCMINSTRUCTION[9], APUFCMINSTRUCTION_delay[9]);
buf B_APUFCMINSTRUCTION10 (APUFCMINSTRUCTION[10], APUFCMINSTRUCTION_delay[10]);
buf B_APUFCMINSTRUCTION11 (APUFCMINSTRUCTION[11], APUFCMINSTRUCTION_delay[11]);
buf B_APUFCMINSTRUCTION12 (APUFCMINSTRUCTION[12], APUFCMINSTRUCTION_delay[12]);
buf B_APUFCMINSTRUCTION13 (APUFCMINSTRUCTION[13], APUFCMINSTRUCTION_delay[13]);
buf B_APUFCMINSTRUCTION14 (APUFCMINSTRUCTION[14], APUFCMINSTRUCTION_delay[14]);
buf B_APUFCMINSTRUCTION15 (APUFCMINSTRUCTION[15], APUFCMINSTRUCTION_delay[15]);
buf B_APUFCMINSTRUCTION16 (APUFCMINSTRUCTION[16], APUFCMINSTRUCTION_delay[16]);
buf B_APUFCMINSTRUCTION17 (APUFCMINSTRUCTION[17], APUFCMINSTRUCTION_delay[17]);
buf B_APUFCMINSTRUCTION18 (APUFCMINSTRUCTION[18], APUFCMINSTRUCTION_delay[18]);
buf B_APUFCMINSTRUCTION19 (APUFCMINSTRUCTION[19], APUFCMINSTRUCTION_delay[19]);
buf B_APUFCMINSTRUCTION20 (APUFCMINSTRUCTION[20], APUFCMINSTRUCTION_delay[20]);
buf B_APUFCMINSTRUCTION21 (APUFCMINSTRUCTION[21], APUFCMINSTRUCTION_delay[21]);
buf B_APUFCMINSTRUCTION22 (APUFCMINSTRUCTION[22], APUFCMINSTRUCTION_delay[22]);
buf B_APUFCMINSTRUCTION23 (APUFCMINSTRUCTION[23], APUFCMINSTRUCTION_delay[23]);
buf B_APUFCMINSTRUCTION24 (APUFCMINSTRUCTION[24], APUFCMINSTRUCTION_delay[24]);
buf B_APUFCMINSTRUCTION25 (APUFCMINSTRUCTION[25], APUFCMINSTRUCTION_delay[25]);
buf B_APUFCMINSTRUCTION26 (APUFCMINSTRUCTION[26], APUFCMINSTRUCTION_delay[26]);
buf B_APUFCMINSTRUCTION27 (APUFCMINSTRUCTION[27], APUFCMINSTRUCTION_delay[27]);
buf B_APUFCMINSTRUCTION28 (APUFCMINSTRUCTION[28], APUFCMINSTRUCTION_delay[28]);
buf B_APUFCMINSTRUCTION29 (APUFCMINSTRUCTION[29], APUFCMINSTRUCTION_delay[29]);
buf B_APUFCMINSTRUCTION30 (APUFCMINSTRUCTION[30], APUFCMINSTRUCTION_delay[30]);
buf B_APUFCMINSTRUCTION31 (APUFCMINSTRUCTION[31], APUFCMINSTRUCTION_delay[31]);
buf B_APUFCMINSTRVALID (APUFCMINSTRVALID, APUFCMINSTRVALID_delay);
buf B_APUFCMLOADBYTEEN0 (APUFCMLOADBYTEEN[0], APUFCMLOADBYTEEN_delay[0]);
buf B_APUFCMLOADBYTEEN1 (APUFCMLOADBYTEEN[1], APUFCMLOADBYTEEN_delay[1]);
buf B_APUFCMLOADBYTEEN2 (APUFCMLOADBYTEEN[2], APUFCMLOADBYTEEN_delay[2]);
buf B_APUFCMLOADBYTEEN3 (APUFCMLOADBYTEEN[3], APUFCMLOADBYTEEN_delay[3]);
buf B_APUFCMLOADDATA0 (APUFCMLOADDATA[0], APUFCMLOADDATA_delay[0]);
buf B_APUFCMLOADDATA1 (APUFCMLOADDATA[1], APUFCMLOADDATA_delay[1]);
buf B_APUFCMLOADDATA2 (APUFCMLOADDATA[2], APUFCMLOADDATA_delay[2]);
buf B_APUFCMLOADDATA3 (APUFCMLOADDATA[3], APUFCMLOADDATA_delay[3]);
buf B_APUFCMLOADDATA4 (APUFCMLOADDATA[4], APUFCMLOADDATA_delay[4]);
buf B_APUFCMLOADDATA5 (APUFCMLOADDATA[5], APUFCMLOADDATA_delay[5]);
buf B_APUFCMLOADDATA6 (APUFCMLOADDATA[6], APUFCMLOADDATA_delay[6]);
buf B_APUFCMLOADDATA7 (APUFCMLOADDATA[7], APUFCMLOADDATA_delay[7]);
buf B_APUFCMLOADDATA8 (APUFCMLOADDATA[8], APUFCMLOADDATA_delay[8]);
buf B_APUFCMLOADDATA9 (APUFCMLOADDATA[9], APUFCMLOADDATA_delay[9]);
buf B_APUFCMLOADDATA10 (APUFCMLOADDATA[10], APUFCMLOADDATA_delay[10]);
buf B_APUFCMLOADDATA11 (APUFCMLOADDATA[11], APUFCMLOADDATA_delay[11]);
buf B_APUFCMLOADDATA12 (APUFCMLOADDATA[12], APUFCMLOADDATA_delay[12]);
buf B_APUFCMLOADDATA13 (APUFCMLOADDATA[13], APUFCMLOADDATA_delay[13]);
buf B_APUFCMLOADDATA14 (APUFCMLOADDATA[14], APUFCMLOADDATA_delay[14]);
buf B_APUFCMLOADDATA15 (APUFCMLOADDATA[15], APUFCMLOADDATA_delay[15]);
buf B_APUFCMLOADDATA16 (APUFCMLOADDATA[16], APUFCMLOADDATA_delay[16]);
buf B_APUFCMLOADDATA17 (APUFCMLOADDATA[17], APUFCMLOADDATA_delay[17]);
buf B_APUFCMLOADDATA18 (APUFCMLOADDATA[18], APUFCMLOADDATA_delay[18]);
buf B_APUFCMLOADDATA19 (APUFCMLOADDATA[19], APUFCMLOADDATA_delay[19]);
buf B_APUFCMLOADDATA20 (APUFCMLOADDATA[20], APUFCMLOADDATA_delay[20]);
buf B_APUFCMLOADDATA21 (APUFCMLOADDATA[21], APUFCMLOADDATA_delay[21]);
buf B_APUFCMLOADDATA22 (APUFCMLOADDATA[22], APUFCMLOADDATA_delay[22]);
buf B_APUFCMLOADDATA23 (APUFCMLOADDATA[23], APUFCMLOADDATA_delay[23]);
buf B_APUFCMLOADDATA24 (APUFCMLOADDATA[24], APUFCMLOADDATA_delay[24]);
buf B_APUFCMLOADDATA25 (APUFCMLOADDATA[25], APUFCMLOADDATA_delay[25]);
buf B_APUFCMLOADDATA26 (APUFCMLOADDATA[26], APUFCMLOADDATA_delay[26]);
buf B_APUFCMLOADDATA27 (APUFCMLOADDATA[27], APUFCMLOADDATA_delay[27]);
buf B_APUFCMLOADDATA28 (APUFCMLOADDATA[28], APUFCMLOADDATA_delay[28]);
buf B_APUFCMLOADDATA29 (APUFCMLOADDATA[29], APUFCMLOADDATA_delay[29]);
buf B_APUFCMLOADDATA30 (APUFCMLOADDATA[30], APUFCMLOADDATA_delay[30]);
buf B_APUFCMLOADDATA31 (APUFCMLOADDATA[31], APUFCMLOADDATA_delay[31]);
buf B_APUFCMLOADDVALID (APUFCMLOADDVALID, APUFCMLOADDVALID_delay);
buf B_APUFCMOPERANDVALID (APUFCMOPERANDVALID, APUFCMOPERANDVALID_delay);
buf B_APUFCMRADATA0 (APUFCMRADATA[0], APUFCMRADATA_delay[0]);
buf B_APUFCMRADATA1 (APUFCMRADATA[1], APUFCMRADATA_delay[1]);
buf B_APUFCMRADATA2 (APUFCMRADATA[2], APUFCMRADATA_delay[2]);
buf B_APUFCMRADATA3 (APUFCMRADATA[3], APUFCMRADATA_delay[3]);
buf B_APUFCMRADATA4 (APUFCMRADATA[4], APUFCMRADATA_delay[4]);
buf B_APUFCMRADATA5 (APUFCMRADATA[5], APUFCMRADATA_delay[5]);
buf B_APUFCMRADATA6 (APUFCMRADATA[6], APUFCMRADATA_delay[6]);
buf B_APUFCMRADATA7 (APUFCMRADATA[7], APUFCMRADATA_delay[7]);
buf B_APUFCMRADATA8 (APUFCMRADATA[8], APUFCMRADATA_delay[8]);
buf B_APUFCMRADATA9 (APUFCMRADATA[9], APUFCMRADATA_delay[9]);
buf B_APUFCMRADATA10 (APUFCMRADATA[10], APUFCMRADATA_delay[10]);
buf B_APUFCMRADATA11 (APUFCMRADATA[11], APUFCMRADATA_delay[11]);
buf B_APUFCMRADATA12 (APUFCMRADATA[12], APUFCMRADATA_delay[12]);
buf B_APUFCMRADATA13 (APUFCMRADATA[13], APUFCMRADATA_delay[13]);
buf B_APUFCMRADATA14 (APUFCMRADATA[14], APUFCMRADATA_delay[14]);
buf B_APUFCMRADATA15 (APUFCMRADATA[15], APUFCMRADATA_delay[15]);
buf B_APUFCMRADATA16 (APUFCMRADATA[16], APUFCMRADATA_delay[16]);
buf B_APUFCMRADATA17 (APUFCMRADATA[17], APUFCMRADATA_delay[17]);
buf B_APUFCMRADATA18 (APUFCMRADATA[18], APUFCMRADATA_delay[18]);
buf B_APUFCMRADATA19 (APUFCMRADATA[19], APUFCMRADATA_delay[19]);
buf B_APUFCMRADATA20 (APUFCMRADATA[20], APUFCMRADATA_delay[20]);
buf B_APUFCMRADATA21 (APUFCMRADATA[21], APUFCMRADATA_delay[21]);
buf B_APUFCMRADATA22 (APUFCMRADATA[22], APUFCMRADATA_delay[22]);
buf B_APUFCMRADATA23 (APUFCMRADATA[23], APUFCMRADATA_delay[23]);
buf B_APUFCMRADATA24 (APUFCMRADATA[24], APUFCMRADATA_delay[24]);
buf B_APUFCMRADATA25 (APUFCMRADATA[25], APUFCMRADATA_delay[25]);
buf B_APUFCMRADATA26 (APUFCMRADATA[26], APUFCMRADATA_delay[26]);
buf B_APUFCMRADATA27 (APUFCMRADATA[27], APUFCMRADATA_delay[27]);
buf B_APUFCMRADATA28 (APUFCMRADATA[28], APUFCMRADATA_delay[28]);
buf B_APUFCMRADATA29 (APUFCMRADATA[29], APUFCMRADATA_delay[29]);
buf B_APUFCMRADATA30 (APUFCMRADATA[30], APUFCMRADATA_delay[30]);
buf B_APUFCMRADATA31 (APUFCMRADATA[31], APUFCMRADATA_delay[31]);
buf B_APUFCMRBDATA0 (APUFCMRBDATA[0], APUFCMRBDATA_delay[0]);
buf B_APUFCMRBDATA1 (APUFCMRBDATA[1], APUFCMRBDATA_delay[1]);
buf B_APUFCMRBDATA2 (APUFCMRBDATA[2], APUFCMRBDATA_delay[2]);
buf B_APUFCMRBDATA3 (APUFCMRBDATA[3], APUFCMRBDATA_delay[3]);
buf B_APUFCMRBDATA4 (APUFCMRBDATA[4], APUFCMRBDATA_delay[4]);
buf B_APUFCMRBDATA5 (APUFCMRBDATA[5], APUFCMRBDATA_delay[5]);
buf B_APUFCMRBDATA6 (APUFCMRBDATA[6], APUFCMRBDATA_delay[6]);
buf B_APUFCMRBDATA7 (APUFCMRBDATA[7], APUFCMRBDATA_delay[7]);
buf B_APUFCMRBDATA8 (APUFCMRBDATA[8], APUFCMRBDATA_delay[8]);
buf B_APUFCMRBDATA9 (APUFCMRBDATA[9], APUFCMRBDATA_delay[9]);
buf B_APUFCMRBDATA10 (APUFCMRBDATA[10], APUFCMRBDATA_delay[10]);
buf B_APUFCMRBDATA11 (APUFCMRBDATA[11], APUFCMRBDATA_delay[11]);
buf B_APUFCMRBDATA12 (APUFCMRBDATA[12], APUFCMRBDATA_delay[12]);
buf B_APUFCMRBDATA13 (APUFCMRBDATA[13], APUFCMRBDATA_delay[13]);
buf B_APUFCMRBDATA14 (APUFCMRBDATA[14], APUFCMRBDATA_delay[14]);
buf B_APUFCMRBDATA15 (APUFCMRBDATA[15], APUFCMRBDATA_delay[15]);
buf B_APUFCMRBDATA16 (APUFCMRBDATA[16], APUFCMRBDATA_delay[16]);
buf B_APUFCMRBDATA17 (APUFCMRBDATA[17], APUFCMRBDATA_delay[17]);
buf B_APUFCMRBDATA18 (APUFCMRBDATA[18], APUFCMRBDATA_delay[18]);
buf B_APUFCMRBDATA19 (APUFCMRBDATA[19], APUFCMRBDATA_delay[19]);
buf B_APUFCMRBDATA20 (APUFCMRBDATA[20], APUFCMRBDATA_delay[20]);
buf B_APUFCMRBDATA21 (APUFCMRBDATA[21], APUFCMRBDATA_delay[21]);
buf B_APUFCMRBDATA22 (APUFCMRBDATA[22], APUFCMRBDATA_delay[22]);
buf B_APUFCMRBDATA23 (APUFCMRBDATA[23], APUFCMRBDATA_delay[23]);
buf B_APUFCMRBDATA24 (APUFCMRBDATA[24], APUFCMRBDATA_delay[24]);
buf B_APUFCMRBDATA25 (APUFCMRBDATA[25], APUFCMRBDATA_delay[25]);
buf B_APUFCMRBDATA26 (APUFCMRBDATA[26], APUFCMRBDATA_delay[26]);
buf B_APUFCMRBDATA27 (APUFCMRBDATA[27], APUFCMRBDATA_delay[27]);
buf B_APUFCMRBDATA28 (APUFCMRBDATA[28], APUFCMRBDATA_delay[28]);
buf B_APUFCMRBDATA29 (APUFCMRBDATA[29], APUFCMRBDATA_delay[29]);
buf B_APUFCMRBDATA30 (APUFCMRBDATA[30], APUFCMRBDATA_delay[30]);
buf B_APUFCMRBDATA31 (APUFCMRBDATA[31], APUFCMRBDATA_delay[31]);
buf B_APUFCMWRITEBACKOK (APUFCMWRITEBACKOK, APUFCMWRITEBACKOK_delay);
buf B_APUFCMXERCA (APUFCMXERCA, APUFCMXERCA_delay);
buf B_C405CPMCORESLEEPREQ (C405CPMCORESLEEPREQ, C405CPMCORESLEEPREQ_delay);
buf B_C405CPMMSRCE (C405CPMMSRCE, C405CPMMSRCE_delay);
buf B_C405CPMMSREE (C405CPMMSREE, C405CPMMSREE_delay);
buf B_C405CPMTIMERIRQ (C405CPMTIMERIRQ, C405CPMTIMERIRQ_delay);
buf B_C405CPMTIMERRESETREQ (C405CPMTIMERRESETREQ, C405CPMTIMERRESETREQ_delay);
buf B_C405DBGLOADDATAONAPUDBUS (C405DBGLOADDATAONAPUDBUS, C405DBGLOADDATAONAPUDBUS_delay);
buf B_C405DBGMSRWE (C405DBGMSRWE, C405DBGMSRWE_delay);
buf B_C405DBGSTOPACK (C405DBGSTOPACK, C405DBGSTOPACK_delay);
buf B_C405DBGWBCOMPLETE (C405DBGWBCOMPLETE, C405DBGWBCOMPLETE_delay);
buf B_C405DBGWBFULL (C405DBGWBFULL, C405DBGWBFULL_delay);
buf B_C405DBGWBIAR0 (C405DBGWBIAR[0], C405DBGWBIAR_delay[0]);
buf B_C405DBGWBIAR1 (C405DBGWBIAR[1], C405DBGWBIAR_delay[1]);
buf B_C405DBGWBIAR2 (C405DBGWBIAR[2], C405DBGWBIAR_delay[2]);
buf B_C405DBGWBIAR3 (C405DBGWBIAR[3], C405DBGWBIAR_delay[3]);
buf B_C405DBGWBIAR4 (C405DBGWBIAR[4], C405DBGWBIAR_delay[4]);
buf B_C405DBGWBIAR5 (C405DBGWBIAR[5], C405DBGWBIAR_delay[5]);
buf B_C405DBGWBIAR6 (C405DBGWBIAR[6], C405DBGWBIAR_delay[6]);
buf B_C405DBGWBIAR7 (C405DBGWBIAR[7], C405DBGWBIAR_delay[7]);
buf B_C405DBGWBIAR8 (C405DBGWBIAR[8], C405DBGWBIAR_delay[8]);
buf B_C405DBGWBIAR9 (C405DBGWBIAR[9], C405DBGWBIAR_delay[9]);
buf B_C405DBGWBIAR10 (C405DBGWBIAR[10], C405DBGWBIAR_delay[10]);
buf B_C405DBGWBIAR11 (C405DBGWBIAR[11], C405DBGWBIAR_delay[11]);
buf B_C405DBGWBIAR12 (C405DBGWBIAR[12], C405DBGWBIAR_delay[12]);
buf B_C405DBGWBIAR13 (C405DBGWBIAR[13], C405DBGWBIAR_delay[13]);
buf B_C405DBGWBIAR14 (C405DBGWBIAR[14], C405DBGWBIAR_delay[14]);
buf B_C405DBGWBIAR15 (C405DBGWBIAR[15], C405DBGWBIAR_delay[15]);
buf B_C405DBGWBIAR16 (C405DBGWBIAR[16], C405DBGWBIAR_delay[16]);
buf B_C405DBGWBIAR17 (C405DBGWBIAR[17], C405DBGWBIAR_delay[17]);
buf B_C405DBGWBIAR18 (C405DBGWBIAR[18], C405DBGWBIAR_delay[18]);
buf B_C405DBGWBIAR19 (C405DBGWBIAR[19], C405DBGWBIAR_delay[19]);
buf B_C405DBGWBIAR20 (C405DBGWBIAR[20], C405DBGWBIAR_delay[20]);
buf B_C405DBGWBIAR21 (C405DBGWBIAR[21], C405DBGWBIAR_delay[21]);
buf B_C405DBGWBIAR22 (C405DBGWBIAR[22], C405DBGWBIAR_delay[22]);
buf B_C405DBGWBIAR23 (C405DBGWBIAR[23], C405DBGWBIAR_delay[23]);
buf B_C405DBGWBIAR24 (C405DBGWBIAR[24], C405DBGWBIAR_delay[24]);
buf B_C405DBGWBIAR25 (C405DBGWBIAR[25], C405DBGWBIAR_delay[25]);
buf B_C405DBGWBIAR26 (C405DBGWBIAR[26], C405DBGWBIAR_delay[26]);
buf B_C405DBGWBIAR27 (C405DBGWBIAR[27], C405DBGWBIAR_delay[27]);
buf B_C405DBGWBIAR28 (C405DBGWBIAR[28], C405DBGWBIAR_delay[28]);
buf B_C405DBGWBIAR29 (C405DBGWBIAR[29], C405DBGWBIAR_delay[29]);
buf B_C405JTGCAPTUREDR (C405JTGCAPTUREDR, C405JTGCAPTUREDR_delay);
buf B_C405JTGEXTEST (C405JTGEXTEST, C405JTGEXTEST_delay);
buf B_C405JTGPGMOUT (C405JTGPGMOUT, C405JTGPGMOUT_delay);
buf B_C405JTGSHIFTDR (C405JTGSHIFTDR, C405JTGSHIFTDR_delay);
buf B_C405JTGTDO (C405JTGTDO, C405JTGTDO_delay);
buf B_C405JTGTDOEN (C405JTGTDOEN, C405JTGTDOEN_delay);
buf B_C405JTGUPDATEDR (C405JTGUPDATEDR, C405JTGUPDATEDR_delay);
buf B_C405PLBDCUABORT (C405PLBDCUABORT, C405PLBDCUABORT_delay);
buf B_C405PLBDCUABUS0 (C405PLBDCUABUS[0], C405PLBDCUABUS_delay[0]);
buf B_C405PLBDCUABUS1 (C405PLBDCUABUS[1], C405PLBDCUABUS_delay[1]);
buf B_C405PLBDCUABUS2 (C405PLBDCUABUS[2], C405PLBDCUABUS_delay[2]);
buf B_C405PLBDCUABUS3 (C405PLBDCUABUS[3], C405PLBDCUABUS_delay[3]);
buf B_C405PLBDCUABUS4 (C405PLBDCUABUS[4], C405PLBDCUABUS_delay[4]);
buf B_C405PLBDCUABUS5 (C405PLBDCUABUS[5], C405PLBDCUABUS_delay[5]);
buf B_C405PLBDCUABUS6 (C405PLBDCUABUS[6], C405PLBDCUABUS_delay[6]);
buf B_C405PLBDCUABUS7 (C405PLBDCUABUS[7], C405PLBDCUABUS_delay[7]);
buf B_C405PLBDCUABUS8 (C405PLBDCUABUS[8], C405PLBDCUABUS_delay[8]);
buf B_C405PLBDCUABUS9 (C405PLBDCUABUS[9], C405PLBDCUABUS_delay[9]);
buf B_C405PLBDCUABUS10 (C405PLBDCUABUS[10], C405PLBDCUABUS_delay[10]);
buf B_C405PLBDCUABUS11 (C405PLBDCUABUS[11], C405PLBDCUABUS_delay[11]);
buf B_C405PLBDCUABUS12 (C405PLBDCUABUS[12], C405PLBDCUABUS_delay[12]);
buf B_C405PLBDCUABUS13 (C405PLBDCUABUS[13], C405PLBDCUABUS_delay[13]);
buf B_C405PLBDCUABUS14 (C405PLBDCUABUS[14], C405PLBDCUABUS_delay[14]);
buf B_C405PLBDCUABUS15 (C405PLBDCUABUS[15], C405PLBDCUABUS_delay[15]);
buf B_C405PLBDCUABUS16 (C405PLBDCUABUS[16], C405PLBDCUABUS_delay[16]);
buf B_C405PLBDCUABUS17 (C405PLBDCUABUS[17], C405PLBDCUABUS_delay[17]);
buf B_C405PLBDCUABUS18 (C405PLBDCUABUS[18], C405PLBDCUABUS_delay[18]);
buf B_C405PLBDCUABUS19 (C405PLBDCUABUS[19], C405PLBDCUABUS_delay[19]);
buf B_C405PLBDCUABUS20 (C405PLBDCUABUS[20], C405PLBDCUABUS_delay[20]);
buf B_C405PLBDCUABUS21 (C405PLBDCUABUS[21], C405PLBDCUABUS_delay[21]);
buf B_C405PLBDCUABUS22 (C405PLBDCUABUS[22], C405PLBDCUABUS_delay[22]);
buf B_C405PLBDCUABUS23 (C405PLBDCUABUS[23], C405PLBDCUABUS_delay[23]);
buf B_C405PLBDCUABUS24 (C405PLBDCUABUS[24], C405PLBDCUABUS_delay[24]);
buf B_C405PLBDCUABUS25 (C405PLBDCUABUS[25], C405PLBDCUABUS_delay[25]);
buf B_C405PLBDCUABUS26 (C405PLBDCUABUS[26], C405PLBDCUABUS_delay[26]);
buf B_C405PLBDCUABUS27 (C405PLBDCUABUS[27], C405PLBDCUABUS_delay[27]);
buf B_C405PLBDCUABUS28 (C405PLBDCUABUS[28], C405PLBDCUABUS_delay[28]);
buf B_C405PLBDCUABUS29 (C405PLBDCUABUS[29], C405PLBDCUABUS_delay[29]);
buf B_C405PLBDCUABUS30 (C405PLBDCUABUS[30], C405PLBDCUABUS_delay[30]);
buf B_C405PLBDCUABUS31 (C405PLBDCUABUS[31], C405PLBDCUABUS_delay[31]);
buf B_C405PLBDCUBE0 (C405PLBDCUBE[0], C405PLBDCUBE_delay[0]);
buf B_C405PLBDCUBE1 (C405PLBDCUBE[1], C405PLBDCUBE_delay[1]);
buf B_C405PLBDCUBE2 (C405PLBDCUBE[2], C405PLBDCUBE_delay[2]);
buf B_C405PLBDCUBE3 (C405PLBDCUBE[3], C405PLBDCUBE_delay[3]);
buf B_C405PLBDCUBE4 (C405PLBDCUBE[4], C405PLBDCUBE_delay[4]);
buf B_C405PLBDCUBE5 (C405PLBDCUBE[5], C405PLBDCUBE_delay[5]);
buf B_C405PLBDCUBE6 (C405PLBDCUBE[6], C405PLBDCUBE_delay[6]);
buf B_C405PLBDCUBE7 (C405PLBDCUBE[7], C405PLBDCUBE_delay[7]);
buf B_C405PLBDCUCACHEABLE (C405PLBDCUCACHEABLE, C405PLBDCUCACHEABLE_delay);
buf B_C405PLBDCUGUARDED (C405PLBDCUGUARDED, C405PLBDCUGUARDED_delay);
buf B_C405PLBDCUPRIORITY0 (C405PLBDCUPRIORITY[0], C405PLBDCUPRIORITY_delay[0]);
buf B_C405PLBDCUPRIORITY1 (C405PLBDCUPRIORITY[1], C405PLBDCUPRIORITY_delay[1]);
buf B_C405PLBDCUREQUEST (C405PLBDCUREQUEST, C405PLBDCUREQUEST_delay);
buf B_C405PLBDCURNW (C405PLBDCURNW, C405PLBDCURNW_delay);
buf B_C405PLBDCUSIZE2 (C405PLBDCUSIZE2, C405PLBDCUSIZE2_delay);
buf B_C405PLBDCUU0ATTR (C405PLBDCUU0ATTR, C405PLBDCUU0ATTR_delay);
buf B_C405PLBDCUWRDBUS0 (C405PLBDCUWRDBUS[0], C405PLBDCUWRDBUS_delay[0]);
buf B_C405PLBDCUWRDBUS1 (C405PLBDCUWRDBUS[1], C405PLBDCUWRDBUS_delay[1]);
buf B_C405PLBDCUWRDBUS2 (C405PLBDCUWRDBUS[2], C405PLBDCUWRDBUS_delay[2]);
buf B_C405PLBDCUWRDBUS3 (C405PLBDCUWRDBUS[3], C405PLBDCUWRDBUS_delay[3]);
buf B_C405PLBDCUWRDBUS4 (C405PLBDCUWRDBUS[4], C405PLBDCUWRDBUS_delay[4]);
buf B_C405PLBDCUWRDBUS5 (C405PLBDCUWRDBUS[5], C405PLBDCUWRDBUS_delay[5]);
buf B_C405PLBDCUWRDBUS6 (C405PLBDCUWRDBUS[6], C405PLBDCUWRDBUS_delay[6]);
buf B_C405PLBDCUWRDBUS7 (C405PLBDCUWRDBUS[7], C405PLBDCUWRDBUS_delay[7]);
buf B_C405PLBDCUWRDBUS8 (C405PLBDCUWRDBUS[8], C405PLBDCUWRDBUS_delay[8]);
buf B_C405PLBDCUWRDBUS9 (C405PLBDCUWRDBUS[9], C405PLBDCUWRDBUS_delay[9]);
buf B_C405PLBDCUWRDBUS10 (C405PLBDCUWRDBUS[10], C405PLBDCUWRDBUS_delay[10]);
buf B_C405PLBDCUWRDBUS11 (C405PLBDCUWRDBUS[11], C405PLBDCUWRDBUS_delay[11]);
buf B_C405PLBDCUWRDBUS12 (C405PLBDCUWRDBUS[12], C405PLBDCUWRDBUS_delay[12]);
buf B_C405PLBDCUWRDBUS13 (C405PLBDCUWRDBUS[13], C405PLBDCUWRDBUS_delay[13]);
buf B_C405PLBDCUWRDBUS14 (C405PLBDCUWRDBUS[14], C405PLBDCUWRDBUS_delay[14]);
buf B_C405PLBDCUWRDBUS15 (C405PLBDCUWRDBUS[15], C405PLBDCUWRDBUS_delay[15]);
buf B_C405PLBDCUWRDBUS16 (C405PLBDCUWRDBUS[16], C405PLBDCUWRDBUS_delay[16]);
buf B_C405PLBDCUWRDBUS17 (C405PLBDCUWRDBUS[17], C405PLBDCUWRDBUS_delay[17]);
buf B_C405PLBDCUWRDBUS18 (C405PLBDCUWRDBUS[18], C405PLBDCUWRDBUS_delay[18]);
buf B_C405PLBDCUWRDBUS19 (C405PLBDCUWRDBUS[19], C405PLBDCUWRDBUS_delay[19]);
buf B_C405PLBDCUWRDBUS20 (C405PLBDCUWRDBUS[20], C405PLBDCUWRDBUS_delay[20]);
buf B_C405PLBDCUWRDBUS21 (C405PLBDCUWRDBUS[21], C405PLBDCUWRDBUS_delay[21]);
buf B_C405PLBDCUWRDBUS22 (C405PLBDCUWRDBUS[22], C405PLBDCUWRDBUS_delay[22]);
buf B_C405PLBDCUWRDBUS23 (C405PLBDCUWRDBUS[23], C405PLBDCUWRDBUS_delay[23]);
buf B_C405PLBDCUWRDBUS24 (C405PLBDCUWRDBUS[24], C405PLBDCUWRDBUS_delay[24]);
buf B_C405PLBDCUWRDBUS25 (C405PLBDCUWRDBUS[25], C405PLBDCUWRDBUS_delay[25]);
buf B_C405PLBDCUWRDBUS26 (C405PLBDCUWRDBUS[26], C405PLBDCUWRDBUS_delay[26]);
buf B_C405PLBDCUWRDBUS27 (C405PLBDCUWRDBUS[27], C405PLBDCUWRDBUS_delay[27]);
buf B_C405PLBDCUWRDBUS28 (C405PLBDCUWRDBUS[28], C405PLBDCUWRDBUS_delay[28]);
buf B_C405PLBDCUWRDBUS29 (C405PLBDCUWRDBUS[29], C405PLBDCUWRDBUS_delay[29]);
buf B_C405PLBDCUWRDBUS30 (C405PLBDCUWRDBUS[30], C405PLBDCUWRDBUS_delay[30]);
buf B_C405PLBDCUWRDBUS31 (C405PLBDCUWRDBUS[31], C405PLBDCUWRDBUS_delay[31]);
buf B_C405PLBDCUWRDBUS32 (C405PLBDCUWRDBUS[32], C405PLBDCUWRDBUS_delay[32]);
buf B_C405PLBDCUWRDBUS33 (C405PLBDCUWRDBUS[33], C405PLBDCUWRDBUS_delay[33]);
buf B_C405PLBDCUWRDBUS34 (C405PLBDCUWRDBUS[34], C405PLBDCUWRDBUS_delay[34]);
buf B_C405PLBDCUWRDBUS35 (C405PLBDCUWRDBUS[35], C405PLBDCUWRDBUS_delay[35]);
buf B_C405PLBDCUWRDBUS36 (C405PLBDCUWRDBUS[36], C405PLBDCUWRDBUS_delay[36]);
buf B_C405PLBDCUWRDBUS37 (C405PLBDCUWRDBUS[37], C405PLBDCUWRDBUS_delay[37]);
buf B_C405PLBDCUWRDBUS38 (C405PLBDCUWRDBUS[38], C405PLBDCUWRDBUS_delay[38]);
buf B_C405PLBDCUWRDBUS39 (C405PLBDCUWRDBUS[39], C405PLBDCUWRDBUS_delay[39]);
buf B_C405PLBDCUWRDBUS40 (C405PLBDCUWRDBUS[40], C405PLBDCUWRDBUS_delay[40]);
buf B_C405PLBDCUWRDBUS41 (C405PLBDCUWRDBUS[41], C405PLBDCUWRDBUS_delay[41]);
buf B_C405PLBDCUWRDBUS42 (C405PLBDCUWRDBUS[42], C405PLBDCUWRDBUS_delay[42]);
buf B_C405PLBDCUWRDBUS43 (C405PLBDCUWRDBUS[43], C405PLBDCUWRDBUS_delay[43]);
buf B_C405PLBDCUWRDBUS44 (C405PLBDCUWRDBUS[44], C405PLBDCUWRDBUS_delay[44]);
buf B_C405PLBDCUWRDBUS45 (C405PLBDCUWRDBUS[45], C405PLBDCUWRDBUS_delay[45]);
buf B_C405PLBDCUWRDBUS46 (C405PLBDCUWRDBUS[46], C405PLBDCUWRDBUS_delay[46]);
buf B_C405PLBDCUWRDBUS47 (C405PLBDCUWRDBUS[47], C405PLBDCUWRDBUS_delay[47]);
buf B_C405PLBDCUWRDBUS48 (C405PLBDCUWRDBUS[48], C405PLBDCUWRDBUS_delay[48]);
buf B_C405PLBDCUWRDBUS49 (C405PLBDCUWRDBUS[49], C405PLBDCUWRDBUS_delay[49]);
buf B_C405PLBDCUWRDBUS50 (C405PLBDCUWRDBUS[50], C405PLBDCUWRDBUS_delay[50]);
buf B_C405PLBDCUWRDBUS51 (C405PLBDCUWRDBUS[51], C405PLBDCUWRDBUS_delay[51]);
buf B_C405PLBDCUWRDBUS52 (C405PLBDCUWRDBUS[52], C405PLBDCUWRDBUS_delay[52]);
buf B_C405PLBDCUWRDBUS53 (C405PLBDCUWRDBUS[53], C405PLBDCUWRDBUS_delay[53]);
buf B_C405PLBDCUWRDBUS54 (C405PLBDCUWRDBUS[54], C405PLBDCUWRDBUS_delay[54]);
buf B_C405PLBDCUWRDBUS55 (C405PLBDCUWRDBUS[55], C405PLBDCUWRDBUS_delay[55]);
buf B_C405PLBDCUWRDBUS56 (C405PLBDCUWRDBUS[56], C405PLBDCUWRDBUS_delay[56]);
buf B_C405PLBDCUWRDBUS57 (C405PLBDCUWRDBUS[57], C405PLBDCUWRDBUS_delay[57]);
buf B_C405PLBDCUWRDBUS58 (C405PLBDCUWRDBUS[58], C405PLBDCUWRDBUS_delay[58]);
buf B_C405PLBDCUWRDBUS59 (C405PLBDCUWRDBUS[59], C405PLBDCUWRDBUS_delay[59]);
buf B_C405PLBDCUWRDBUS60 (C405PLBDCUWRDBUS[60], C405PLBDCUWRDBUS_delay[60]);
buf B_C405PLBDCUWRDBUS61 (C405PLBDCUWRDBUS[61], C405PLBDCUWRDBUS_delay[61]);
buf B_C405PLBDCUWRDBUS62 (C405PLBDCUWRDBUS[62], C405PLBDCUWRDBUS_delay[62]);
buf B_C405PLBDCUWRDBUS63 (C405PLBDCUWRDBUS[63], C405PLBDCUWRDBUS_delay[63]);
buf B_C405PLBDCUWRITETHRU (C405PLBDCUWRITETHRU, C405PLBDCUWRITETHRU_delay);
buf B_C405PLBICUABORT (C405PLBICUABORT, C405PLBICUABORT_delay);
buf B_C405PLBICUABUS0 (C405PLBICUABUS[0], C405PLBICUABUS_delay[0]);
buf B_C405PLBICUABUS1 (C405PLBICUABUS[1], C405PLBICUABUS_delay[1]);
buf B_C405PLBICUABUS2 (C405PLBICUABUS[2], C405PLBICUABUS_delay[2]);
buf B_C405PLBICUABUS3 (C405PLBICUABUS[3], C405PLBICUABUS_delay[3]);
buf B_C405PLBICUABUS4 (C405PLBICUABUS[4], C405PLBICUABUS_delay[4]);
buf B_C405PLBICUABUS5 (C405PLBICUABUS[5], C405PLBICUABUS_delay[5]);
buf B_C405PLBICUABUS6 (C405PLBICUABUS[6], C405PLBICUABUS_delay[6]);
buf B_C405PLBICUABUS7 (C405PLBICUABUS[7], C405PLBICUABUS_delay[7]);
buf B_C405PLBICUABUS8 (C405PLBICUABUS[8], C405PLBICUABUS_delay[8]);
buf B_C405PLBICUABUS9 (C405PLBICUABUS[9], C405PLBICUABUS_delay[9]);
buf B_C405PLBICUABUS10 (C405PLBICUABUS[10], C405PLBICUABUS_delay[10]);
buf B_C405PLBICUABUS11 (C405PLBICUABUS[11], C405PLBICUABUS_delay[11]);
buf B_C405PLBICUABUS12 (C405PLBICUABUS[12], C405PLBICUABUS_delay[12]);
buf B_C405PLBICUABUS13 (C405PLBICUABUS[13], C405PLBICUABUS_delay[13]);
buf B_C405PLBICUABUS14 (C405PLBICUABUS[14], C405PLBICUABUS_delay[14]);
buf B_C405PLBICUABUS15 (C405PLBICUABUS[15], C405PLBICUABUS_delay[15]);
buf B_C405PLBICUABUS16 (C405PLBICUABUS[16], C405PLBICUABUS_delay[16]);
buf B_C405PLBICUABUS17 (C405PLBICUABUS[17], C405PLBICUABUS_delay[17]);
buf B_C405PLBICUABUS18 (C405PLBICUABUS[18], C405PLBICUABUS_delay[18]);
buf B_C405PLBICUABUS19 (C405PLBICUABUS[19], C405PLBICUABUS_delay[19]);
buf B_C405PLBICUABUS20 (C405PLBICUABUS[20], C405PLBICUABUS_delay[20]);
buf B_C405PLBICUABUS21 (C405PLBICUABUS[21], C405PLBICUABUS_delay[21]);
buf B_C405PLBICUABUS22 (C405PLBICUABUS[22], C405PLBICUABUS_delay[22]);
buf B_C405PLBICUABUS23 (C405PLBICUABUS[23], C405PLBICUABUS_delay[23]);
buf B_C405PLBICUABUS24 (C405PLBICUABUS[24], C405PLBICUABUS_delay[24]);
buf B_C405PLBICUABUS25 (C405PLBICUABUS[25], C405PLBICUABUS_delay[25]);
buf B_C405PLBICUABUS26 (C405PLBICUABUS[26], C405PLBICUABUS_delay[26]);
buf B_C405PLBICUABUS27 (C405PLBICUABUS[27], C405PLBICUABUS_delay[27]);
buf B_C405PLBICUABUS28 (C405PLBICUABUS[28], C405PLBICUABUS_delay[28]);
buf B_C405PLBICUABUS29 (C405PLBICUABUS[29], C405PLBICUABUS_delay[29]);
buf B_C405PLBICUCACHEABLE (C405PLBICUCACHEABLE, C405PLBICUCACHEABLE_delay);
buf B_C405PLBICUPRIORITY0 (C405PLBICUPRIORITY[0], C405PLBICUPRIORITY_delay[0]);
buf B_C405PLBICUPRIORITY1 (C405PLBICUPRIORITY[1], C405PLBICUPRIORITY_delay[1]);
buf B_C405PLBICUREQUEST (C405PLBICUREQUEST, C405PLBICUREQUEST_delay);
buf B_C405PLBICUSIZE2 (C405PLBICUSIZE[2], C405PLBICUSIZE_delay[2]);
buf B_C405PLBICUSIZE3 (C405PLBICUSIZE[3], C405PLBICUSIZE_delay[3]);
buf B_C405PLBICUU0ATTR (C405PLBICUU0ATTR, C405PLBICUU0ATTR_delay);
buf B_C405RSTCHIPRESETREQ (C405RSTCHIPRESETREQ, C405RSTCHIPRESETREQ_delay);
buf B_C405RSTCORERESETREQ (C405RSTCORERESETREQ, C405RSTCORERESETREQ_delay);
buf B_C405RSTSYSRESETREQ (C405RSTSYSRESETREQ, C405RSTSYSRESETREQ_delay);
buf B_C405TRCCYCLE (C405TRCCYCLE, C405TRCCYCLE_delay);
buf B_C405TRCEVENEXECUTIONSTATUS0 (C405TRCEVENEXECUTIONSTATUS[0], C405TRCEVENEXECUTIONSTATUS_delay[0]);
buf B_C405TRCEVENEXECUTIONSTATUS1 (C405TRCEVENEXECUTIONSTATUS[1], C405TRCEVENEXECUTIONSTATUS_delay[1]);
buf B_C405TRCODDEXECUTIONSTATUS0 (C405TRCODDEXECUTIONSTATUS[0], C405TRCODDEXECUTIONSTATUS_delay[0]);
buf B_C405TRCODDEXECUTIONSTATUS1 (C405TRCODDEXECUTIONSTATUS[1], C405TRCODDEXECUTIONSTATUS_delay[1]);
buf B_C405TRCTRACESTATUS0 (C405TRCTRACESTATUS[0], C405TRCTRACESTATUS_delay[0]);
buf B_C405TRCTRACESTATUS1 (C405TRCTRACESTATUS[1], C405TRCTRACESTATUS_delay[1]);
buf B_C405TRCTRACESTATUS2 (C405TRCTRACESTATUS[2], C405TRCTRACESTATUS_delay[2]);
buf B_C405TRCTRACESTATUS3 (C405TRCTRACESTATUS[3], C405TRCTRACESTATUS_delay[3]);
buf B_C405TRCTRIGGEREVENTOUT (C405TRCTRIGGEREVENTOUT, C405TRCTRIGGEREVENTOUT_delay);
buf B_C405TRCTRIGGEREVENTTYPE0 (C405TRCTRIGGEREVENTTYPE[0], C405TRCTRIGGEREVENTTYPE_delay[0]);
buf B_C405TRCTRIGGEREVENTTYPE1 (C405TRCTRIGGEREVENTTYPE[1], C405TRCTRIGGEREVENTTYPE_delay[1]);
buf B_C405TRCTRIGGEREVENTTYPE2 (C405TRCTRIGGEREVENTTYPE[2], C405TRCTRIGGEREVENTTYPE_delay[2]);
buf B_C405TRCTRIGGEREVENTTYPE3 (C405TRCTRIGGEREVENTTYPE[3], C405TRCTRIGGEREVENTTYPE_delay[3]);
buf B_C405TRCTRIGGEREVENTTYPE4 (C405TRCTRIGGEREVENTTYPE[4], C405TRCTRIGGEREVENTTYPE_delay[4]);
buf B_C405TRCTRIGGEREVENTTYPE5 (C405TRCTRIGGEREVENTTYPE[5], C405TRCTRIGGEREVENTTYPE_delay[5]);
buf B_C405TRCTRIGGEREVENTTYPE6 (C405TRCTRIGGEREVENTTYPE[6], C405TRCTRIGGEREVENTTYPE_delay[6]);
buf B_C405TRCTRIGGEREVENTTYPE7 (C405TRCTRIGGEREVENTTYPE[7], C405TRCTRIGGEREVENTTYPE_delay[7]);
buf B_C405TRCTRIGGEREVENTTYPE8 (C405TRCTRIGGEREVENTTYPE[8], C405TRCTRIGGEREVENTTYPE_delay[8]);
buf B_C405TRCTRIGGEREVENTTYPE9 (C405TRCTRIGGEREVENTTYPE[9], C405TRCTRIGGEREVENTTYPE_delay[9]);
buf B_C405TRCTRIGGEREVENTTYPE10 (C405TRCTRIGGEREVENTTYPE[10], C405TRCTRIGGEREVENTTYPE_delay[10]);
buf B_C405XXXMACHINECHECK (C405XXXMACHINECHECK, C405XXXMACHINECHECK_delay);
buf B_DCREMACENABLER (DCREMACENABLER, DCREMACENABLER_delay);
buf B_DSOCMBRAMABUS8 (DSOCMBRAMABUS[8], DSOCMBRAMABUS_delay[8]);
buf B_DSOCMBRAMABUS9 (DSOCMBRAMABUS[9], DSOCMBRAMABUS_delay[9]);
buf B_DSOCMBRAMABUS10 (DSOCMBRAMABUS[10], DSOCMBRAMABUS_delay[10]);
buf B_DSOCMBRAMABUS11 (DSOCMBRAMABUS[11], DSOCMBRAMABUS_delay[11]);
buf B_DSOCMBRAMABUS12 (DSOCMBRAMABUS[12], DSOCMBRAMABUS_delay[12]);
buf B_DSOCMBRAMABUS13 (DSOCMBRAMABUS[13], DSOCMBRAMABUS_delay[13]);
buf B_DSOCMBRAMABUS14 (DSOCMBRAMABUS[14], DSOCMBRAMABUS_delay[14]);
buf B_DSOCMBRAMABUS15 (DSOCMBRAMABUS[15], DSOCMBRAMABUS_delay[15]);
buf B_DSOCMBRAMABUS16 (DSOCMBRAMABUS[16], DSOCMBRAMABUS_delay[16]);
buf B_DSOCMBRAMABUS17 (DSOCMBRAMABUS[17], DSOCMBRAMABUS_delay[17]);
buf B_DSOCMBRAMABUS18 (DSOCMBRAMABUS[18], DSOCMBRAMABUS_delay[18]);
buf B_DSOCMBRAMABUS19 (DSOCMBRAMABUS[19], DSOCMBRAMABUS_delay[19]);
buf B_DSOCMBRAMABUS20 (DSOCMBRAMABUS[20], DSOCMBRAMABUS_delay[20]);
buf B_DSOCMBRAMABUS21 (DSOCMBRAMABUS[21], DSOCMBRAMABUS_delay[21]);
buf B_DSOCMBRAMABUS22 (DSOCMBRAMABUS[22], DSOCMBRAMABUS_delay[22]);
buf B_DSOCMBRAMABUS23 (DSOCMBRAMABUS[23], DSOCMBRAMABUS_delay[23]);
buf B_DSOCMBRAMABUS24 (DSOCMBRAMABUS[24], DSOCMBRAMABUS_delay[24]);
buf B_DSOCMBRAMABUS25 (DSOCMBRAMABUS[25], DSOCMBRAMABUS_delay[25]);
buf B_DSOCMBRAMABUS26 (DSOCMBRAMABUS[26], DSOCMBRAMABUS_delay[26]);
buf B_DSOCMBRAMABUS27 (DSOCMBRAMABUS[27], DSOCMBRAMABUS_delay[27]);
buf B_DSOCMBRAMABUS28 (DSOCMBRAMABUS[28], DSOCMBRAMABUS_delay[28]);
buf B_DSOCMBRAMABUS29 (DSOCMBRAMABUS[29], DSOCMBRAMABUS_delay[29]);
buf B_DSOCMBRAMBYTEWRITE0 (DSOCMBRAMBYTEWRITE[0], DSOCMBRAMBYTEWRITE_delay[0]);
buf B_DSOCMBRAMBYTEWRITE1 (DSOCMBRAMBYTEWRITE[1], DSOCMBRAMBYTEWRITE_delay[1]);
buf B_DSOCMBRAMBYTEWRITE2 (DSOCMBRAMBYTEWRITE[2], DSOCMBRAMBYTEWRITE_delay[2]);
buf B_DSOCMBRAMBYTEWRITE3 (DSOCMBRAMBYTEWRITE[3], DSOCMBRAMBYTEWRITE_delay[3]);
buf B_DSOCMBRAMEN (DSOCMBRAMEN, DSOCMBRAMEN_delay);
buf B_DSOCMBRAMWRDBUS0 (DSOCMBRAMWRDBUS[0], DSOCMBRAMWRDBUS_delay[0]);
buf B_DSOCMBRAMWRDBUS1 (DSOCMBRAMWRDBUS[1], DSOCMBRAMWRDBUS_delay[1]);
buf B_DSOCMBRAMWRDBUS2 (DSOCMBRAMWRDBUS[2], DSOCMBRAMWRDBUS_delay[2]);
buf B_DSOCMBRAMWRDBUS3 (DSOCMBRAMWRDBUS[3], DSOCMBRAMWRDBUS_delay[3]);
buf B_DSOCMBRAMWRDBUS4 (DSOCMBRAMWRDBUS[4], DSOCMBRAMWRDBUS_delay[4]);
buf B_DSOCMBRAMWRDBUS5 (DSOCMBRAMWRDBUS[5], DSOCMBRAMWRDBUS_delay[5]);
buf B_DSOCMBRAMWRDBUS6 (DSOCMBRAMWRDBUS[6], DSOCMBRAMWRDBUS_delay[6]);
buf B_DSOCMBRAMWRDBUS7 (DSOCMBRAMWRDBUS[7], DSOCMBRAMWRDBUS_delay[7]);
buf B_DSOCMBRAMWRDBUS8 (DSOCMBRAMWRDBUS[8], DSOCMBRAMWRDBUS_delay[8]);
buf B_DSOCMBRAMWRDBUS9 (DSOCMBRAMWRDBUS[9], DSOCMBRAMWRDBUS_delay[9]);
buf B_DSOCMBRAMWRDBUS10 (DSOCMBRAMWRDBUS[10], DSOCMBRAMWRDBUS_delay[10]);
buf B_DSOCMBRAMWRDBUS11 (DSOCMBRAMWRDBUS[11], DSOCMBRAMWRDBUS_delay[11]);
buf B_DSOCMBRAMWRDBUS12 (DSOCMBRAMWRDBUS[12], DSOCMBRAMWRDBUS_delay[12]);
buf B_DSOCMBRAMWRDBUS13 (DSOCMBRAMWRDBUS[13], DSOCMBRAMWRDBUS_delay[13]);
buf B_DSOCMBRAMWRDBUS14 (DSOCMBRAMWRDBUS[14], DSOCMBRAMWRDBUS_delay[14]);
buf B_DSOCMBRAMWRDBUS15 (DSOCMBRAMWRDBUS[15], DSOCMBRAMWRDBUS_delay[15]);
buf B_DSOCMBRAMWRDBUS16 (DSOCMBRAMWRDBUS[16], DSOCMBRAMWRDBUS_delay[16]);
buf B_DSOCMBRAMWRDBUS17 (DSOCMBRAMWRDBUS[17], DSOCMBRAMWRDBUS_delay[17]);
buf B_DSOCMBRAMWRDBUS18 (DSOCMBRAMWRDBUS[18], DSOCMBRAMWRDBUS_delay[18]);
buf B_DSOCMBRAMWRDBUS19 (DSOCMBRAMWRDBUS[19], DSOCMBRAMWRDBUS_delay[19]);
buf B_DSOCMBRAMWRDBUS20 (DSOCMBRAMWRDBUS[20], DSOCMBRAMWRDBUS_delay[20]);
buf B_DSOCMBRAMWRDBUS21 (DSOCMBRAMWRDBUS[21], DSOCMBRAMWRDBUS_delay[21]);
buf B_DSOCMBRAMWRDBUS22 (DSOCMBRAMWRDBUS[22], DSOCMBRAMWRDBUS_delay[22]);
buf B_DSOCMBRAMWRDBUS23 (DSOCMBRAMWRDBUS[23], DSOCMBRAMWRDBUS_delay[23]);
buf B_DSOCMBRAMWRDBUS24 (DSOCMBRAMWRDBUS[24], DSOCMBRAMWRDBUS_delay[24]);
buf B_DSOCMBRAMWRDBUS25 (DSOCMBRAMWRDBUS[25], DSOCMBRAMWRDBUS_delay[25]);
buf B_DSOCMBRAMWRDBUS26 (DSOCMBRAMWRDBUS[26], DSOCMBRAMWRDBUS_delay[26]);
buf B_DSOCMBRAMWRDBUS27 (DSOCMBRAMWRDBUS[27], DSOCMBRAMWRDBUS_delay[27]);
buf B_DSOCMBRAMWRDBUS28 (DSOCMBRAMWRDBUS[28], DSOCMBRAMWRDBUS_delay[28]);
buf B_DSOCMBRAMWRDBUS29 (DSOCMBRAMWRDBUS[29], DSOCMBRAMWRDBUS_delay[29]);
buf B_DSOCMBRAMWRDBUS30 (DSOCMBRAMWRDBUS[30], DSOCMBRAMWRDBUS_delay[30]);
buf B_DSOCMBRAMWRDBUS31 (DSOCMBRAMWRDBUS[31], DSOCMBRAMWRDBUS_delay[31]);
buf B_DSOCMBUSY (DSOCMBUSY, DSOCMBUSY_delay);
buf B_DSOCMRDADDRVALID (DSOCMRDADDRVALID, DSOCMRDADDRVALID_delay);
buf B_DSOCMWRADDRVALID (DSOCMWRADDRVALID, DSOCMWRADDRVALID_delay);
buf B_EXTDCRABUS0 (EXTDCRABUS[0], EXTDCRABUS_delay[0]);
buf B_EXTDCRABUS1 (EXTDCRABUS[1], EXTDCRABUS_delay[1]);
buf B_EXTDCRABUS2 (EXTDCRABUS[2], EXTDCRABUS_delay[2]);
buf B_EXTDCRABUS3 (EXTDCRABUS[3], EXTDCRABUS_delay[3]);
buf B_EXTDCRABUS4 (EXTDCRABUS[4], EXTDCRABUS_delay[4]);
buf B_EXTDCRABUS5 (EXTDCRABUS[5], EXTDCRABUS_delay[5]);
buf B_EXTDCRABUS6 (EXTDCRABUS[6], EXTDCRABUS_delay[6]);
buf B_EXTDCRABUS7 (EXTDCRABUS[7], EXTDCRABUS_delay[7]);
buf B_EXTDCRABUS8 (EXTDCRABUS[8], EXTDCRABUS_delay[8]);
buf B_EXTDCRABUS9 (EXTDCRABUS[9], EXTDCRABUS_delay[9]);
buf B_EXTDCRDBUSOUT0 (EXTDCRDBUSOUT[0], EXTDCRDBUSOUT_delay[0]);
buf B_EXTDCRDBUSOUT1 (EXTDCRDBUSOUT[1], EXTDCRDBUSOUT_delay[1]);
buf B_EXTDCRDBUSOUT2 (EXTDCRDBUSOUT[2], EXTDCRDBUSOUT_delay[2]);
buf B_EXTDCRDBUSOUT3 (EXTDCRDBUSOUT[3], EXTDCRDBUSOUT_delay[3]);
buf B_EXTDCRDBUSOUT4 (EXTDCRDBUSOUT[4], EXTDCRDBUSOUT_delay[4]);
buf B_EXTDCRDBUSOUT5 (EXTDCRDBUSOUT[5], EXTDCRDBUSOUT_delay[5]);
buf B_EXTDCRDBUSOUT6 (EXTDCRDBUSOUT[6], EXTDCRDBUSOUT_delay[6]);
buf B_EXTDCRDBUSOUT7 (EXTDCRDBUSOUT[7], EXTDCRDBUSOUT_delay[7]);
buf B_EXTDCRDBUSOUT8 (EXTDCRDBUSOUT[8], EXTDCRDBUSOUT_delay[8]);
buf B_EXTDCRDBUSOUT9 (EXTDCRDBUSOUT[9], EXTDCRDBUSOUT_delay[9]);
buf B_EXTDCRDBUSOUT10 (EXTDCRDBUSOUT[10], EXTDCRDBUSOUT_delay[10]);
buf B_EXTDCRDBUSOUT11 (EXTDCRDBUSOUT[11], EXTDCRDBUSOUT_delay[11]);
buf B_EXTDCRDBUSOUT12 (EXTDCRDBUSOUT[12], EXTDCRDBUSOUT_delay[12]);
buf B_EXTDCRDBUSOUT13 (EXTDCRDBUSOUT[13], EXTDCRDBUSOUT_delay[13]);
buf B_EXTDCRDBUSOUT14 (EXTDCRDBUSOUT[14], EXTDCRDBUSOUT_delay[14]);
buf B_EXTDCRDBUSOUT15 (EXTDCRDBUSOUT[15], EXTDCRDBUSOUT_delay[15]);
buf B_EXTDCRDBUSOUT16 (EXTDCRDBUSOUT[16], EXTDCRDBUSOUT_delay[16]);
buf B_EXTDCRDBUSOUT17 (EXTDCRDBUSOUT[17], EXTDCRDBUSOUT_delay[17]);
buf B_EXTDCRDBUSOUT18 (EXTDCRDBUSOUT[18], EXTDCRDBUSOUT_delay[18]);
buf B_EXTDCRDBUSOUT19 (EXTDCRDBUSOUT[19], EXTDCRDBUSOUT_delay[19]);
buf B_EXTDCRDBUSOUT20 (EXTDCRDBUSOUT[20], EXTDCRDBUSOUT_delay[20]);
buf B_EXTDCRDBUSOUT21 (EXTDCRDBUSOUT[21], EXTDCRDBUSOUT_delay[21]);
buf B_EXTDCRDBUSOUT22 (EXTDCRDBUSOUT[22], EXTDCRDBUSOUT_delay[22]);
buf B_EXTDCRDBUSOUT23 (EXTDCRDBUSOUT[23], EXTDCRDBUSOUT_delay[23]);
buf B_EXTDCRDBUSOUT24 (EXTDCRDBUSOUT[24], EXTDCRDBUSOUT_delay[24]);
buf B_EXTDCRDBUSOUT25 (EXTDCRDBUSOUT[25], EXTDCRDBUSOUT_delay[25]);
buf B_EXTDCRDBUSOUT26 (EXTDCRDBUSOUT[26], EXTDCRDBUSOUT_delay[26]);
buf B_EXTDCRDBUSOUT27 (EXTDCRDBUSOUT[27], EXTDCRDBUSOUT_delay[27]);
buf B_EXTDCRDBUSOUT28 (EXTDCRDBUSOUT[28], EXTDCRDBUSOUT_delay[28]);
buf B_EXTDCRDBUSOUT29 (EXTDCRDBUSOUT[29], EXTDCRDBUSOUT_delay[29]);
buf B_EXTDCRDBUSOUT30 (EXTDCRDBUSOUT[30], EXTDCRDBUSOUT_delay[30]);
buf B_EXTDCRDBUSOUT31 (EXTDCRDBUSOUT[31], EXTDCRDBUSOUT_delay[31]);
buf B_EXTDCRREAD (EXTDCRREAD, EXTDCRREAD_delay);
buf B_EXTDCRWRITE (EXTDCRWRITE, EXTDCRWRITE_delay);
buf B_ISOCMBRAMEN (ISOCMBRAMEN, ISOCMBRAMEN_delay);
buf B_ISOCMBRAMEVENWRITEEN (ISOCMBRAMEVENWRITEEN, ISOCMBRAMEVENWRITEEN_delay);
buf B_ISOCMBRAMODDWRITEEN (ISOCMBRAMODDWRITEEN, ISOCMBRAMODDWRITEEN_delay);
buf B_ISOCMBRAMRDABUS8 (ISOCMBRAMRDABUS[8], ISOCMBRAMRDABUS_delay[8]);
buf B_ISOCMBRAMRDABUS9 (ISOCMBRAMRDABUS[9], ISOCMBRAMRDABUS_delay[9]);
buf B_ISOCMBRAMRDABUS10 (ISOCMBRAMRDABUS[10], ISOCMBRAMRDABUS_delay[10]);
buf B_ISOCMBRAMRDABUS11 (ISOCMBRAMRDABUS[11], ISOCMBRAMRDABUS_delay[11]);
buf B_ISOCMBRAMRDABUS12 (ISOCMBRAMRDABUS[12], ISOCMBRAMRDABUS_delay[12]);
buf B_ISOCMBRAMRDABUS13 (ISOCMBRAMRDABUS[13], ISOCMBRAMRDABUS_delay[13]);
buf B_ISOCMBRAMRDABUS14 (ISOCMBRAMRDABUS[14], ISOCMBRAMRDABUS_delay[14]);
buf B_ISOCMBRAMRDABUS15 (ISOCMBRAMRDABUS[15], ISOCMBRAMRDABUS_delay[15]);
buf B_ISOCMBRAMRDABUS16 (ISOCMBRAMRDABUS[16], ISOCMBRAMRDABUS_delay[16]);
buf B_ISOCMBRAMRDABUS17 (ISOCMBRAMRDABUS[17], ISOCMBRAMRDABUS_delay[17]);
buf B_ISOCMBRAMRDABUS18 (ISOCMBRAMRDABUS[18], ISOCMBRAMRDABUS_delay[18]);
buf B_ISOCMBRAMRDABUS19 (ISOCMBRAMRDABUS[19], ISOCMBRAMRDABUS_delay[19]);
buf B_ISOCMBRAMRDABUS20 (ISOCMBRAMRDABUS[20], ISOCMBRAMRDABUS_delay[20]);
buf B_ISOCMBRAMRDABUS21 (ISOCMBRAMRDABUS[21], ISOCMBRAMRDABUS_delay[21]);
buf B_ISOCMBRAMRDABUS22 (ISOCMBRAMRDABUS[22], ISOCMBRAMRDABUS_delay[22]);
buf B_ISOCMBRAMRDABUS23 (ISOCMBRAMRDABUS[23], ISOCMBRAMRDABUS_delay[23]);
buf B_ISOCMBRAMRDABUS24 (ISOCMBRAMRDABUS[24], ISOCMBRAMRDABUS_delay[24]);
buf B_ISOCMBRAMRDABUS25 (ISOCMBRAMRDABUS[25], ISOCMBRAMRDABUS_delay[25]);
buf B_ISOCMBRAMRDABUS26 (ISOCMBRAMRDABUS[26], ISOCMBRAMRDABUS_delay[26]);
buf B_ISOCMBRAMRDABUS27 (ISOCMBRAMRDABUS[27], ISOCMBRAMRDABUS_delay[27]);
buf B_ISOCMBRAMRDABUS28 (ISOCMBRAMRDABUS[28], ISOCMBRAMRDABUS_delay[28]);
buf B_ISOCMBRAMWRABUS8 (ISOCMBRAMWRABUS[8], ISOCMBRAMWRABUS_delay[8]);
buf B_ISOCMBRAMWRABUS9 (ISOCMBRAMWRABUS[9], ISOCMBRAMWRABUS_delay[9]);
buf B_ISOCMBRAMWRABUS10 (ISOCMBRAMWRABUS[10], ISOCMBRAMWRABUS_delay[10]);
buf B_ISOCMBRAMWRABUS11 (ISOCMBRAMWRABUS[11], ISOCMBRAMWRABUS_delay[11]);
buf B_ISOCMBRAMWRABUS12 (ISOCMBRAMWRABUS[12], ISOCMBRAMWRABUS_delay[12]);
buf B_ISOCMBRAMWRABUS13 (ISOCMBRAMWRABUS[13], ISOCMBRAMWRABUS_delay[13]);
buf B_ISOCMBRAMWRABUS14 (ISOCMBRAMWRABUS[14], ISOCMBRAMWRABUS_delay[14]);
buf B_ISOCMBRAMWRABUS15 (ISOCMBRAMWRABUS[15], ISOCMBRAMWRABUS_delay[15]);
buf B_ISOCMBRAMWRABUS16 (ISOCMBRAMWRABUS[16], ISOCMBRAMWRABUS_delay[16]);
buf B_ISOCMBRAMWRABUS17 (ISOCMBRAMWRABUS[17], ISOCMBRAMWRABUS_delay[17]);
buf B_ISOCMBRAMWRABUS18 (ISOCMBRAMWRABUS[18], ISOCMBRAMWRABUS_delay[18]);
buf B_ISOCMBRAMWRABUS19 (ISOCMBRAMWRABUS[19], ISOCMBRAMWRABUS_delay[19]);
buf B_ISOCMBRAMWRABUS20 (ISOCMBRAMWRABUS[20], ISOCMBRAMWRABUS_delay[20]);
buf B_ISOCMBRAMWRABUS21 (ISOCMBRAMWRABUS[21], ISOCMBRAMWRABUS_delay[21]);
buf B_ISOCMBRAMWRABUS22 (ISOCMBRAMWRABUS[22], ISOCMBRAMWRABUS_delay[22]);
buf B_ISOCMBRAMWRABUS23 (ISOCMBRAMWRABUS[23], ISOCMBRAMWRABUS_delay[23]);
buf B_ISOCMBRAMWRABUS24 (ISOCMBRAMWRABUS[24], ISOCMBRAMWRABUS_delay[24]);
buf B_ISOCMBRAMWRABUS25 (ISOCMBRAMWRABUS[25], ISOCMBRAMWRABUS_delay[25]);
buf B_ISOCMBRAMWRABUS26 (ISOCMBRAMWRABUS[26], ISOCMBRAMWRABUS_delay[26]);
buf B_ISOCMBRAMWRABUS27 (ISOCMBRAMWRABUS[27], ISOCMBRAMWRABUS_delay[27]);
buf B_ISOCMBRAMWRABUS28 (ISOCMBRAMWRABUS[28], ISOCMBRAMWRABUS_delay[28]);
buf B_ISOCMBRAMWRDBUS0 (ISOCMBRAMWRDBUS[0], ISOCMBRAMWRDBUS_delay[0]);
buf B_ISOCMBRAMWRDBUS1 (ISOCMBRAMWRDBUS[1], ISOCMBRAMWRDBUS_delay[1]);
buf B_ISOCMBRAMWRDBUS2 (ISOCMBRAMWRDBUS[2], ISOCMBRAMWRDBUS_delay[2]);
buf B_ISOCMBRAMWRDBUS3 (ISOCMBRAMWRDBUS[3], ISOCMBRAMWRDBUS_delay[3]);
buf B_ISOCMBRAMWRDBUS4 (ISOCMBRAMWRDBUS[4], ISOCMBRAMWRDBUS_delay[4]);
buf B_ISOCMBRAMWRDBUS5 (ISOCMBRAMWRDBUS[5], ISOCMBRAMWRDBUS_delay[5]);
buf B_ISOCMBRAMWRDBUS6 (ISOCMBRAMWRDBUS[6], ISOCMBRAMWRDBUS_delay[6]);
buf B_ISOCMBRAMWRDBUS7 (ISOCMBRAMWRDBUS[7], ISOCMBRAMWRDBUS_delay[7]);
buf B_ISOCMBRAMWRDBUS8 (ISOCMBRAMWRDBUS[8], ISOCMBRAMWRDBUS_delay[8]);
buf B_ISOCMBRAMWRDBUS9 (ISOCMBRAMWRDBUS[9], ISOCMBRAMWRDBUS_delay[9]);
buf B_ISOCMBRAMWRDBUS10 (ISOCMBRAMWRDBUS[10], ISOCMBRAMWRDBUS_delay[10]);
buf B_ISOCMBRAMWRDBUS11 (ISOCMBRAMWRDBUS[11], ISOCMBRAMWRDBUS_delay[11]);
buf B_ISOCMBRAMWRDBUS12 (ISOCMBRAMWRDBUS[12], ISOCMBRAMWRDBUS_delay[12]);
buf B_ISOCMBRAMWRDBUS13 (ISOCMBRAMWRDBUS[13], ISOCMBRAMWRDBUS_delay[13]);
buf B_ISOCMBRAMWRDBUS14 (ISOCMBRAMWRDBUS[14], ISOCMBRAMWRDBUS_delay[14]);
buf B_ISOCMBRAMWRDBUS15 (ISOCMBRAMWRDBUS[15], ISOCMBRAMWRDBUS_delay[15]);
buf B_ISOCMBRAMWRDBUS16 (ISOCMBRAMWRDBUS[16], ISOCMBRAMWRDBUS_delay[16]);
buf B_ISOCMBRAMWRDBUS17 (ISOCMBRAMWRDBUS[17], ISOCMBRAMWRDBUS_delay[17]);
buf B_ISOCMBRAMWRDBUS18 (ISOCMBRAMWRDBUS[18], ISOCMBRAMWRDBUS_delay[18]);
buf B_ISOCMBRAMWRDBUS19 (ISOCMBRAMWRDBUS[19], ISOCMBRAMWRDBUS_delay[19]);
buf B_ISOCMBRAMWRDBUS20 (ISOCMBRAMWRDBUS[20], ISOCMBRAMWRDBUS_delay[20]);
buf B_ISOCMBRAMWRDBUS21 (ISOCMBRAMWRDBUS[21], ISOCMBRAMWRDBUS_delay[21]);
buf B_ISOCMBRAMWRDBUS22 (ISOCMBRAMWRDBUS[22], ISOCMBRAMWRDBUS_delay[22]);
buf B_ISOCMBRAMWRDBUS23 (ISOCMBRAMWRDBUS[23], ISOCMBRAMWRDBUS_delay[23]);
buf B_ISOCMBRAMWRDBUS24 (ISOCMBRAMWRDBUS[24], ISOCMBRAMWRDBUS_delay[24]);
buf B_ISOCMBRAMWRDBUS25 (ISOCMBRAMWRDBUS[25], ISOCMBRAMWRDBUS_delay[25]);
buf B_ISOCMBRAMWRDBUS26 (ISOCMBRAMWRDBUS[26], ISOCMBRAMWRDBUS_delay[26]);
buf B_ISOCMBRAMWRDBUS27 (ISOCMBRAMWRDBUS[27], ISOCMBRAMWRDBUS_delay[27]);
buf B_ISOCMBRAMWRDBUS28 (ISOCMBRAMWRDBUS[28], ISOCMBRAMWRDBUS_delay[28]);
buf B_ISOCMBRAMWRDBUS29 (ISOCMBRAMWRDBUS[29], ISOCMBRAMWRDBUS_delay[29]);
buf B_ISOCMBRAMWRDBUS30 (ISOCMBRAMWRDBUS[30], ISOCMBRAMWRDBUS_delay[30]);
buf B_ISOCMBRAMWRDBUS31 (ISOCMBRAMWRDBUS[31], ISOCMBRAMWRDBUS_delay[31]);
buf B_ISOCMDCRBRAMEVENEN (ISOCMDCRBRAMEVENEN, ISOCMDCRBRAMEVENEN_delay);
buf B_ISOCMDCRBRAMODDEN (ISOCMDCRBRAMODDEN, ISOCMDCRBRAMODDEN_delay);
buf B_ISOCMDCRBRAMRDSELECT (ISOCMDCRBRAMRDSELECT, ISOCMDCRBRAMRDSELECT_delay);
buf B_DCREMACWRITE (DCREMACWRITE, DCREMACWRITE_delay);
buf B_DCREMACREAD (DCREMACREAD, DCREMACREAD_delay);
buf B_DCREMACDBUS0 (DCREMACDBUS[0], DCREMACDBUS_delay[0]);
buf B_DCREMACDBUS1 (DCREMACDBUS[1], DCREMACDBUS_delay[1]);
buf B_DCREMACDBUS2 (DCREMACDBUS[2], DCREMACDBUS_delay[2]);
buf B_DCREMACDBUS3 (DCREMACDBUS[3], DCREMACDBUS_delay[3]);
buf B_DCREMACDBUS4 (DCREMACDBUS[4], DCREMACDBUS_delay[4]);
buf B_DCREMACDBUS5 (DCREMACDBUS[5], DCREMACDBUS_delay[5]);
buf B_DCREMACDBUS6 (DCREMACDBUS[6], DCREMACDBUS_delay[6]);
buf B_DCREMACDBUS7 (DCREMACDBUS[7], DCREMACDBUS_delay[7]);
buf B_DCREMACDBUS8 (DCREMACDBUS[8], DCREMACDBUS_delay[8]);
buf B_DCREMACDBUS9 (DCREMACDBUS[9], DCREMACDBUS_delay[9]);
buf B_DCREMACDBUS10 (DCREMACDBUS[10], DCREMACDBUS_delay[10]);
buf B_DCREMACDBUS11 (DCREMACDBUS[11], DCREMACDBUS_delay[11]);
buf B_DCREMACDBUS12 (DCREMACDBUS[12], DCREMACDBUS_delay[12]);
buf B_DCREMACDBUS13 (DCREMACDBUS[13], DCREMACDBUS_delay[13]);
buf B_DCREMACDBUS14 (DCREMACDBUS[14], DCREMACDBUS_delay[14]);
buf B_DCREMACDBUS15 (DCREMACDBUS[15], DCREMACDBUS_delay[15]);
buf B_DCREMACDBUS16 (DCREMACDBUS[16], DCREMACDBUS_delay[16]);
buf B_DCREMACDBUS17 (DCREMACDBUS[17], DCREMACDBUS_delay[17]);
buf B_DCREMACDBUS18 (DCREMACDBUS[18], DCREMACDBUS_delay[18]);
buf B_DCREMACDBUS19 (DCREMACDBUS[19], DCREMACDBUS_delay[19]);
buf B_DCREMACDBUS20 (DCREMACDBUS[20], DCREMACDBUS_delay[20]);
buf B_DCREMACDBUS21 (DCREMACDBUS[21], DCREMACDBUS_delay[21]);
buf B_DCREMACDBUS22 (DCREMACDBUS[22], DCREMACDBUS_delay[22]);
buf B_DCREMACDBUS23 (DCREMACDBUS[23], DCREMACDBUS_delay[23]);
buf B_DCREMACDBUS24 (DCREMACDBUS[24], DCREMACDBUS_delay[24]);
buf B_DCREMACDBUS25 (DCREMACDBUS[25], DCREMACDBUS_delay[25]);
buf B_DCREMACDBUS26 (DCREMACDBUS[26], DCREMACDBUS_delay[26]);
buf B_DCREMACDBUS27 (DCREMACDBUS[27], DCREMACDBUS_delay[27]);
buf B_DCREMACDBUS28 (DCREMACDBUS[28], DCREMACDBUS_delay[28]);
buf B_DCREMACDBUS29 (DCREMACDBUS[29], DCREMACDBUS_delay[29]);
buf B_DCREMACDBUS30 (DCREMACDBUS[30], DCREMACDBUS_delay[30]);
buf B_DCREMACDBUS31 (DCREMACDBUS[31], DCREMACDBUS_delay[31]);
buf B_DCREMACABUS8 (DCREMACABUS[8], DCREMACABUS_delay[8]);
buf B_DCREMACABUS9 (DCREMACABUS[9], DCREMACABUS_delay[9]);
buf B_DCREMACCLK (DCREMACCLK, DCREMACCLK_delay);

buf B_BRAMDSOCMCLK (BRAMDSOCMCLK_delay, BRAMDSOCMCLK);
buf B_BRAMDSOCMRDDBUS0 (BRAMDSOCMRDDBUS_delay[0], BRAMDSOCMRDDBUS[0]);
buf B_BRAMDSOCMRDDBUS1 (BRAMDSOCMRDDBUS_delay[1], BRAMDSOCMRDDBUS[1]);
buf B_BRAMDSOCMRDDBUS2 (BRAMDSOCMRDDBUS_delay[2], BRAMDSOCMRDDBUS[2]);
buf B_BRAMDSOCMRDDBUS3 (BRAMDSOCMRDDBUS_delay[3], BRAMDSOCMRDDBUS[3]);
buf B_BRAMDSOCMRDDBUS4 (BRAMDSOCMRDDBUS_delay[4], BRAMDSOCMRDDBUS[4]);
buf B_BRAMDSOCMRDDBUS5 (BRAMDSOCMRDDBUS_delay[5], BRAMDSOCMRDDBUS[5]);
buf B_BRAMDSOCMRDDBUS6 (BRAMDSOCMRDDBUS_delay[6], BRAMDSOCMRDDBUS[6]);
buf B_BRAMDSOCMRDDBUS7 (BRAMDSOCMRDDBUS_delay[7], BRAMDSOCMRDDBUS[7]);
buf B_BRAMDSOCMRDDBUS8 (BRAMDSOCMRDDBUS_delay[8], BRAMDSOCMRDDBUS[8]);
buf B_BRAMDSOCMRDDBUS9 (BRAMDSOCMRDDBUS_delay[9], BRAMDSOCMRDDBUS[9]);
buf B_BRAMDSOCMRDDBUS10 (BRAMDSOCMRDDBUS_delay[10], BRAMDSOCMRDDBUS[10]);
buf B_BRAMDSOCMRDDBUS11 (BRAMDSOCMRDDBUS_delay[11], BRAMDSOCMRDDBUS[11]);
buf B_BRAMDSOCMRDDBUS12 (BRAMDSOCMRDDBUS_delay[12], BRAMDSOCMRDDBUS[12]);
buf B_BRAMDSOCMRDDBUS13 (BRAMDSOCMRDDBUS_delay[13], BRAMDSOCMRDDBUS[13]);
buf B_BRAMDSOCMRDDBUS14 (BRAMDSOCMRDDBUS_delay[14], BRAMDSOCMRDDBUS[14]);
buf B_BRAMDSOCMRDDBUS15 (BRAMDSOCMRDDBUS_delay[15], BRAMDSOCMRDDBUS[15]);
buf B_BRAMDSOCMRDDBUS16 (BRAMDSOCMRDDBUS_delay[16], BRAMDSOCMRDDBUS[16]);
buf B_BRAMDSOCMRDDBUS17 (BRAMDSOCMRDDBUS_delay[17], BRAMDSOCMRDDBUS[17]);
buf B_BRAMDSOCMRDDBUS18 (BRAMDSOCMRDDBUS_delay[18], BRAMDSOCMRDDBUS[18]);
buf B_BRAMDSOCMRDDBUS19 (BRAMDSOCMRDDBUS_delay[19], BRAMDSOCMRDDBUS[19]);
buf B_BRAMDSOCMRDDBUS20 (BRAMDSOCMRDDBUS_delay[20], BRAMDSOCMRDDBUS[20]);
buf B_BRAMDSOCMRDDBUS21 (BRAMDSOCMRDDBUS_delay[21], BRAMDSOCMRDDBUS[21]);
buf B_BRAMDSOCMRDDBUS22 (BRAMDSOCMRDDBUS_delay[22], BRAMDSOCMRDDBUS[22]);
buf B_BRAMDSOCMRDDBUS23 (BRAMDSOCMRDDBUS_delay[23], BRAMDSOCMRDDBUS[23]);
buf B_BRAMDSOCMRDDBUS24 (BRAMDSOCMRDDBUS_delay[24], BRAMDSOCMRDDBUS[24]);
buf B_BRAMDSOCMRDDBUS25 (BRAMDSOCMRDDBUS_delay[25], BRAMDSOCMRDDBUS[25]);
buf B_BRAMDSOCMRDDBUS26 (BRAMDSOCMRDDBUS_delay[26], BRAMDSOCMRDDBUS[26]);
buf B_BRAMDSOCMRDDBUS27 (BRAMDSOCMRDDBUS_delay[27], BRAMDSOCMRDDBUS[27]);
buf B_BRAMDSOCMRDDBUS28 (BRAMDSOCMRDDBUS_delay[28], BRAMDSOCMRDDBUS[28]);
buf B_BRAMDSOCMRDDBUS29 (BRAMDSOCMRDDBUS_delay[29], BRAMDSOCMRDDBUS[29]);
buf B_BRAMDSOCMRDDBUS30 (BRAMDSOCMRDDBUS_delay[30], BRAMDSOCMRDDBUS[30]);
buf B_BRAMDSOCMRDDBUS31 (BRAMDSOCMRDDBUS_delay[31], BRAMDSOCMRDDBUS[31]);
buf B_BRAMISOCMCLK (BRAMISOCMCLK_delay, BRAMISOCMCLK);
buf B_BRAMISOCMDCRRDDBUS0 (BRAMISOCMDCRRDDBUS_delay[0], BRAMISOCMDCRRDDBUS[0]);
buf B_BRAMISOCMDCRRDDBUS1 (BRAMISOCMDCRRDDBUS_delay[1], BRAMISOCMDCRRDDBUS[1]);
buf B_BRAMISOCMDCRRDDBUS2 (BRAMISOCMDCRRDDBUS_delay[2], BRAMISOCMDCRRDDBUS[2]);
buf B_BRAMISOCMDCRRDDBUS3 (BRAMISOCMDCRRDDBUS_delay[3], BRAMISOCMDCRRDDBUS[3]);
buf B_BRAMISOCMDCRRDDBUS4 (BRAMISOCMDCRRDDBUS_delay[4], BRAMISOCMDCRRDDBUS[4]);
buf B_BRAMISOCMDCRRDDBUS5 (BRAMISOCMDCRRDDBUS_delay[5], BRAMISOCMDCRRDDBUS[5]);
buf B_BRAMISOCMDCRRDDBUS6 (BRAMISOCMDCRRDDBUS_delay[6], BRAMISOCMDCRRDDBUS[6]);
buf B_BRAMISOCMDCRRDDBUS7 (BRAMISOCMDCRRDDBUS_delay[7], BRAMISOCMDCRRDDBUS[7]);
buf B_BRAMISOCMDCRRDDBUS8 (BRAMISOCMDCRRDDBUS_delay[8], BRAMISOCMDCRRDDBUS[8]);
buf B_BRAMISOCMDCRRDDBUS9 (BRAMISOCMDCRRDDBUS_delay[9], BRAMISOCMDCRRDDBUS[9]);
buf B_BRAMISOCMDCRRDDBUS10 (BRAMISOCMDCRRDDBUS_delay[10], BRAMISOCMDCRRDDBUS[10]);
buf B_BRAMISOCMDCRRDDBUS11 (BRAMISOCMDCRRDDBUS_delay[11], BRAMISOCMDCRRDDBUS[11]);
buf B_BRAMISOCMDCRRDDBUS12 (BRAMISOCMDCRRDDBUS_delay[12], BRAMISOCMDCRRDDBUS[12]);
buf B_BRAMISOCMDCRRDDBUS13 (BRAMISOCMDCRRDDBUS_delay[13], BRAMISOCMDCRRDDBUS[13]);
buf B_BRAMISOCMDCRRDDBUS14 (BRAMISOCMDCRRDDBUS_delay[14], BRAMISOCMDCRRDDBUS[14]);
buf B_BRAMISOCMDCRRDDBUS15 (BRAMISOCMDCRRDDBUS_delay[15], BRAMISOCMDCRRDDBUS[15]);
buf B_BRAMISOCMDCRRDDBUS16 (BRAMISOCMDCRRDDBUS_delay[16], BRAMISOCMDCRRDDBUS[16]);
buf B_BRAMISOCMDCRRDDBUS17 (BRAMISOCMDCRRDDBUS_delay[17], BRAMISOCMDCRRDDBUS[17]);
buf B_BRAMISOCMDCRRDDBUS18 (BRAMISOCMDCRRDDBUS_delay[18], BRAMISOCMDCRRDDBUS[18]);
buf B_BRAMISOCMDCRRDDBUS19 (BRAMISOCMDCRRDDBUS_delay[19], BRAMISOCMDCRRDDBUS[19]);
buf B_BRAMISOCMDCRRDDBUS20 (BRAMISOCMDCRRDDBUS_delay[20], BRAMISOCMDCRRDDBUS[20]);
buf B_BRAMISOCMDCRRDDBUS21 (BRAMISOCMDCRRDDBUS_delay[21], BRAMISOCMDCRRDDBUS[21]);
buf B_BRAMISOCMDCRRDDBUS22 (BRAMISOCMDCRRDDBUS_delay[22], BRAMISOCMDCRRDDBUS[22]);
buf B_BRAMISOCMDCRRDDBUS23 (BRAMISOCMDCRRDDBUS_delay[23], BRAMISOCMDCRRDDBUS[23]);
buf B_BRAMISOCMDCRRDDBUS24 (BRAMISOCMDCRRDDBUS_delay[24], BRAMISOCMDCRRDDBUS[24]);
buf B_BRAMISOCMDCRRDDBUS25 (BRAMISOCMDCRRDDBUS_delay[25], BRAMISOCMDCRRDDBUS[25]);
buf B_BRAMISOCMDCRRDDBUS26 (BRAMISOCMDCRRDDBUS_delay[26], BRAMISOCMDCRRDDBUS[26]);
buf B_BRAMISOCMDCRRDDBUS27 (BRAMISOCMDCRRDDBUS_delay[27], BRAMISOCMDCRRDDBUS[27]);
buf B_BRAMISOCMDCRRDDBUS28 (BRAMISOCMDCRRDDBUS_delay[28], BRAMISOCMDCRRDDBUS[28]);
buf B_BRAMISOCMDCRRDDBUS29 (BRAMISOCMDCRRDDBUS_delay[29], BRAMISOCMDCRRDDBUS[29]);
buf B_BRAMISOCMDCRRDDBUS30 (BRAMISOCMDCRRDDBUS_delay[30], BRAMISOCMDCRRDDBUS[30]);
buf B_BRAMISOCMDCRRDDBUS31 (BRAMISOCMDCRRDDBUS_delay[31], BRAMISOCMDCRRDDBUS[31]);
buf B_BRAMISOCMRDDBUS0 (BRAMISOCMRDDBUS_delay[0], BRAMISOCMRDDBUS[0]);
buf B_BRAMISOCMRDDBUS1 (BRAMISOCMRDDBUS_delay[1], BRAMISOCMRDDBUS[1]);
buf B_BRAMISOCMRDDBUS2 (BRAMISOCMRDDBUS_delay[2], BRAMISOCMRDDBUS[2]);
buf B_BRAMISOCMRDDBUS3 (BRAMISOCMRDDBUS_delay[3], BRAMISOCMRDDBUS[3]);
buf B_BRAMISOCMRDDBUS4 (BRAMISOCMRDDBUS_delay[4], BRAMISOCMRDDBUS[4]);
buf B_BRAMISOCMRDDBUS5 (BRAMISOCMRDDBUS_delay[5], BRAMISOCMRDDBUS[5]);
buf B_BRAMISOCMRDDBUS6 (BRAMISOCMRDDBUS_delay[6], BRAMISOCMRDDBUS[6]);
buf B_BRAMISOCMRDDBUS7 (BRAMISOCMRDDBUS_delay[7], BRAMISOCMRDDBUS[7]);
buf B_BRAMISOCMRDDBUS8 (BRAMISOCMRDDBUS_delay[8], BRAMISOCMRDDBUS[8]);
buf B_BRAMISOCMRDDBUS9 (BRAMISOCMRDDBUS_delay[9], BRAMISOCMRDDBUS[9]);
buf B_BRAMISOCMRDDBUS10 (BRAMISOCMRDDBUS_delay[10], BRAMISOCMRDDBUS[10]);
buf B_BRAMISOCMRDDBUS11 (BRAMISOCMRDDBUS_delay[11], BRAMISOCMRDDBUS[11]);
buf B_BRAMISOCMRDDBUS12 (BRAMISOCMRDDBUS_delay[12], BRAMISOCMRDDBUS[12]);
buf B_BRAMISOCMRDDBUS13 (BRAMISOCMRDDBUS_delay[13], BRAMISOCMRDDBUS[13]);
buf B_BRAMISOCMRDDBUS14 (BRAMISOCMRDDBUS_delay[14], BRAMISOCMRDDBUS[14]);
buf B_BRAMISOCMRDDBUS15 (BRAMISOCMRDDBUS_delay[15], BRAMISOCMRDDBUS[15]);
buf B_BRAMISOCMRDDBUS16 (BRAMISOCMRDDBUS_delay[16], BRAMISOCMRDDBUS[16]);
buf B_BRAMISOCMRDDBUS17 (BRAMISOCMRDDBUS_delay[17], BRAMISOCMRDDBUS[17]);
buf B_BRAMISOCMRDDBUS18 (BRAMISOCMRDDBUS_delay[18], BRAMISOCMRDDBUS[18]);
buf B_BRAMISOCMRDDBUS19 (BRAMISOCMRDDBUS_delay[19], BRAMISOCMRDDBUS[19]);
buf B_BRAMISOCMRDDBUS20 (BRAMISOCMRDDBUS_delay[20], BRAMISOCMRDDBUS[20]);
buf B_BRAMISOCMRDDBUS21 (BRAMISOCMRDDBUS_delay[21], BRAMISOCMRDDBUS[21]);
buf B_BRAMISOCMRDDBUS22 (BRAMISOCMRDDBUS_delay[22], BRAMISOCMRDDBUS[22]);
buf B_BRAMISOCMRDDBUS23 (BRAMISOCMRDDBUS_delay[23], BRAMISOCMRDDBUS[23]);
buf B_BRAMISOCMRDDBUS24 (BRAMISOCMRDDBUS_delay[24], BRAMISOCMRDDBUS[24]);
buf B_BRAMISOCMRDDBUS25 (BRAMISOCMRDDBUS_delay[25], BRAMISOCMRDDBUS[25]);
buf B_BRAMISOCMRDDBUS26 (BRAMISOCMRDDBUS_delay[26], BRAMISOCMRDDBUS[26]);
buf B_BRAMISOCMRDDBUS27 (BRAMISOCMRDDBUS_delay[27], BRAMISOCMRDDBUS[27]);
buf B_BRAMISOCMRDDBUS28 (BRAMISOCMRDDBUS_delay[28], BRAMISOCMRDDBUS[28]);
buf B_BRAMISOCMRDDBUS29 (BRAMISOCMRDDBUS_delay[29], BRAMISOCMRDDBUS[29]);
buf B_BRAMISOCMRDDBUS30 (BRAMISOCMRDDBUS_delay[30], BRAMISOCMRDDBUS[30]);
buf B_BRAMISOCMRDDBUS31 (BRAMISOCMRDDBUS_delay[31], BRAMISOCMRDDBUS[31]);
buf B_BRAMISOCMRDDBUS32 (BRAMISOCMRDDBUS_delay[32], BRAMISOCMRDDBUS[32]);
buf B_BRAMISOCMRDDBUS33 (BRAMISOCMRDDBUS_delay[33], BRAMISOCMRDDBUS[33]);
buf B_BRAMISOCMRDDBUS34 (BRAMISOCMRDDBUS_delay[34], BRAMISOCMRDDBUS[34]);
buf B_BRAMISOCMRDDBUS35 (BRAMISOCMRDDBUS_delay[35], BRAMISOCMRDDBUS[35]);
buf B_BRAMISOCMRDDBUS36 (BRAMISOCMRDDBUS_delay[36], BRAMISOCMRDDBUS[36]);
buf B_BRAMISOCMRDDBUS37 (BRAMISOCMRDDBUS_delay[37], BRAMISOCMRDDBUS[37]);
buf B_BRAMISOCMRDDBUS38 (BRAMISOCMRDDBUS_delay[38], BRAMISOCMRDDBUS[38]);
buf B_BRAMISOCMRDDBUS39 (BRAMISOCMRDDBUS_delay[39], BRAMISOCMRDDBUS[39]);
buf B_BRAMISOCMRDDBUS40 (BRAMISOCMRDDBUS_delay[40], BRAMISOCMRDDBUS[40]);
buf B_BRAMISOCMRDDBUS41 (BRAMISOCMRDDBUS_delay[41], BRAMISOCMRDDBUS[41]);
buf B_BRAMISOCMRDDBUS42 (BRAMISOCMRDDBUS_delay[42], BRAMISOCMRDDBUS[42]);
buf B_BRAMISOCMRDDBUS43 (BRAMISOCMRDDBUS_delay[43], BRAMISOCMRDDBUS[43]);
buf B_BRAMISOCMRDDBUS44 (BRAMISOCMRDDBUS_delay[44], BRAMISOCMRDDBUS[44]);
buf B_BRAMISOCMRDDBUS45 (BRAMISOCMRDDBUS_delay[45], BRAMISOCMRDDBUS[45]);
buf B_BRAMISOCMRDDBUS46 (BRAMISOCMRDDBUS_delay[46], BRAMISOCMRDDBUS[46]);
buf B_BRAMISOCMRDDBUS47 (BRAMISOCMRDDBUS_delay[47], BRAMISOCMRDDBUS[47]);
buf B_BRAMISOCMRDDBUS48 (BRAMISOCMRDDBUS_delay[48], BRAMISOCMRDDBUS[48]);
buf B_BRAMISOCMRDDBUS49 (BRAMISOCMRDDBUS_delay[49], BRAMISOCMRDDBUS[49]);
buf B_BRAMISOCMRDDBUS50 (BRAMISOCMRDDBUS_delay[50], BRAMISOCMRDDBUS[50]);
buf B_BRAMISOCMRDDBUS51 (BRAMISOCMRDDBUS_delay[51], BRAMISOCMRDDBUS[51]);
buf B_BRAMISOCMRDDBUS52 (BRAMISOCMRDDBUS_delay[52], BRAMISOCMRDDBUS[52]);
buf B_BRAMISOCMRDDBUS53 (BRAMISOCMRDDBUS_delay[53], BRAMISOCMRDDBUS[53]);
buf B_BRAMISOCMRDDBUS54 (BRAMISOCMRDDBUS_delay[54], BRAMISOCMRDDBUS[54]);
buf B_BRAMISOCMRDDBUS55 (BRAMISOCMRDDBUS_delay[55], BRAMISOCMRDDBUS[55]);
buf B_BRAMISOCMRDDBUS56 (BRAMISOCMRDDBUS_delay[56], BRAMISOCMRDDBUS[56]);
buf B_BRAMISOCMRDDBUS57 (BRAMISOCMRDDBUS_delay[57], BRAMISOCMRDDBUS[57]);
buf B_BRAMISOCMRDDBUS58 (BRAMISOCMRDDBUS_delay[58], BRAMISOCMRDDBUS[58]);
buf B_BRAMISOCMRDDBUS59 (BRAMISOCMRDDBUS_delay[59], BRAMISOCMRDDBUS[59]);
buf B_BRAMISOCMRDDBUS60 (BRAMISOCMRDDBUS_delay[60], BRAMISOCMRDDBUS[60]);
buf B_BRAMISOCMRDDBUS61 (BRAMISOCMRDDBUS_delay[61], BRAMISOCMRDDBUS[61]);
buf B_BRAMISOCMRDDBUS62 (BRAMISOCMRDDBUS_delay[62], BRAMISOCMRDDBUS[62]);
buf B_BRAMISOCMRDDBUS63 (BRAMISOCMRDDBUS_delay[63], BRAMISOCMRDDBUS[63]);
buf B_CPMC405CLOCK (CPMC405CLOCK_delay, CPMC405CLOCK);
buf B_CPMC405CORECLKINACTIVE (CPMC405CORECLKINACTIVE_delay, CPMC405CORECLKINACTIVE);
buf B_CPMC405CPUCLKEN (CPMC405CPUCLKEN_delay, CPMC405CPUCLKEN);
buf B_CPMC405JTAGCLKEN (CPMC405JTAGCLKEN_delay, CPMC405JTAGCLKEN);
buf B_CPMC405SYNCBYPASS (CPMC405SYNCBYPASS_delay, CPMC405SYNCBYPASS);
buf B_CPMC405TIMERCLKEN (CPMC405TIMERCLKEN_delay, CPMC405TIMERCLKEN);
buf B_CPMC405TIMERTICK (CPMC405TIMERTICK_delay, CPMC405TIMERTICK);
buf B_CPMDCRCLK (CPMDCRCLK_delay, CPMDCRCLK);
buf B_CPMFCMCLK (CPMFCMCLK_delay, CPMFCMCLK);
buf B_DBGC405DEBUGHALT (DBGC405DEBUGHALT_delay, DBGC405DEBUGHALT);
buf B_DBGC405EXTBUSHOLDACK (DBGC405EXTBUSHOLDACK_delay, DBGC405EXTBUSHOLDACK);
buf B_DBGC405UNCONDDEBUGEVENT (DBGC405UNCONDDEBUGEVENT_delay, DBGC405UNCONDDEBUGEVENT);
buf B_DSARCVALUE0 (DSARCVALUE_delay[0], DSARCVALUE[0]);
buf B_DSARCVALUE1 (DSARCVALUE_delay[1], DSARCVALUE[1]);
buf B_DSARCVALUE2 (DSARCVALUE_delay[2], DSARCVALUE[2]);
buf B_DSARCVALUE3 (DSARCVALUE_delay[3], DSARCVALUE[3]);
buf B_DSARCVALUE4 (DSARCVALUE_delay[4], DSARCVALUE[4]);
buf B_DSARCVALUE5 (DSARCVALUE_delay[5], DSARCVALUE[5]);
buf B_DSARCVALUE6 (DSARCVALUE_delay[6], DSARCVALUE[6]);
buf B_DSARCVALUE7 (DSARCVALUE_delay[7], DSARCVALUE[7]);
buf B_DSCNTLVALUE0 (DSCNTLVALUE_delay[0], DSCNTLVALUE[0]);
buf B_DSCNTLVALUE1 (DSCNTLVALUE_delay[1], DSCNTLVALUE[1]);
buf B_DSCNTLVALUE2 (DSCNTLVALUE_delay[2], DSCNTLVALUE[2]);
buf B_DSCNTLVALUE3 (DSCNTLVALUE_delay[3], DSCNTLVALUE[3]);
buf B_DSCNTLVALUE4 (DSCNTLVALUE_delay[4], DSCNTLVALUE[4]);
buf B_DSCNTLVALUE5 (DSCNTLVALUE_delay[5], DSCNTLVALUE[5]);
buf B_DSCNTLVALUE6 (DSCNTLVALUE_delay[6], DSCNTLVALUE[6]);
buf B_DSCNTLVALUE7 (DSCNTLVALUE_delay[7], DSCNTLVALUE[7]);
buf B_DSOCMRWCOMPLETE (DSOCMRWCOMPLETE_delay, DSOCMRWCOMPLETE);
buf B_EICC405CRITINPUTIRQ (EICC405CRITINPUTIRQ_delay, EICC405CRITINPUTIRQ);
buf B_EICC405EXTINPUTIRQ (EICC405EXTINPUTIRQ_delay, EICC405EXTINPUTIRQ);
buf B_EXTDCRACK (EXTDCRACK_delay, EXTDCRACK);
buf B_EXTDCRDBUSIN0 (EXTDCRDBUSIN_delay[0], EXTDCRDBUSIN[0]);
buf B_EXTDCRDBUSIN1 (EXTDCRDBUSIN_delay[1], EXTDCRDBUSIN[1]);
buf B_EXTDCRDBUSIN2 (EXTDCRDBUSIN_delay[2], EXTDCRDBUSIN[2]);
buf B_EXTDCRDBUSIN3 (EXTDCRDBUSIN_delay[3], EXTDCRDBUSIN[3]);
buf B_EXTDCRDBUSIN4 (EXTDCRDBUSIN_delay[4], EXTDCRDBUSIN[4]);
buf B_EXTDCRDBUSIN5 (EXTDCRDBUSIN_delay[5], EXTDCRDBUSIN[5]);
buf B_EXTDCRDBUSIN6 (EXTDCRDBUSIN_delay[6], EXTDCRDBUSIN[6]);
buf B_EXTDCRDBUSIN7 (EXTDCRDBUSIN_delay[7], EXTDCRDBUSIN[7]);
buf B_EXTDCRDBUSIN8 (EXTDCRDBUSIN_delay[8], EXTDCRDBUSIN[8]);
buf B_EXTDCRDBUSIN9 (EXTDCRDBUSIN_delay[9], EXTDCRDBUSIN[9]);
buf B_EXTDCRDBUSIN10 (EXTDCRDBUSIN_delay[10], EXTDCRDBUSIN[10]);
buf B_EXTDCRDBUSIN11 (EXTDCRDBUSIN_delay[11], EXTDCRDBUSIN[11]);
buf B_EXTDCRDBUSIN12 (EXTDCRDBUSIN_delay[12], EXTDCRDBUSIN[12]);
buf B_EXTDCRDBUSIN13 (EXTDCRDBUSIN_delay[13], EXTDCRDBUSIN[13]);
buf B_EXTDCRDBUSIN14 (EXTDCRDBUSIN_delay[14], EXTDCRDBUSIN[14]);
buf B_EXTDCRDBUSIN15 (EXTDCRDBUSIN_delay[15], EXTDCRDBUSIN[15]);
buf B_EXTDCRDBUSIN16 (EXTDCRDBUSIN_delay[16], EXTDCRDBUSIN[16]);
buf B_EXTDCRDBUSIN17 (EXTDCRDBUSIN_delay[17], EXTDCRDBUSIN[17]);
buf B_EXTDCRDBUSIN18 (EXTDCRDBUSIN_delay[18], EXTDCRDBUSIN[18]);
buf B_EXTDCRDBUSIN19 (EXTDCRDBUSIN_delay[19], EXTDCRDBUSIN[19]);
buf B_EXTDCRDBUSIN20 (EXTDCRDBUSIN_delay[20], EXTDCRDBUSIN[20]);
buf B_EXTDCRDBUSIN21 (EXTDCRDBUSIN_delay[21], EXTDCRDBUSIN[21]);
buf B_EXTDCRDBUSIN22 (EXTDCRDBUSIN_delay[22], EXTDCRDBUSIN[22]);
buf B_EXTDCRDBUSIN23 (EXTDCRDBUSIN_delay[23], EXTDCRDBUSIN[23]);
buf B_EXTDCRDBUSIN24 (EXTDCRDBUSIN_delay[24], EXTDCRDBUSIN[24]);
buf B_EXTDCRDBUSIN25 (EXTDCRDBUSIN_delay[25], EXTDCRDBUSIN[25]);
buf B_EXTDCRDBUSIN26 (EXTDCRDBUSIN_delay[26], EXTDCRDBUSIN[26]);
buf B_EXTDCRDBUSIN27 (EXTDCRDBUSIN_delay[27], EXTDCRDBUSIN[27]);
buf B_EXTDCRDBUSIN28 (EXTDCRDBUSIN_delay[28], EXTDCRDBUSIN[28]);
buf B_EXTDCRDBUSIN29 (EXTDCRDBUSIN_delay[29], EXTDCRDBUSIN[29]);
buf B_EXTDCRDBUSIN30 (EXTDCRDBUSIN_delay[30], EXTDCRDBUSIN[30]);
buf B_EXTDCRDBUSIN31 (EXTDCRDBUSIN_delay[31], EXTDCRDBUSIN[31]);
buf B_FCMAPUCR0 (FCMAPUCR_delay[0], FCMAPUCR[0]);
buf B_FCMAPUCR1 (FCMAPUCR_delay[1], FCMAPUCR[1]);
buf B_FCMAPUCR2 (FCMAPUCR_delay[2], FCMAPUCR[2]);
buf B_FCMAPUCR3 (FCMAPUCR_delay[3], FCMAPUCR[3]);
buf B_FCMAPUDCDCREN (FCMAPUDCDCREN_delay, FCMAPUDCDCREN);
buf B_FCMAPUDCDFORCEALIGN (FCMAPUDCDFORCEALIGN_delay, FCMAPUDCDFORCEALIGN);
buf B_FCMAPUDCDFORCEBESTEERING (FCMAPUDCDFORCEBESTEERING_delay, FCMAPUDCDFORCEBESTEERING);
buf B_FCMAPUDCDFPUOP (FCMAPUDCDFPUOP_delay, FCMAPUDCDFPUOP);
buf B_FCMAPUDCDGPRWRITE (FCMAPUDCDGPRWRITE_delay, FCMAPUDCDGPRWRITE);
buf B_FCMAPUDCDLDSTBYTE (FCMAPUDCDLDSTBYTE_delay, FCMAPUDCDLDSTBYTE);
buf B_FCMAPUDCDLDSTDW (FCMAPUDCDLDSTDW_delay, FCMAPUDCDLDSTDW);
buf B_FCMAPUDCDLDSTHW (FCMAPUDCDLDSTHW_delay, FCMAPUDCDLDSTHW);
buf B_FCMAPUDCDLDSTQW (FCMAPUDCDLDSTQW_delay, FCMAPUDCDLDSTQW);
buf B_FCMAPUDCDLDSTWD (FCMAPUDCDLDSTWD_delay, FCMAPUDCDLDSTWD);
buf B_FCMAPUDCDLOAD (FCMAPUDCDLOAD_delay, FCMAPUDCDLOAD);
buf B_FCMAPUDCDPRIVOP (FCMAPUDCDPRIVOP_delay, FCMAPUDCDPRIVOP);
buf B_FCMAPUDCDRAEN (FCMAPUDCDRAEN_delay, FCMAPUDCDRAEN);
buf B_FCMAPUDCDRBEN (FCMAPUDCDRBEN_delay, FCMAPUDCDRBEN);
buf B_FCMAPUDCDSTORE (FCMAPUDCDSTORE_delay, FCMAPUDCDSTORE);
buf B_FCMAPUDCDTRAPBE (FCMAPUDCDTRAPBE_delay, FCMAPUDCDTRAPBE);
buf B_FCMAPUDCDTRAPLE (FCMAPUDCDTRAPLE_delay, FCMAPUDCDTRAPLE);
buf B_FCMAPUDCDUPDATE (FCMAPUDCDUPDATE_delay, FCMAPUDCDUPDATE);
buf B_FCMAPUDCDXERCAEN (FCMAPUDCDXERCAEN_delay, FCMAPUDCDXERCAEN);
buf B_FCMAPUDCDXEROVEN (FCMAPUDCDXEROVEN_delay, FCMAPUDCDXEROVEN);
buf B_FCMAPUDECODEBUSY (FCMAPUDECODEBUSY_delay, FCMAPUDECODEBUSY);
buf B_FCMAPUDONE (FCMAPUDONE_delay, FCMAPUDONE);
buf B_FCMAPUEXCEPTION (FCMAPUEXCEPTION_delay, FCMAPUEXCEPTION);
buf B_FCMAPUEXEBLOCKINGMCO (FCMAPUEXEBLOCKINGMCO_delay, FCMAPUEXEBLOCKINGMCO);
buf B_FCMAPUEXECRFIELD0 (FCMAPUEXECRFIELD_delay[0], FCMAPUEXECRFIELD[0]);
buf B_FCMAPUEXECRFIELD1 (FCMAPUEXECRFIELD_delay[1], FCMAPUEXECRFIELD[1]);
buf B_FCMAPUEXECRFIELD2 (FCMAPUEXECRFIELD_delay[2], FCMAPUEXECRFIELD[2]);
buf B_FCMAPUEXENONBLOCKINGMCO (FCMAPUEXENONBLOCKINGMCO_delay, FCMAPUEXENONBLOCKINGMCO);
buf B_FCMAPUINSTRACK (FCMAPUINSTRACK_delay, FCMAPUINSTRACK);
buf B_FCMAPULOADWAIT (FCMAPULOADWAIT_delay, FCMAPULOADWAIT);
buf B_FCMAPURESULT0 (FCMAPURESULT_delay[0], FCMAPURESULT[0]);
buf B_FCMAPURESULT1 (FCMAPURESULT_delay[1], FCMAPURESULT[1]);
buf B_FCMAPURESULT2 (FCMAPURESULT_delay[2], FCMAPURESULT[2]);
buf B_FCMAPURESULT3 (FCMAPURESULT_delay[3], FCMAPURESULT[3]);
buf B_FCMAPURESULT4 (FCMAPURESULT_delay[4], FCMAPURESULT[4]);
buf B_FCMAPURESULT5 (FCMAPURESULT_delay[5], FCMAPURESULT[5]);
buf B_FCMAPURESULT6 (FCMAPURESULT_delay[6], FCMAPURESULT[6]);
buf B_FCMAPURESULT7 (FCMAPURESULT_delay[7], FCMAPURESULT[7]);
buf B_FCMAPURESULT8 (FCMAPURESULT_delay[8], FCMAPURESULT[8]);
buf B_FCMAPURESULT9 (FCMAPURESULT_delay[9], FCMAPURESULT[9]);
buf B_FCMAPURESULT10 (FCMAPURESULT_delay[10], FCMAPURESULT[10]);
buf B_FCMAPURESULT11 (FCMAPURESULT_delay[11], FCMAPURESULT[11]);
buf B_FCMAPURESULT12 (FCMAPURESULT_delay[12], FCMAPURESULT[12]);
buf B_FCMAPURESULT13 (FCMAPURESULT_delay[13], FCMAPURESULT[13]);
buf B_FCMAPURESULT14 (FCMAPURESULT_delay[14], FCMAPURESULT[14]);
buf B_FCMAPURESULT15 (FCMAPURESULT_delay[15], FCMAPURESULT[15]);
buf B_FCMAPURESULT16 (FCMAPURESULT_delay[16], FCMAPURESULT[16]);
buf B_FCMAPURESULT17 (FCMAPURESULT_delay[17], FCMAPURESULT[17]);
buf B_FCMAPURESULT18 (FCMAPURESULT_delay[18], FCMAPURESULT[18]);
buf B_FCMAPURESULT19 (FCMAPURESULT_delay[19], FCMAPURESULT[19]);
buf B_FCMAPURESULT20 (FCMAPURESULT_delay[20], FCMAPURESULT[20]);
buf B_FCMAPURESULT21 (FCMAPURESULT_delay[21], FCMAPURESULT[21]);
buf B_FCMAPURESULT22 (FCMAPURESULT_delay[22], FCMAPURESULT[22]);
buf B_FCMAPURESULT23 (FCMAPURESULT_delay[23], FCMAPURESULT[23]);
buf B_FCMAPURESULT24 (FCMAPURESULT_delay[24], FCMAPURESULT[24]);
buf B_FCMAPURESULT25 (FCMAPURESULT_delay[25], FCMAPURESULT[25]);
buf B_FCMAPURESULT26 (FCMAPURESULT_delay[26], FCMAPURESULT[26]);
buf B_FCMAPURESULT27 (FCMAPURESULT_delay[27], FCMAPURESULT[27]);
buf B_FCMAPURESULT28 (FCMAPURESULT_delay[28], FCMAPURESULT[28]);
buf B_FCMAPURESULT29 (FCMAPURESULT_delay[29], FCMAPURESULT[29]);
buf B_FCMAPURESULT30 (FCMAPURESULT_delay[30], FCMAPURESULT[30]);
buf B_FCMAPURESULT31 (FCMAPURESULT_delay[31], FCMAPURESULT[31]);
buf B_FCMAPURESULTVALID (FCMAPURESULTVALID_delay, FCMAPURESULTVALID);
buf B_FCMAPUSLEEPNOTREADY (FCMAPUSLEEPNOTREADY_delay, FCMAPUSLEEPNOTREADY);
buf B_FCMAPUXERCA (FCMAPUXERCA_delay, FCMAPUXERCA);
buf B_FCMAPUXEROV (FCMAPUXEROV_delay, FCMAPUXEROV);
buf B_ISARCVALUE0 (ISARCVALUE_delay[0], ISARCVALUE[0]);
buf B_ISARCVALUE1 (ISARCVALUE_delay[1], ISARCVALUE[1]);
buf B_ISARCVALUE2 (ISARCVALUE_delay[2], ISARCVALUE[2]);
buf B_ISARCVALUE3 (ISARCVALUE_delay[3], ISARCVALUE[3]);
buf B_ISARCVALUE4 (ISARCVALUE_delay[4], ISARCVALUE[4]);
buf B_ISARCVALUE5 (ISARCVALUE_delay[5], ISARCVALUE[5]);
buf B_ISARCVALUE6 (ISARCVALUE_delay[6], ISARCVALUE[6]);
buf B_ISARCVALUE7 (ISARCVALUE_delay[7], ISARCVALUE[7]);
buf B_ISCNTLVALUE0 (ISCNTLVALUE_delay[0], ISCNTLVALUE[0]);
buf B_ISCNTLVALUE1 (ISCNTLVALUE_delay[1], ISCNTLVALUE[1]);
buf B_ISCNTLVALUE2 (ISCNTLVALUE_delay[2], ISCNTLVALUE[2]);
buf B_ISCNTLVALUE3 (ISCNTLVALUE_delay[3], ISCNTLVALUE[3]);
buf B_ISCNTLVALUE4 (ISCNTLVALUE_delay[4], ISCNTLVALUE[4]);
buf B_ISCNTLVALUE5 (ISCNTLVALUE_delay[5], ISCNTLVALUE[5]);
buf B_ISCNTLVALUE6 (ISCNTLVALUE_delay[6], ISCNTLVALUE[6]);
buf B_ISCNTLVALUE7 (ISCNTLVALUE_delay[7], ISCNTLVALUE[7]);
buf B_JTGC405BNDSCANTDO (JTGC405BNDSCANTDO_delay, JTGC405BNDSCANTDO);
buf B_JTGC405TCK (JTGC405TCK_delay, JTGC405TCK);
buf B_JTGC405TDI (JTGC405TDI_delay, JTGC405TDI);
buf B_JTGC405TMS (JTGC405TMS_delay, JTGC405TMS);
buf B_JTGC405TRSTNEG (JTGC405TRSTNEG_delay, JTGC405TRSTNEG);
buf B_MCBCPUCLKEN (MCBCPUCLKEN_delay, MCBCPUCLKEN);
buf B_MCBJTAGEN (MCBJTAGEN_delay, MCBJTAGEN);
buf B_MCBTIMEREN (MCBTIMEREN_delay, MCBTIMEREN);
buf B_MCPPCRST (MCPPCRST_delay, MCPPCRST);
buf B_PLBC405DCUADDRACK (PLBC405DCUADDRACK_delay, PLBC405DCUADDRACK);
buf B_PLBC405DCUBUSY (PLBC405DCUBUSY_delay, PLBC405DCUBUSY);
buf B_PLBC405DCUERR (PLBC405DCUERR_delay, PLBC405DCUERR);
buf B_PLBC405DCURDDACK (PLBC405DCURDDACK_delay, PLBC405DCURDDACK);
buf B_PLBC405DCURDDBUS0 (PLBC405DCURDDBUS_delay[0], PLBC405DCURDDBUS[0]);
buf B_PLBC405DCURDDBUS1 (PLBC405DCURDDBUS_delay[1], PLBC405DCURDDBUS[1]);
buf B_PLBC405DCURDDBUS2 (PLBC405DCURDDBUS_delay[2], PLBC405DCURDDBUS[2]);
buf B_PLBC405DCURDDBUS3 (PLBC405DCURDDBUS_delay[3], PLBC405DCURDDBUS[3]);
buf B_PLBC405DCURDDBUS4 (PLBC405DCURDDBUS_delay[4], PLBC405DCURDDBUS[4]);
buf B_PLBC405DCURDDBUS5 (PLBC405DCURDDBUS_delay[5], PLBC405DCURDDBUS[5]);
buf B_PLBC405DCURDDBUS6 (PLBC405DCURDDBUS_delay[6], PLBC405DCURDDBUS[6]);
buf B_PLBC405DCURDDBUS7 (PLBC405DCURDDBUS_delay[7], PLBC405DCURDDBUS[7]);
buf B_PLBC405DCURDDBUS8 (PLBC405DCURDDBUS_delay[8], PLBC405DCURDDBUS[8]);
buf B_PLBC405DCURDDBUS9 (PLBC405DCURDDBUS_delay[9], PLBC405DCURDDBUS[9]);
buf B_PLBC405DCURDDBUS10 (PLBC405DCURDDBUS_delay[10], PLBC405DCURDDBUS[10]);
buf B_PLBC405DCURDDBUS11 (PLBC405DCURDDBUS_delay[11], PLBC405DCURDDBUS[11]);
buf B_PLBC405DCURDDBUS12 (PLBC405DCURDDBUS_delay[12], PLBC405DCURDDBUS[12]);
buf B_PLBC405DCURDDBUS13 (PLBC405DCURDDBUS_delay[13], PLBC405DCURDDBUS[13]);
buf B_PLBC405DCURDDBUS14 (PLBC405DCURDDBUS_delay[14], PLBC405DCURDDBUS[14]);
buf B_PLBC405DCURDDBUS15 (PLBC405DCURDDBUS_delay[15], PLBC405DCURDDBUS[15]);
buf B_PLBC405DCURDDBUS16 (PLBC405DCURDDBUS_delay[16], PLBC405DCURDDBUS[16]);
buf B_PLBC405DCURDDBUS17 (PLBC405DCURDDBUS_delay[17], PLBC405DCURDDBUS[17]);
buf B_PLBC405DCURDDBUS18 (PLBC405DCURDDBUS_delay[18], PLBC405DCURDDBUS[18]);
buf B_PLBC405DCURDDBUS19 (PLBC405DCURDDBUS_delay[19], PLBC405DCURDDBUS[19]);
buf B_PLBC405DCURDDBUS20 (PLBC405DCURDDBUS_delay[20], PLBC405DCURDDBUS[20]);
buf B_PLBC405DCURDDBUS21 (PLBC405DCURDDBUS_delay[21], PLBC405DCURDDBUS[21]);
buf B_PLBC405DCURDDBUS22 (PLBC405DCURDDBUS_delay[22], PLBC405DCURDDBUS[22]);
buf B_PLBC405DCURDDBUS23 (PLBC405DCURDDBUS_delay[23], PLBC405DCURDDBUS[23]);
buf B_PLBC405DCURDDBUS24 (PLBC405DCURDDBUS_delay[24], PLBC405DCURDDBUS[24]);
buf B_PLBC405DCURDDBUS25 (PLBC405DCURDDBUS_delay[25], PLBC405DCURDDBUS[25]);
buf B_PLBC405DCURDDBUS26 (PLBC405DCURDDBUS_delay[26], PLBC405DCURDDBUS[26]);
buf B_PLBC405DCURDDBUS27 (PLBC405DCURDDBUS_delay[27], PLBC405DCURDDBUS[27]);
buf B_PLBC405DCURDDBUS28 (PLBC405DCURDDBUS_delay[28], PLBC405DCURDDBUS[28]);
buf B_PLBC405DCURDDBUS29 (PLBC405DCURDDBUS_delay[29], PLBC405DCURDDBUS[29]);
buf B_PLBC405DCURDDBUS30 (PLBC405DCURDDBUS_delay[30], PLBC405DCURDDBUS[30]);
buf B_PLBC405DCURDDBUS31 (PLBC405DCURDDBUS_delay[31], PLBC405DCURDDBUS[31]);
buf B_PLBC405DCURDDBUS32 (PLBC405DCURDDBUS_delay[32], PLBC405DCURDDBUS[32]);
buf B_PLBC405DCURDDBUS33 (PLBC405DCURDDBUS_delay[33], PLBC405DCURDDBUS[33]);
buf B_PLBC405DCURDDBUS34 (PLBC405DCURDDBUS_delay[34], PLBC405DCURDDBUS[34]);
buf B_PLBC405DCURDDBUS35 (PLBC405DCURDDBUS_delay[35], PLBC405DCURDDBUS[35]);
buf B_PLBC405DCURDDBUS36 (PLBC405DCURDDBUS_delay[36], PLBC405DCURDDBUS[36]);
buf B_PLBC405DCURDDBUS37 (PLBC405DCURDDBUS_delay[37], PLBC405DCURDDBUS[37]);
buf B_PLBC405DCURDDBUS38 (PLBC405DCURDDBUS_delay[38], PLBC405DCURDDBUS[38]);
buf B_PLBC405DCURDDBUS39 (PLBC405DCURDDBUS_delay[39], PLBC405DCURDDBUS[39]);
buf B_PLBC405DCURDDBUS40 (PLBC405DCURDDBUS_delay[40], PLBC405DCURDDBUS[40]);
buf B_PLBC405DCURDDBUS41 (PLBC405DCURDDBUS_delay[41], PLBC405DCURDDBUS[41]);
buf B_PLBC405DCURDDBUS42 (PLBC405DCURDDBUS_delay[42], PLBC405DCURDDBUS[42]);
buf B_PLBC405DCURDDBUS43 (PLBC405DCURDDBUS_delay[43], PLBC405DCURDDBUS[43]);
buf B_PLBC405DCURDDBUS44 (PLBC405DCURDDBUS_delay[44], PLBC405DCURDDBUS[44]);
buf B_PLBC405DCURDDBUS45 (PLBC405DCURDDBUS_delay[45], PLBC405DCURDDBUS[45]);
buf B_PLBC405DCURDDBUS46 (PLBC405DCURDDBUS_delay[46], PLBC405DCURDDBUS[46]);
buf B_PLBC405DCURDDBUS47 (PLBC405DCURDDBUS_delay[47], PLBC405DCURDDBUS[47]);
buf B_PLBC405DCURDDBUS48 (PLBC405DCURDDBUS_delay[48], PLBC405DCURDDBUS[48]);
buf B_PLBC405DCURDDBUS49 (PLBC405DCURDDBUS_delay[49], PLBC405DCURDDBUS[49]);
buf B_PLBC405DCURDDBUS50 (PLBC405DCURDDBUS_delay[50], PLBC405DCURDDBUS[50]);
buf B_PLBC405DCURDDBUS51 (PLBC405DCURDDBUS_delay[51], PLBC405DCURDDBUS[51]);
buf B_PLBC405DCURDDBUS52 (PLBC405DCURDDBUS_delay[52], PLBC405DCURDDBUS[52]);
buf B_PLBC405DCURDDBUS53 (PLBC405DCURDDBUS_delay[53], PLBC405DCURDDBUS[53]);
buf B_PLBC405DCURDDBUS54 (PLBC405DCURDDBUS_delay[54], PLBC405DCURDDBUS[54]);
buf B_PLBC405DCURDDBUS55 (PLBC405DCURDDBUS_delay[55], PLBC405DCURDDBUS[55]);
buf B_PLBC405DCURDDBUS56 (PLBC405DCURDDBUS_delay[56], PLBC405DCURDDBUS[56]);
buf B_PLBC405DCURDDBUS57 (PLBC405DCURDDBUS_delay[57], PLBC405DCURDDBUS[57]);
buf B_PLBC405DCURDDBUS58 (PLBC405DCURDDBUS_delay[58], PLBC405DCURDDBUS[58]);
buf B_PLBC405DCURDDBUS59 (PLBC405DCURDDBUS_delay[59], PLBC405DCURDDBUS[59]);
buf B_PLBC405DCURDDBUS60 (PLBC405DCURDDBUS_delay[60], PLBC405DCURDDBUS[60]);
buf B_PLBC405DCURDDBUS61 (PLBC405DCURDDBUS_delay[61], PLBC405DCURDDBUS[61]);
buf B_PLBC405DCURDDBUS62 (PLBC405DCURDDBUS_delay[62], PLBC405DCURDDBUS[62]);
buf B_PLBC405DCURDDBUS63 (PLBC405DCURDDBUS_delay[63], PLBC405DCURDDBUS[63]);
buf B_PLBC405DCURDWDADDR1 (PLBC405DCURDWDADDR_delay[1], PLBC405DCURDWDADDR[1]);
buf B_PLBC405DCURDWDADDR2 (PLBC405DCURDWDADDR_delay[2], PLBC405DCURDWDADDR[2]);
buf B_PLBC405DCURDWDADDR3 (PLBC405DCURDWDADDR_delay[3], PLBC405DCURDWDADDR[3]);
buf B_PLBC405DCUSSIZE1 (PLBC405DCUSSIZE1_delay, PLBC405DCUSSIZE1);
buf B_PLBC405DCUWRDACK (PLBC405DCUWRDACK_delay, PLBC405DCUWRDACK);
buf B_PLBC405ICUADDRACK (PLBC405ICUADDRACK_delay, PLBC405ICUADDRACK);
buf B_PLBC405ICUBUSY (PLBC405ICUBUSY_delay, PLBC405ICUBUSY);
buf B_PLBC405ICUERR (PLBC405ICUERR_delay, PLBC405ICUERR);
buf B_PLBC405ICURDDACK (PLBC405ICURDDACK_delay, PLBC405ICURDDACK);
buf B_PLBC405ICURDDBUS0 (PLBC405ICURDDBUS_delay[0], PLBC405ICURDDBUS[0]);
buf B_PLBC405ICURDDBUS1 (PLBC405ICURDDBUS_delay[1], PLBC405ICURDDBUS[1]);
buf B_PLBC405ICURDDBUS2 (PLBC405ICURDDBUS_delay[2], PLBC405ICURDDBUS[2]);
buf B_PLBC405ICURDDBUS3 (PLBC405ICURDDBUS_delay[3], PLBC405ICURDDBUS[3]);
buf B_PLBC405ICURDDBUS4 (PLBC405ICURDDBUS_delay[4], PLBC405ICURDDBUS[4]);
buf B_PLBC405ICURDDBUS5 (PLBC405ICURDDBUS_delay[5], PLBC405ICURDDBUS[5]);
buf B_PLBC405ICURDDBUS6 (PLBC405ICURDDBUS_delay[6], PLBC405ICURDDBUS[6]);
buf B_PLBC405ICURDDBUS7 (PLBC405ICURDDBUS_delay[7], PLBC405ICURDDBUS[7]);
buf B_PLBC405ICURDDBUS8 (PLBC405ICURDDBUS_delay[8], PLBC405ICURDDBUS[8]);
buf B_PLBC405ICURDDBUS9 (PLBC405ICURDDBUS_delay[9], PLBC405ICURDDBUS[9]);
buf B_PLBC405ICURDDBUS10 (PLBC405ICURDDBUS_delay[10], PLBC405ICURDDBUS[10]);
buf B_PLBC405ICURDDBUS11 (PLBC405ICURDDBUS_delay[11], PLBC405ICURDDBUS[11]);
buf B_PLBC405ICURDDBUS12 (PLBC405ICURDDBUS_delay[12], PLBC405ICURDDBUS[12]);
buf B_PLBC405ICURDDBUS13 (PLBC405ICURDDBUS_delay[13], PLBC405ICURDDBUS[13]);
buf B_PLBC405ICURDDBUS14 (PLBC405ICURDDBUS_delay[14], PLBC405ICURDDBUS[14]);
buf B_PLBC405ICURDDBUS15 (PLBC405ICURDDBUS_delay[15], PLBC405ICURDDBUS[15]);
buf B_PLBC405ICURDDBUS16 (PLBC405ICURDDBUS_delay[16], PLBC405ICURDDBUS[16]);
buf B_PLBC405ICURDDBUS17 (PLBC405ICURDDBUS_delay[17], PLBC405ICURDDBUS[17]);
buf B_PLBC405ICURDDBUS18 (PLBC405ICURDDBUS_delay[18], PLBC405ICURDDBUS[18]);
buf B_PLBC405ICURDDBUS19 (PLBC405ICURDDBUS_delay[19], PLBC405ICURDDBUS[19]);
buf B_PLBC405ICURDDBUS20 (PLBC405ICURDDBUS_delay[20], PLBC405ICURDDBUS[20]);
buf B_PLBC405ICURDDBUS21 (PLBC405ICURDDBUS_delay[21], PLBC405ICURDDBUS[21]);
buf B_PLBC405ICURDDBUS22 (PLBC405ICURDDBUS_delay[22], PLBC405ICURDDBUS[22]);
buf B_PLBC405ICURDDBUS23 (PLBC405ICURDDBUS_delay[23], PLBC405ICURDDBUS[23]);
buf B_PLBC405ICURDDBUS24 (PLBC405ICURDDBUS_delay[24], PLBC405ICURDDBUS[24]);
buf B_PLBC405ICURDDBUS25 (PLBC405ICURDDBUS_delay[25], PLBC405ICURDDBUS[25]);
buf B_PLBC405ICURDDBUS26 (PLBC405ICURDDBUS_delay[26], PLBC405ICURDDBUS[26]);
buf B_PLBC405ICURDDBUS27 (PLBC405ICURDDBUS_delay[27], PLBC405ICURDDBUS[27]);
buf B_PLBC405ICURDDBUS28 (PLBC405ICURDDBUS_delay[28], PLBC405ICURDDBUS[28]);
buf B_PLBC405ICURDDBUS29 (PLBC405ICURDDBUS_delay[29], PLBC405ICURDDBUS[29]);
buf B_PLBC405ICURDDBUS30 (PLBC405ICURDDBUS_delay[30], PLBC405ICURDDBUS[30]);
buf B_PLBC405ICURDDBUS31 (PLBC405ICURDDBUS_delay[31], PLBC405ICURDDBUS[31]);
buf B_PLBC405ICURDDBUS32 (PLBC405ICURDDBUS_delay[32], PLBC405ICURDDBUS[32]);
buf B_PLBC405ICURDDBUS33 (PLBC405ICURDDBUS_delay[33], PLBC405ICURDDBUS[33]);
buf B_PLBC405ICURDDBUS34 (PLBC405ICURDDBUS_delay[34], PLBC405ICURDDBUS[34]);
buf B_PLBC405ICURDDBUS35 (PLBC405ICURDDBUS_delay[35], PLBC405ICURDDBUS[35]);
buf B_PLBC405ICURDDBUS36 (PLBC405ICURDDBUS_delay[36], PLBC405ICURDDBUS[36]);
buf B_PLBC405ICURDDBUS37 (PLBC405ICURDDBUS_delay[37], PLBC405ICURDDBUS[37]);
buf B_PLBC405ICURDDBUS38 (PLBC405ICURDDBUS_delay[38], PLBC405ICURDDBUS[38]);
buf B_PLBC405ICURDDBUS39 (PLBC405ICURDDBUS_delay[39], PLBC405ICURDDBUS[39]);
buf B_PLBC405ICURDDBUS40 (PLBC405ICURDDBUS_delay[40], PLBC405ICURDDBUS[40]);
buf B_PLBC405ICURDDBUS41 (PLBC405ICURDDBUS_delay[41], PLBC405ICURDDBUS[41]);
buf B_PLBC405ICURDDBUS42 (PLBC405ICURDDBUS_delay[42], PLBC405ICURDDBUS[42]);
buf B_PLBC405ICURDDBUS43 (PLBC405ICURDDBUS_delay[43], PLBC405ICURDDBUS[43]);
buf B_PLBC405ICURDDBUS44 (PLBC405ICURDDBUS_delay[44], PLBC405ICURDDBUS[44]);
buf B_PLBC405ICURDDBUS45 (PLBC405ICURDDBUS_delay[45], PLBC405ICURDDBUS[45]);
buf B_PLBC405ICURDDBUS46 (PLBC405ICURDDBUS_delay[46], PLBC405ICURDDBUS[46]);
buf B_PLBC405ICURDDBUS47 (PLBC405ICURDDBUS_delay[47], PLBC405ICURDDBUS[47]);
buf B_PLBC405ICURDDBUS48 (PLBC405ICURDDBUS_delay[48], PLBC405ICURDDBUS[48]);
buf B_PLBC405ICURDDBUS49 (PLBC405ICURDDBUS_delay[49], PLBC405ICURDDBUS[49]);
buf B_PLBC405ICURDDBUS50 (PLBC405ICURDDBUS_delay[50], PLBC405ICURDDBUS[50]);
buf B_PLBC405ICURDDBUS51 (PLBC405ICURDDBUS_delay[51], PLBC405ICURDDBUS[51]);
buf B_PLBC405ICURDDBUS52 (PLBC405ICURDDBUS_delay[52], PLBC405ICURDDBUS[52]);
buf B_PLBC405ICURDDBUS53 (PLBC405ICURDDBUS_delay[53], PLBC405ICURDDBUS[53]);
buf B_PLBC405ICURDDBUS54 (PLBC405ICURDDBUS_delay[54], PLBC405ICURDDBUS[54]);
buf B_PLBC405ICURDDBUS55 (PLBC405ICURDDBUS_delay[55], PLBC405ICURDDBUS[55]);
buf B_PLBC405ICURDDBUS56 (PLBC405ICURDDBUS_delay[56], PLBC405ICURDDBUS[56]);
buf B_PLBC405ICURDDBUS57 (PLBC405ICURDDBUS_delay[57], PLBC405ICURDDBUS[57]);
buf B_PLBC405ICURDDBUS58 (PLBC405ICURDDBUS_delay[58], PLBC405ICURDDBUS[58]);
buf B_PLBC405ICURDDBUS59 (PLBC405ICURDDBUS_delay[59], PLBC405ICURDDBUS[59]);
buf B_PLBC405ICURDDBUS60 (PLBC405ICURDDBUS_delay[60], PLBC405ICURDDBUS[60]);
buf B_PLBC405ICURDDBUS61 (PLBC405ICURDDBUS_delay[61], PLBC405ICURDDBUS[61]);
buf B_PLBC405ICURDDBUS62 (PLBC405ICURDDBUS_delay[62], PLBC405ICURDDBUS[62]);
buf B_PLBC405ICURDDBUS63 (PLBC405ICURDDBUS_delay[63], PLBC405ICURDDBUS[63]);
buf B_PLBC405ICURDWDADDR1 (PLBC405ICURDWDADDR_delay[1], PLBC405ICURDWDADDR[1]);
buf B_PLBC405ICURDWDADDR2 (PLBC405ICURDWDADDR_delay[2], PLBC405ICURDWDADDR[2]);
buf B_PLBC405ICURDWDADDR3 (PLBC405ICURDWDADDR_delay[3], PLBC405ICURDWDADDR[3]);
buf B_PLBC405ICUSSIZE1 (PLBC405ICUSSIZE1_delay, PLBC405ICUSSIZE1);
buf B_PLBCLK (PLBCLK_delay, PLBCLK);
buf B_RSTC405RESETCHIP (RSTC405RESETCHIP_delay, RSTC405RESETCHIP);
buf B_RSTC405RESETCORE (RSTC405RESETCORE_delay, RSTC405RESETCORE);
buf B_RSTC405RESETSYS (RSTC405RESETSYS_delay, RSTC405RESETSYS);
buf B_TIEAPUCONTROL0 (TIEAPUCONTROL_delay[0], TIEAPUCONTROL[0]);
buf B_TIEAPUCONTROL1 (TIEAPUCONTROL_delay[1], TIEAPUCONTROL[1]);
buf B_TIEAPUCONTROL2 (TIEAPUCONTROL_delay[2], TIEAPUCONTROL[2]);
buf B_TIEAPUCONTROL3 (TIEAPUCONTROL_delay[3], TIEAPUCONTROL[3]);
buf B_TIEAPUCONTROL4 (TIEAPUCONTROL_delay[4], TIEAPUCONTROL[4]);
buf B_TIEAPUCONTROL5 (TIEAPUCONTROL_delay[5], TIEAPUCONTROL[5]);
buf B_TIEAPUCONTROL6 (TIEAPUCONTROL_delay[6], TIEAPUCONTROL[6]);
buf B_TIEAPUCONTROL7 (TIEAPUCONTROL_delay[7], TIEAPUCONTROL[7]);
buf B_TIEAPUCONTROL8 (TIEAPUCONTROL_delay[8], TIEAPUCONTROL[8]);
buf B_TIEAPUCONTROL9 (TIEAPUCONTROL_delay[9], TIEAPUCONTROL[9]);
buf B_TIEAPUCONTROL10 (TIEAPUCONTROL_delay[10], TIEAPUCONTROL[10]);
buf B_TIEAPUCONTROL11 (TIEAPUCONTROL_delay[11], TIEAPUCONTROL[11]);
buf B_TIEAPUCONTROL12 (TIEAPUCONTROL_delay[12], TIEAPUCONTROL[12]);
buf B_TIEAPUCONTROL13 (TIEAPUCONTROL_delay[13], TIEAPUCONTROL[13]);
buf B_TIEAPUCONTROL14 (TIEAPUCONTROL_delay[14], TIEAPUCONTROL[14]);
buf B_TIEAPUCONTROL15 (TIEAPUCONTROL_delay[15], TIEAPUCONTROL[15]);
buf B_TIEAPUUDI10 (TIEAPUUDI1_delay[0], TIEAPUUDI1[0]);
buf B_TIEAPUUDI11 (TIEAPUUDI1_delay[1], TIEAPUUDI1[1]);
buf B_TIEAPUUDI12 (TIEAPUUDI1_delay[2], TIEAPUUDI1[2]);
buf B_TIEAPUUDI13 (TIEAPUUDI1_delay[3], TIEAPUUDI1[3]);
buf B_TIEAPUUDI14 (TIEAPUUDI1_delay[4], TIEAPUUDI1[4]);
buf B_TIEAPUUDI15 (TIEAPUUDI1_delay[5], TIEAPUUDI1[5]);
buf B_TIEAPUUDI16 (TIEAPUUDI1_delay[6], TIEAPUUDI1[6]);
buf B_TIEAPUUDI17 (TIEAPUUDI1_delay[7], TIEAPUUDI1[7]);
buf B_TIEAPUUDI18 (TIEAPUUDI1_delay[8], TIEAPUUDI1[8]);
buf B_TIEAPUUDI19 (TIEAPUUDI1_delay[9], TIEAPUUDI1[9]);
buf B_TIEAPUUDI110 (TIEAPUUDI1_delay[10], TIEAPUUDI1[10]);
buf B_TIEAPUUDI111 (TIEAPUUDI1_delay[11], TIEAPUUDI1[11]);
buf B_TIEAPUUDI112 (TIEAPUUDI1_delay[12], TIEAPUUDI1[12]);
buf B_TIEAPUUDI113 (TIEAPUUDI1_delay[13], TIEAPUUDI1[13]);
buf B_TIEAPUUDI114 (TIEAPUUDI1_delay[14], TIEAPUUDI1[14]);
buf B_TIEAPUUDI115 (TIEAPUUDI1_delay[15], TIEAPUUDI1[15]);
buf B_TIEAPUUDI116 (TIEAPUUDI1_delay[16], TIEAPUUDI1[16]);
buf B_TIEAPUUDI117 (TIEAPUUDI1_delay[17], TIEAPUUDI1[17]);
buf B_TIEAPUUDI118 (TIEAPUUDI1_delay[18], TIEAPUUDI1[18]);
buf B_TIEAPUUDI119 (TIEAPUUDI1_delay[19], TIEAPUUDI1[19]);
buf B_TIEAPUUDI120 (TIEAPUUDI1_delay[20], TIEAPUUDI1[20]);
buf B_TIEAPUUDI121 (TIEAPUUDI1_delay[21], TIEAPUUDI1[21]);
buf B_TIEAPUUDI122 (TIEAPUUDI1_delay[22], TIEAPUUDI1[22]);
buf B_TIEAPUUDI123 (TIEAPUUDI1_delay[23], TIEAPUUDI1[23]);
buf B_TIEAPUUDI20 (TIEAPUUDI2_delay[0], TIEAPUUDI2[0]);
buf B_TIEAPUUDI21 (TIEAPUUDI2_delay[1], TIEAPUUDI2[1]);
buf B_TIEAPUUDI22 (TIEAPUUDI2_delay[2], TIEAPUUDI2[2]);
buf B_TIEAPUUDI23 (TIEAPUUDI2_delay[3], TIEAPUUDI2[3]);
buf B_TIEAPUUDI24 (TIEAPUUDI2_delay[4], TIEAPUUDI2[4]);
buf B_TIEAPUUDI25 (TIEAPUUDI2_delay[5], TIEAPUUDI2[5]);
buf B_TIEAPUUDI26 (TIEAPUUDI2_delay[6], TIEAPUUDI2[6]);
buf B_TIEAPUUDI27 (TIEAPUUDI2_delay[7], TIEAPUUDI2[7]);
buf B_TIEAPUUDI28 (TIEAPUUDI2_delay[8], TIEAPUUDI2[8]);
buf B_TIEAPUUDI29 (TIEAPUUDI2_delay[9], TIEAPUUDI2[9]);
buf B_TIEAPUUDI210 (TIEAPUUDI2_delay[10], TIEAPUUDI2[10]);
buf B_TIEAPUUDI211 (TIEAPUUDI2_delay[11], TIEAPUUDI2[11]);
buf B_TIEAPUUDI212 (TIEAPUUDI2_delay[12], TIEAPUUDI2[12]);
buf B_TIEAPUUDI213 (TIEAPUUDI2_delay[13], TIEAPUUDI2[13]);
buf B_TIEAPUUDI214 (TIEAPUUDI2_delay[14], TIEAPUUDI2[14]);
buf B_TIEAPUUDI215 (TIEAPUUDI2_delay[15], TIEAPUUDI2[15]);
buf B_TIEAPUUDI216 (TIEAPUUDI2_delay[16], TIEAPUUDI2[16]);
buf B_TIEAPUUDI217 (TIEAPUUDI2_delay[17], TIEAPUUDI2[17]);
buf B_TIEAPUUDI218 (TIEAPUUDI2_delay[18], TIEAPUUDI2[18]);
buf B_TIEAPUUDI219 (TIEAPUUDI2_delay[19], TIEAPUUDI2[19]);
buf B_TIEAPUUDI220 (TIEAPUUDI2_delay[20], TIEAPUUDI2[20]);
buf B_TIEAPUUDI221 (TIEAPUUDI2_delay[21], TIEAPUUDI2[21]);
buf B_TIEAPUUDI222 (TIEAPUUDI2_delay[22], TIEAPUUDI2[22]);
buf B_TIEAPUUDI223 (TIEAPUUDI2_delay[23], TIEAPUUDI2[23]);
buf B_TIEAPUUDI30 (TIEAPUUDI3_delay[0], TIEAPUUDI3[0]);
buf B_TIEAPUUDI31 (TIEAPUUDI3_delay[1], TIEAPUUDI3[1]);
buf B_TIEAPUUDI32 (TIEAPUUDI3_delay[2], TIEAPUUDI3[2]);
buf B_TIEAPUUDI33 (TIEAPUUDI3_delay[3], TIEAPUUDI3[3]);
buf B_TIEAPUUDI34 (TIEAPUUDI3_delay[4], TIEAPUUDI3[4]);
buf B_TIEAPUUDI35 (TIEAPUUDI3_delay[5], TIEAPUUDI3[5]);
buf B_TIEAPUUDI36 (TIEAPUUDI3_delay[6], TIEAPUUDI3[6]);
buf B_TIEAPUUDI37 (TIEAPUUDI3_delay[7], TIEAPUUDI3[7]);
buf B_TIEAPUUDI38 (TIEAPUUDI3_delay[8], TIEAPUUDI3[8]);
buf B_TIEAPUUDI39 (TIEAPUUDI3_delay[9], TIEAPUUDI3[9]);
buf B_TIEAPUUDI310 (TIEAPUUDI3_delay[10], TIEAPUUDI3[10]);
buf B_TIEAPUUDI311 (TIEAPUUDI3_delay[11], TIEAPUUDI3[11]);
buf B_TIEAPUUDI312 (TIEAPUUDI3_delay[12], TIEAPUUDI3[12]);
buf B_TIEAPUUDI313 (TIEAPUUDI3_delay[13], TIEAPUUDI3[13]);
buf B_TIEAPUUDI314 (TIEAPUUDI3_delay[14], TIEAPUUDI3[14]);
buf B_TIEAPUUDI315 (TIEAPUUDI3_delay[15], TIEAPUUDI3[15]);
buf B_TIEAPUUDI316 (TIEAPUUDI3_delay[16], TIEAPUUDI3[16]);
buf B_TIEAPUUDI317 (TIEAPUUDI3_delay[17], TIEAPUUDI3[17]);
buf B_TIEAPUUDI318 (TIEAPUUDI3_delay[18], TIEAPUUDI3[18]);
buf B_TIEAPUUDI319 (TIEAPUUDI3_delay[19], TIEAPUUDI3[19]);
buf B_TIEAPUUDI320 (TIEAPUUDI3_delay[20], TIEAPUUDI3[20]);
buf B_TIEAPUUDI321 (TIEAPUUDI3_delay[21], TIEAPUUDI3[21]);
buf B_TIEAPUUDI322 (TIEAPUUDI3_delay[22], TIEAPUUDI3[22]);
buf B_TIEAPUUDI323 (TIEAPUUDI3_delay[23], TIEAPUUDI3[23]);
buf B_TIEAPUUDI40 (TIEAPUUDI4_delay[0], TIEAPUUDI4[0]);
buf B_TIEAPUUDI41 (TIEAPUUDI4_delay[1], TIEAPUUDI4[1]);
buf B_TIEAPUUDI42 (TIEAPUUDI4_delay[2], TIEAPUUDI4[2]);
buf B_TIEAPUUDI43 (TIEAPUUDI4_delay[3], TIEAPUUDI4[3]);
buf B_TIEAPUUDI44 (TIEAPUUDI4_delay[4], TIEAPUUDI4[4]);
buf B_TIEAPUUDI45 (TIEAPUUDI4_delay[5], TIEAPUUDI4[5]);
buf B_TIEAPUUDI46 (TIEAPUUDI4_delay[6], TIEAPUUDI4[6]);
buf B_TIEAPUUDI47 (TIEAPUUDI4_delay[7], TIEAPUUDI4[7]);
buf B_TIEAPUUDI48 (TIEAPUUDI4_delay[8], TIEAPUUDI4[8]);
buf B_TIEAPUUDI49 (TIEAPUUDI4_delay[9], TIEAPUUDI4[9]);
buf B_TIEAPUUDI410 (TIEAPUUDI4_delay[10], TIEAPUUDI4[10]);
buf B_TIEAPUUDI411 (TIEAPUUDI4_delay[11], TIEAPUUDI4[11]);
buf B_TIEAPUUDI412 (TIEAPUUDI4_delay[12], TIEAPUUDI4[12]);
buf B_TIEAPUUDI413 (TIEAPUUDI4_delay[13], TIEAPUUDI4[13]);
buf B_TIEAPUUDI414 (TIEAPUUDI4_delay[14], TIEAPUUDI4[14]);
buf B_TIEAPUUDI415 (TIEAPUUDI4_delay[15], TIEAPUUDI4[15]);
buf B_TIEAPUUDI416 (TIEAPUUDI4_delay[16], TIEAPUUDI4[16]);
buf B_TIEAPUUDI417 (TIEAPUUDI4_delay[17], TIEAPUUDI4[17]);
buf B_TIEAPUUDI418 (TIEAPUUDI4_delay[18], TIEAPUUDI4[18]);
buf B_TIEAPUUDI419 (TIEAPUUDI4_delay[19], TIEAPUUDI4[19]);
buf B_TIEAPUUDI420 (TIEAPUUDI4_delay[20], TIEAPUUDI4[20]);
buf B_TIEAPUUDI421 (TIEAPUUDI4_delay[21], TIEAPUUDI4[21]);
buf B_TIEAPUUDI422 (TIEAPUUDI4_delay[22], TIEAPUUDI4[22]);
buf B_TIEAPUUDI423 (TIEAPUUDI4_delay[23], TIEAPUUDI4[23]);
buf B_TIEAPUUDI50 (TIEAPUUDI5_delay[0], TIEAPUUDI5[0]);
buf B_TIEAPUUDI51 (TIEAPUUDI5_delay[1], TIEAPUUDI5[1]);
buf B_TIEAPUUDI52 (TIEAPUUDI5_delay[2], TIEAPUUDI5[2]);
buf B_TIEAPUUDI53 (TIEAPUUDI5_delay[3], TIEAPUUDI5[3]);
buf B_TIEAPUUDI54 (TIEAPUUDI5_delay[4], TIEAPUUDI5[4]);
buf B_TIEAPUUDI55 (TIEAPUUDI5_delay[5], TIEAPUUDI5[5]);
buf B_TIEAPUUDI56 (TIEAPUUDI5_delay[6], TIEAPUUDI5[6]);
buf B_TIEAPUUDI57 (TIEAPUUDI5_delay[7], TIEAPUUDI5[7]);
buf B_TIEAPUUDI58 (TIEAPUUDI5_delay[8], TIEAPUUDI5[8]);
buf B_TIEAPUUDI59 (TIEAPUUDI5_delay[9], TIEAPUUDI5[9]);
buf B_TIEAPUUDI510 (TIEAPUUDI5_delay[10], TIEAPUUDI5[10]);
buf B_TIEAPUUDI511 (TIEAPUUDI5_delay[11], TIEAPUUDI5[11]);
buf B_TIEAPUUDI512 (TIEAPUUDI5_delay[12], TIEAPUUDI5[12]);
buf B_TIEAPUUDI513 (TIEAPUUDI5_delay[13], TIEAPUUDI5[13]);
buf B_TIEAPUUDI514 (TIEAPUUDI5_delay[14], TIEAPUUDI5[14]);
buf B_TIEAPUUDI515 (TIEAPUUDI5_delay[15], TIEAPUUDI5[15]);
buf B_TIEAPUUDI516 (TIEAPUUDI5_delay[16], TIEAPUUDI5[16]);
buf B_TIEAPUUDI517 (TIEAPUUDI5_delay[17], TIEAPUUDI5[17]);
buf B_TIEAPUUDI518 (TIEAPUUDI5_delay[18], TIEAPUUDI5[18]);
buf B_TIEAPUUDI519 (TIEAPUUDI5_delay[19], TIEAPUUDI5[19]);
buf B_TIEAPUUDI520 (TIEAPUUDI5_delay[20], TIEAPUUDI5[20]);
buf B_TIEAPUUDI521 (TIEAPUUDI5_delay[21], TIEAPUUDI5[21]);
buf B_TIEAPUUDI522 (TIEAPUUDI5_delay[22], TIEAPUUDI5[22]);
buf B_TIEAPUUDI523 (TIEAPUUDI5_delay[23], TIEAPUUDI5[23]);
buf B_TIEAPUUDI60 (TIEAPUUDI6_delay[0], TIEAPUUDI6[0]);
buf B_TIEAPUUDI61 (TIEAPUUDI6_delay[1], TIEAPUUDI6[1]);
buf B_TIEAPUUDI62 (TIEAPUUDI6_delay[2], TIEAPUUDI6[2]);
buf B_TIEAPUUDI63 (TIEAPUUDI6_delay[3], TIEAPUUDI6[3]);
buf B_TIEAPUUDI64 (TIEAPUUDI6_delay[4], TIEAPUUDI6[4]);
buf B_TIEAPUUDI65 (TIEAPUUDI6_delay[5], TIEAPUUDI6[5]);
buf B_TIEAPUUDI66 (TIEAPUUDI6_delay[6], TIEAPUUDI6[6]);
buf B_TIEAPUUDI67 (TIEAPUUDI6_delay[7], TIEAPUUDI6[7]);
buf B_TIEAPUUDI68 (TIEAPUUDI6_delay[8], TIEAPUUDI6[8]);
buf B_TIEAPUUDI69 (TIEAPUUDI6_delay[9], TIEAPUUDI6[9]);
buf B_TIEAPUUDI610 (TIEAPUUDI6_delay[10], TIEAPUUDI6[10]);
buf B_TIEAPUUDI611 (TIEAPUUDI6_delay[11], TIEAPUUDI6[11]);
buf B_TIEAPUUDI612 (TIEAPUUDI6_delay[12], TIEAPUUDI6[12]);
buf B_TIEAPUUDI613 (TIEAPUUDI6_delay[13], TIEAPUUDI6[13]);
buf B_TIEAPUUDI614 (TIEAPUUDI6_delay[14], TIEAPUUDI6[14]);
buf B_TIEAPUUDI615 (TIEAPUUDI6_delay[15], TIEAPUUDI6[15]);
buf B_TIEAPUUDI616 (TIEAPUUDI6_delay[16], TIEAPUUDI6[16]);
buf B_TIEAPUUDI617 (TIEAPUUDI6_delay[17], TIEAPUUDI6[17]);
buf B_TIEAPUUDI618 (TIEAPUUDI6_delay[18], TIEAPUUDI6[18]);
buf B_TIEAPUUDI619 (TIEAPUUDI6_delay[19], TIEAPUUDI6[19]);
buf B_TIEAPUUDI620 (TIEAPUUDI6_delay[20], TIEAPUUDI6[20]);
buf B_TIEAPUUDI621 (TIEAPUUDI6_delay[21], TIEAPUUDI6[21]);
buf B_TIEAPUUDI622 (TIEAPUUDI6_delay[22], TIEAPUUDI6[22]);
buf B_TIEAPUUDI623 (TIEAPUUDI6_delay[23], TIEAPUUDI6[23]);
buf B_TIEAPUUDI70 (TIEAPUUDI7_delay[0], TIEAPUUDI7[0]);
buf B_TIEAPUUDI71 (TIEAPUUDI7_delay[1], TIEAPUUDI7[1]);
buf B_TIEAPUUDI72 (TIEAPUUDI7_delay[2], TIEAPUUDI7[2]);
buf B_TIEAPUUDI73 (TIEAPUUDI7_delay[3], TIEAPUUDI7[3]);
buf B_TIEAPUUDI74 (TIEAPUUDI7_delay[4], TIEAPUUDI7[4]);
buf B_TIEAPUUDI75 (TIEAPUUDI7_delay[5], TIEAPUUDI7[5]);
buf B_TIEAPUUDI76 (TIEAPUUDI7_delay[6], TIEAPUUDI7[6]);
buf B_TIEAPUUDI77 (TIEAPUUDI7_delay[7], TIEAPUUDI7[7]);
buf B_TIEAPUUDI78 (TIEAPUUDI7_delay[8], TIEAPUUDI7[8]);
buf B_TIEAPUUDI79 (TIEAPUUDI7_delay[9], TIEAPUUDI7[9]);
buf B_TIEAPUUDI710 (TIEAPUUDI7_delay[10], TIEAPUUDI7[10]);
buf B_TIEAPUUDI711 (TIEAPUUDI7_delay[11], TIEAPUUDI7[11]);
buf B_TIEAPUUDI712 (TIEAPUUDI7_delay[12], TIEAPUUDI7[12]);
buf B_TIEAPUUDI713 (TIEAPUUDI7_delay[13], TIEAPUUDI7[13]);
buf B_TIEAPUUDI714 (TIEAPUUDI7_delay[14], TIEAPUUDI7[14]);
buf B_TIEAPUUDI715 (TIEAPUUDI7_delay[15], TIEAPUUDI7[15]);
buf B_TIEAPUUDI716 (TIEAPUUDI7_delay[16], TIEAPUUDI7[16]);
buf B_TIEAPUUDI717 (TIEAPUUDI7_delay[17], TIEAPUUDI7[17]);
buf B_TIEAPUUDI718 (TIEAPUUDI7_delay[18], TIEAPUUDI7[18]);
buf B_TIEAPUUDI719 (TIEAPUUDI7_delay[19], TIEAPUUDI7[19]);
buf B_TIEAPUUDI720 (TIEAPUUDI7_delay[20], TIEAPUUDI7[20]);
buf B_TIEAPUUDI721 (TIEAPUUDI7_delay[21], TIEAPUUDI7[21]);
buf B_TIEAPUUDI722 (TIEAPUUDI7_delay[22], TIEAPUUDI7[22]);
buf B_TIEAPUUDI723 (TIEAPUUDI7_delay[23], TIEAPUUDI7[23]);
buf B_TIEAPUUDI80 (TIEAPUUDI8_delay[0], TIEAPUUDI8[0]);
buf B_TIEAPUUDI81 (TIEAPUUDI8_delay[1], TIEAPUUDI8[1]);
buf B_TIEAPUUDI82 (TIEAPUUDI8_delay[2], TIEAPUUDI8[2]);
buf B_TIEAPUUDI83 (TIEAPUUDI8_delay[3], TIEAPUUDI8[3]);
buf B_TIEAPUUDI84 (TIEAPUUDI8_delay[4], TIEAPUUDI8[4]);
buf B_TIEAPUUDI85 (TIEAPUUDI8_delay[5], TIEAPUUDI8[5]);
buf B_TIEAPUUDI86 (TIEAPUUDI8_delay[6], TIEAPUUDI8[6]);
buf B_TIEAPUUDI87 (TIEAPUUDI8_delay[7], TIEAPUUDI8[7]);
buf B_TIEAPUUDI88 (TIEAPUUDI8_delay[8], TIEAPUUDI8[8]);
buf B_TIEAPUUDI89 (TIEAPUUDI8_delay[9], TIEAPUUDI8[9]);
buf B_TIEAPUUDI810 (TIEAPUUDI8_delay[10], TIEAPUUDI8[10]);
buf B_TIEAPUUDI811 (TIEAPUUDI8_delay[11], TIEAPUUDI8[11]);
buf B_TIEAPUUDI812 (TIEAPUUDI8_delay[12], TIEAPUUDI8[12]);
buf B_TIEAPUUDI813 (TIEAPUUDI8_delay[13], TIEAPUUDI8[13]);
buf B_TIEAPUUDI814 (TIEAPUUDI8_delay[14], TIEAPUUDI8[14]);
buf B_TIEAPUUDI815 (TIEAPUUDI8_delay[15], TIEAPUUDI8[15]);
buf B_TIEAPUUDI816 (TIEAPUUDI8_delay[16], TIEAPUUDI8[16]);
buf B_TIEAPUUDI817 (TIEAPUUDI8_delay[17], TIEAPUUDI8[17]);
buf B_TIEAPUUDI818 (TIEAPUUDI8_delay[18], TIEAPUUDI8[18]);
buf B_TIEAPUUDI819 (TIEAPUUDI8_delay[19], TIEAPUUDI8[19]);
buf B_TIEAPUUDI820 (TIEAPUUDI8_delay[20], TIEAPUUDI8[20]);
buf B_TIEAPUUDI821 (TIEAPUUDI8_delay[21], TIEAPUUDI8[21]);
buf B_TIEAPUUDI822 (TIEAPUUDI8_delay[22], TIEAPUUDI8[22]);
buf B_TIEAPUUDI823 (TIEAPUUDI8_delay[23], TIEAPUUDI8[23]);
buf B_TIEC405DETERMINISTICMULT (TIEC405DETERMINISTICMULT_delay, TIEC405DETERMINISTICMULT);
buf B_TIEC405DISOPERANDFWD (TIEC405DISOPERANDFWD_delay, TIEC405DISOPERANDFWD);
buf B_TIEC405MMUEN (TIEC405MMUEN_delay, TIEC405MMUEN);
buf B_TIEDCRADDR0 (TIEDCRADDR_delay[0], TIEDCRADDR[0]);
buf B_TIEDCRADDR1 (TIEDCRADDR_delay[1], TIEDCRADDR[1]);
buf B_TIEDCRADDR2 (TIEDCRADDR_delay[2], TIEDCRADDR[2]);
buf B_TIEDCRADDR3 (TIEDCRADDR_delay[3], TIEDCRADDR[3]);
buf B_TIEDCRADDR4 (TIEDCRADDR_delay[4], TIEDCRADDR[4]);
buf B_TIEDCRADDR5 (TIEDCRADDR_delay[5], TIEDCRADDR[5]);
buf B_TIEPVRBIT10 (TIEPVRBIT10_delay, TIEPVRBIT10);
buf B_TIEPVRBIT11 (TIEPVRBIT11_delay, TIEPVRBIT11);
buf B_TIEPVRBIT28 (TIEPVRBIT28_delay, TIEPVRBIT28);
buf B_TIEPVRBIT29 (TIEPVRBIT29_delay, TIEPVRBIT29);
buf B_TIEPVRBIT30 (TIEPVRBIT30_delay, TIEPVRBIT30);
buf B_TIEPVRBIT31 (TIEPVRBIT31_delay, TIEPVRBIT31);
buf B_TIEPVRBIT8 (TIEPVRBIT8_delay, TIEPVRBIT8);
buf B_TIEPVRBIT9 (TIEPVRBIT9_delay, TIEPVRBIT9);
buf B_TRCC405TRACEDISABLE (TRCC405TRACEDISABLE_delay, TRCC405TRACEDISABLE);
buf B_TRCC405TRIGGEREVENTIN (TRCC405TRIGGEREVENTIN_delay, TRCC405TRIGGEREVENTIN);
buf B_EMACDCRDBUS0 (EMACDCRDBUS_delay[0], EMACDCRDBUS[0]);
buf B_EMACDCRDBUS1 (EMACDCRDBUS_delay[1], EMACDCRDBUS[1]);
buf B_EMACDCRDBUS2 (EMACDCRDBUS_delay[2], EMACDCRDBUS[2]);
buf B_EMACDCRDBUS3 (EMACDCRDBUS_delay[3], EMACDCRDBUS[3]);
buf B_EMACDCRDBUS4 (EMACDCRDBUS_delay[4], EMACDCRDBUS[4]);
buf B_EMACDCRDBUS5 (EMACDCRDBUS_delay[5], EMACDCRDBUS[5]);
buf B_EMACDCRDBUS6 (EMACDCRDBUS_delay[6], EMACDCRDBUS[6]);
buf B_EMACDCRDBUS7 (EMACDCRDBUS_delay[7], EMACDCRDBUS[7]);
buf B_EMACDCRDBUS8 (EMACDCRDBUS_delay[8], EMACDCRDBUS[8]);
buf B_EMACDCRDBUS9 (EMACDCRDBUS_delay[9], EMACDCRDBUS[9]);
buf B_EMACDCRDBUS10 (EMACDCRDBUS_delay[10], EMACDCRDBUS[10]);
buf B_EMACDCRDBUS11 (EMACDCRDBUS_delay[11], EMACDCRDBUS[11]);
buf B_EMACDCRDBUS12 (EMACDCRDBUS_delay[12], EMACDCRDBUS[12]);
buf B_EMACDCRDBUS13 (EMACDCRDBUS_delay[13], EMACDCRDBUS[13]);
buf B_EMACDCRDBUS14 (EMACDCRDBUS_delay[14], EMACDCRDBUS[14]);
buf B_EMACDCRDBUS15 (EMACDCRDBUS_delay[15], EMACDCRDBUS[15]);
buf B_EMACDCRDBUS16 (EMACDCRDBUS_delay[16], EMACDCRDBUS[16]);
buf B_EMACDCRDBUS17 (EMACDCRDBUS_delay[17], EMACDCRDBUS[17]);
buf B_EMACDCRDBUS18 (EMACDCRDBUS_delay[18], EMACDCRDBUS[18]);
buf B_EMACDCRDBUS19 (EMACDCRDBUS_delay[19], EMACDCRDBUS[19]);
buf B_EMACDCRDBUS20 (EMACDCRDBUS_delay[20], EMACDCRDBUS[20]);
buf B_EMACDCRDBUS21 (EMACDCRDBUS_delay[21], EMACDCRDBUS[21]);
buf B_EMACDCRDBUS22 (EMACDCRDBUS_delay[22], EMACDCRDBUS[22]);
buf B_EMACDCRDBUS23 (EMACDCRDBUS_delay[23], EMACDCRDBUS[23]);
buf B_EMACDCRDBUS24 (EMACDCRDBUS_delay[24], EMACDCRDBUS[24]);
buf B_EMACDCRDBUS25 (EMACDCRDBUS_delay[25], EMACDCRDBUS[25]);
buf B_EMACDCRDBUS26 (EMACDCRDBUS_delay[26], EMACDCRDBUS[26]);
buf B_EMACDCRDBUS27 (EMACDCRDBUS_delay[27], EMACDCRDBUS[27]);
buf B_EMACDCRDBUS28 (EMACDCRDBUS_delay[28], EMACDCRDBUS[28]);
buf B_EMACDCRDBUS29 (EMACDCRDBUS_delay[29], EMACDCRDBUS[29]);
buf B_EMACDCRDBUS30 (EMACDCRDBUS_delay[30], EMACDCRDBUS[30]);
buf B_EMACDCRDBUS31 (EMACDCRDBUS_delay[31], EMACDCRDBUS[31]);
buf B_EMACDCRACK (EMACDCRACK_delay, EMACDCRACK);

assign #(in_delay) BRAMDSOCMCLK_delay_1 = BRAMDSOCMCLK_delay;
assign #(in_delay) BRAMISOCMCLK_delay_1 = BRAMISOCMCLK_delay;
assign #(in_delay) CPMC405CLOCK_delay_1 = CPMC405CLOCK_delay;
assign #(in_delay) CPMC405CORECLKINACTIVE_delay_1 = CPMC405CORECLKINACTIVE_delay;
assign #(in_delay) CPMC405CPUCLKEN_delay_1 = CPMC405CPUCLKEN_delay;
assign #(in_delay) CPMC405JTAGCLKEN_delay_1 = CPMC405JTAGCLKEN_delay;
assign #(in_delay) CPMC405SYNCBYPASS_delay_1 = CPMC405SYNCBYPASS_delay;
assign #(in_delay) CPMC405TIMERCLKEN_delay_1 = CPMC405TIMERCLKEN_delay;
assign #(in_delay) CPMC405TIMERTICK_delay_1 = CPMC405TIMERTICK_delay;
assign #(in_delay) CPMDCRCLK_delay_1 = CPMDCRCLK_delay;
assign #(in_delay) CPMFCMCLK_delay_1 = CPMFCMCLK_delay;
assign #(in_delay) DBGC405DEBUGHALT_delay_1 = DBGC405DEBUGHALT_delay;
assign #(in_delay) DBGC405EXTBUSHOLDACK_delay_1 = DBGC405EXTBUSHOLDACK_delay;
assign #(in_delay) DBGC405UNCONDDEBUGEVENT_delay_1 = DBGC405UNCONDDEBUGEVENT_delay;
assign #(in_delay) DSOCMRWCOMPLETE_delay_1 = DSOCMRWCOMPLETE_delay;
assign #(in_delay) EICC405CRITINPUTIRQ_delay_1 = EICC405CRITINPUTIRQ_delay;
assign #(in_delay) EICC405EXTINPUTIRQ_delay_1 = EICC405EXTINPUTIRQ_delay;
assign #(in_delay) EMACDCRACK_delay_1 = EMACDCRACK_delay;
assign #(in_delay) EXTDCRACK_delay_1 = EXTDCRACK_delay;
assign #(in_delay) FCMAPUDCDCREN_delay_1 = FCMAPUDCDCREN_delay;
assign #(in_delay) FCMAPUDCDFORCEALIGN_delay_1 = FCMAPUDCDFORCEALIGN_delay;
assign #(in_delay) FCMAPUDCDFORCEBESTEERING_delay_1 = FCMAPUDCDFORCEBESTEERING_delay;
assign #(in_delay) FCMAPUDCDFPUOP_delay_1 = FCMAPUDCDFPUOP_delay;
assign #(in_delay) FCMAPUDCDGPRWRITE_delay_1 = FCMAPUDCDGPRWRITE_delay;
assign #(in_delay) FCMAPUDCDLDSTBYTE_delay_1 = FCMAPUDCDLDSTBYTE_delay;
assign #(in_delay) FCMAPUDCDLDSTDW_delay_1 = FCMAPUDCDLDSTDW_delay;
assign #(in_delay) FCMAPUDCDLDSTHW_delay_1 = FCMAPUDCDLDSTHW_delay;
assign #(in_delay) FCMAPUDCDLDSTQW_delay_1 = FCMAPUDCDLDSTQW_delay;
assign #(in_delay) FCMAPUDCDLDSTWD_delay_1 = FCMAPUDCDLDSTWD_delay;
assign #(in_delay) FCMAPUDCDLOAD_delay_1 = FCMAPUDCDLOAD_delay;
assign #(in_delay) FCMAPUDCDPRIVOP_delay_1 = FCMAPUDCDPRIVOP_delay;
assign #(in_delay) FCMAPUDCDRAEN_delay_1 = FCMAPUDCDRAEN_delay;
assign #(in_delay) FCMAPUDCDRBEN_delay_1 = FCMAPUDCDRBEN_delay;
assign #(in_delay) FCMAPUDCDSTORE_delay_1 = FCMAPUDCDSTORE_delay;
assign #(in_delay) FCMAPUDCDTRAPBE_delay_1 = FCMAPUDCDTRAPBE_delay;
assign #(in_delay) FCMAPUDCDTRAPLE_delay_1 = FCMAPUDCDTRAPLE_delay;
assign #(in_delay) FCMAPUDCDUPDATE_delay_1 = FCMAPUDCDUPDATE_delay;
assign #(in_delay) FCMAPUDCDXERCAEN_delay_1 = FCMAPUDCDXERCAEN_delay;
assign #(in_delay) FCMAPUDCDXEROVEN_delay_1 = FCMAPUDCDXEROVEN_delay;
assign #(in_delay) FCMAPUDECODEBUSY_delay_1 = FCMAPUDECODEBUSY_delay;
assign #(in_delay) FCMAPUDONE_delay_1 = FCMAPUDONE_delay;
assign #(in_delay) FCMAPUEXCEPTION_delay_1 = FCMAPUEXCEPTION_delay;
assign #(in_delay) FCMAPUEXEBLOCKINGMCO_delay_1 = FCMAPUEXEBLOCKINGMCO_delay;
assign #(in_delay) FCMAPUEXENONBLOCKINGMCO_delay_1 = FCMAPUEXENONBLOCKINGMCO_delay;
assign #(in_delay) FCMAPUINSTRACK_delay_1 = FCMAPUINSTRACK_delay;
assign #(in_delay) FCMAPULOADWAIT_delay_1 = FCMAPULOADWAIT_delay;
assign #(in_delay) FCMAPURESULTVALID_delay_1 = FCMAPURESULTVALID_delay;
assign #(in_delay) FCMAPUSLEEPNOTREADY_delay_1 = FCMAPUSLEEPNOTREADY_delay;
assign #(in_delay) FCMAPUXERCA_delay_1 = FCMAPUXERCA_delay;
assign #(in_delay) FCMAPUXEROV_delay_1 = FCMAPUXEROV_delay;
assign #(in_delay) JTGC405BNDSCANTDO_delay_1 = JTGC405BNDSCANTDO_delay;
assign #(in_delay) JTGC405TCK_delay_1 = JTGC405TCK_delay;
assign #(in_delay) JTGC405TDI_delay_1 = JTGC405TDI_delay;
assign #(in_delay) JTGC405TMS_delay_1 = JTGC405TMS_delay;
assign #(in_delay) JTGC405TRSTNEG_delay_1 = JTGC405TRSTNEG_delay;
assign #(in_delay) MCBCPUCLKEN_delay_1 = MCBCPUCLKEN_delay;
assign #(in_delay) MCBJTAGEN_delay_1 = MCBJTAGEN_delay;
assign #(in_delay) MCBTIMEREN_delay_1 = MCBTIMEREN_delay;
assign #(in_delay) MCPPCRST_delay_1 = MCPPCRST_delay;
assign #(in_delay) PLBC405DCUADDRACK_delay_1 = PLBC405DCUADDRACK_delay;
assign #(in_delay) PLBC405DCUBUSY_delay_1 = PLBC405DCUBUSY_delay;
assign #(in_delay) PLBC405DCUERR_delay_1 = PLBC405DCUERR_delay;
assign #(in_delay) PLBC405DCURDDACK_delay_1 = PLBC405DCURDDACK_delay;
assign #(in_delay) PLBC405DCUSSIZE1_delay_1 = PLBC405DCUSSIZE1_delay;
assign #(in_delay) PLBC405DCUWRDACK_delay_1 = PLBC405DCUWRDACK_delay;
assign #(in_delay) PLBC405ICUADDRACK_delay_1 = PLBC405ICUADDRACK_delay;
assign #(in_delay) PLBC405ICUBUSY_delay_1 = PLBC405ICUBUSY_delay;
assign #(in_delay) PLBC405ICUERR_delay_1 = PLBC405ICUERR_delay;
assign #(in_delay) PLBC405ICURDDACK_delay_1 = PLBC405ICURDDACK_delay;
assign #(in_delay) PLBC405ICUSSIZE1_delay_1 = PLBC405ICUSSIZE1_delay;
assign #(in_delay) PLBCLK_delay_1 = PLBCLK_delay;
assign #(in_delay) RSTC405RESETCHIP_delay_1 = RSTC405RESETCHIP_delay;
assign #(in_delay) RSTC405RESETCORE_delay_1 = RSTC405RESETCORE_delay;
assign #(in_delay) RSTC405RESETSYS_delay_1 = RSTC405RESETSYS_delay;
assign #(in_delay) TIEC405DETERMINISTICMULT_delay_1 = TIEC405DETERMINISTICMULT_delay;
assign #(in_delay) TIEC405DISOPERANDFWD_delay_1 = TIEC405DISOPERANDFWD_delay;
assign #(in_delay) TIEC405MMUEN_delay_1 = TIEC405MMUEN_delay;
assign #(in_delay) TIEPVRBIT10_delay_1 = TIEPVRBIT10_delay;
assign #(in_delay) TIEPVRBIT11_delay_1 = TIEPVRBIT11_delay;
assign #(in_delay) TIEPVRBIT28_delay_1 = TIEPVRBIT28_delay;
assign #(in_delay) TIEPVRBIT29_delay_1 = TIEPVRBIT29_delay;
assign #(in_delay) TIEPVRBIT30_delay_1 = TIEPVRBIT30_delay;
assign #(in_delay) TIEPVRBIT31_delay_1 = TIEPVRBIT31_delay;
assign #(in_delay) TIEPVRBIT8_delay_1 = TIEPVRBIT8_delay;
assign #(in_delay) TIEPVRBIT9_delay_1 = TIEPVRBIT9_delay;
assign #(in_delay) TRCC405TRACEDISABLE_delay_1 = TRCC405TRACEDISABLE_delay;
assign #(in_delay) TRCC405TRIGGEREVENTIN_delay_1 = TRCC405TRIGGEREVENTIN_delay;
assign #(in_delay) TIEAPUCONTROL_delay_1[0:15] = TIEAPUCONTROL_delay[0:15] ;
assign #(in_delay) TIEAPUUDI1_delay_1[0:23] = TIEAPUUDI1_delay[0:23];
assign #(in_delay) TIEAPUUDI2_delay_1[0:23] = TIEAPUUDI2_delay[0:23];
assign #(in_delay) TIEAPUUDI3_delay_1[0:23] = TIEAPUUDI3_delay[0:23];
assign #(in_delay) TIEAPUUDI4_delay_1[0:23] = TIEAPUUDI4_delay[0:23];
assign #(in_delay) TIEAPUUDI5_delay_1[0:23] = TIEAPUUDI5_delay[0:23];
assign #(in_delay) TIEAPUUDI6_delay_1[0:23] = TIEAPUUDI6_delay[0:23];
assign #(in_delay) TIEAPUUDI7_delay_1[0:23] = TIEAPUUDI7_delay[0:23];
assign #(in_delay) TIEAPUUDI8_delay_1[0:23] = TIEAPUUDI8_delay[0:23];
assign #(in_delay) FCMAPUEXECRFIELD_delay_1[0:2] = FCMAPUEXECRFIELD_delay[0:2] ;
assign #(in_delay) BRAMDSOCMRDDBUS_delay_1[0:31] = BRAMDSOCMRDDBUS_delay[0:31] ;
assign #(in_delay) BRAMISOCMDCRRDDBUS_delay_1[0:31] = BRAMISOCMDCRRDDBUS_delay[0:31] ;
assign #(in_delay) EMACDCRDBUS_delay_1[0:31] = EMACDCRDBUS_delay[0:31] ;
assign #(in_delay) EXTDCRDBUSIN_delay_1[0:31] = EXTDCRDBUSIN_delay[0:31] ;
assign #(in_delay) FCMAPURESULT_delay_1[0:31] = FCMAPURESULT_delay[0:31] ;
assign #(in_delay) FCMAPUCR_delay_1[0:3] = FCMAPUCR_delay[0:3] ;
assign #(in_delay) TIEDCRADDR_delay_1[0:5] = TIEDCRADDR_delay[0:5] ;
assign #(in_delay) BRAMISOCMRDDBUS_delay_1[0:63] = BRAMISOCMRDDBUS_delay[0:63] ;
assign #(in_delay) PLBC405DCURDDBUS_delay_1[0:63] = PLBC405DCURDDBUS_delay[0:63] ;
assign #(in_delay) PLBC405ICURDDBUS_delay_1[0:63] = PLBC405ICURDDBUS_delay[0:63] ;
assign #(in_delay) DSARCVALUE_delay_1[0:7] = DSARCVALUE_delay[0:7] ;
assign #(in_delay) DSCNTLVALUE_delay_1[0:7] = DSCNTLVALUE_delay[0:7] ;
assign #(in_delay) ISARCVALUE_delay_1[0:7] = ISARCVALUE_delay[0:7] ;
assign #(in_delay) ISCNTLVALUE_delay_1[0:7] = ISCNTLVALUE_delay[0:7] ;
assign #(in_delay) PLBC405DCURDWDADDR_delay_1[1:3] = PLBC405DCURDWDADDR_delay[1:3] ;
assign #(in_delay) PLBC405ICURDWDADDR_delay_1[1:3] = PLBC405ICURDWDADDR_delay[1:3] ;

wire	FPGA_CCLK;
wire	FPGA_BUS_RESET;
wire	FPGA_GSR;
wire	FPGA_GWE;
wire	FPGA_GHIGHB;
wire	GSR_OR;

reg	FPGA_POR;
reg	FPGA_CCLK_REG;


`ifdef STARTUP_BLK
assign	FPGA_CCLK	= TESTBENCH.FPGA_cclk;
assign	FPGA_BUS_RESET	= TESTBENCH.FPGA_bus_reset;
assign	GSR_OR	= TESTBENCH.FPGA_gsr;
assign	FPGA_GWE	= TESTBENCH.FPGA_gwe;
assign	FPGA_GHIGHB	= TESTBENCH.FPGA_ghigh_b;
`else

FPGA_startup_VIRTEX4 start_blk(
	.bus_reset (FPGA_BUS_RESET),
	.ghigh_b (FPGA_GHIGHB),
	.gsr (FPGA_GSR),
	.done (),
	.gwe (FPGA_GWE),
	.gts_b (),
	.shutdown (1'b0),
	.cclk (FPGA_CCLK),
	.por (FPGA_POR)
);

or IGSR_OR (GSR_OR, FPGA_GSR, GSR);

`define Loc_FPGA_POR_TIME_VIRTEX4 1000 // FPGA Power-On Reset time

// Generate FPGA CCLK
always
	#5000 FPGA_CCLK_REG = ~FPGA_CCLK_REG;

assign	FPGA_CCLK = FPGA_CCLK_REG;

initial begin
	FPGA_CCLK_REG = 0;
	FPGA_POR = 1'b1;
	#(`Loc_FPGA_POR_TIME_VIRTEX4) FPGA_POR = 1'b0;
end

`endif // STARTUP_BLK

wire FPGA_BUS_RESET_delay;
wire GSR_delay;
wire FPGA_GWE_delay;
wire FPGA_GHIGHB_delay;

assign #(in_delay) FPGA_BUS_RESET_delay = FPGA_BUS_RESET;
assign #(in_delay) GSR_delay = GSR_OR;
assign #(in_delay) FPGA_GWE_delay = FPGA_GWE;
assign #(in_delay) FPGA_GHIGHB_delay = FPGA_GHIGHB;

`ifdef PROCBLK_NOSWIFT
usr_pblk_adv_cap Iusr_proc_block_cap(
`else
PPC405_ADV_SWIFT IPPC405_SWIFT(
`endif //PROCBLK_NOSWIFT

	.BUS_RESET (FPGA_BUS_RESET_delay),
	.GSR (GSR_delay),
	.GWE (FPGA_GWE_delay),
	.GHIGHB (FPGA_GHIGHB_delay),
	.CFG_MCLK (FPGA_CCLK),

        .APUFCMDECODED(APUFCMDECODED_delay),
        .APUFCMDECUDIVALID(APUFCMDECUDIVALID_delay),
        .APUFCMENDIAN(APUFCMENDIAN_delay),
        .APUFCMFLUSH(APUFCMFLUSH_delay),
        .APUFCMINSTRVALID(APUFCMINSTRVALID_delay),
        .APUFCMLOADDVALID(APUFCMLOADDVALID_delay),
        .APUFCMOPERANDVALID(APUFCMOPERANDVALID_delay),
        .APUFCMWRITEBACKOK(APUFCMWRITEBACKOK_delay),
        .APUFCMXERCA(APUFCMXERCA_delay),
        .C405CPMCORESLEEPREQ(C405CPMCORESLEEPREQ_delay),
        .C405CPMMSRCE(C405CPMMSRCE_delay),
        .C405CPMMSREE(C405CPMMSREE_delay),
        .C405CPMTIMERIRQ(C405CPMTIMERIRQ_delay),
        .C405CPMTIMERRESETREQ(C405CPMTIMERRESETREQ_delay),
        .C405DBGLOADDATAONAPUDBUS(C405DBGLOADDATAONAPUDBUS_delay),
        .C405DBGMSRWE(C405DBGMSRWE_delay),
        .C405DBGSTOPACK(C405DBGSTOPACK_delay),
        .C405DBGWBCOMPLETE(C405DBGWBCOMPLETE_delay),
        .C405DBGWBFULL(C405DBGWBFULL_delay),
        .C405JTGCAPTUREDR(C405JTGCAPTUREDR_delay),
        .C405JTGEXTEST(C405JTGEXTEST_delay),
        .C405JTGPGMOUT(C405JTGPGMOUT_delay),
        .C405JTGSHIFTDR(C405JTGSHIFTDR_delay),
        .C405JTGTDO(C405JTGTDO_delay),
        .C405JTGTDOEN(C405JTGTDOEN_delay),
        .C405JTGUPDATEDR(C405JTGUPDATEDR_delay),
        .C405PLBDCUABORT(C405PLBDCUABORT_delay),
        .C405PLBDCUCACHEABLE(C405PLBDCUCACHEABLE_delay),
        .C405PLBDCUGUARDED(C405PLBDCUGUARDED_delay),
        .C405PLBDCUREQUEST(C405PLBDCUREQUEST_delay),
        .C405PLBDCURNW(C405PLBDCURNW_delay),
        .C405PLBDCUSIZE2(C405PLBDCUSIZE2_delay),
        .C405PLBDCUU0ATTR(C405PLBDCUU0ATTR_delay),
        .C405PLBDCUWRITETHRU(C405PLBDCUWRITETHRU_delay),
        .C405PLBICUABORT(C405PLBICUABORT_delay),
        .C405PLBICUCACHEABLE(C405PLBICUCACHEABLE_delay),
        .C405PLBICUREQUEST(C405PLBICUREQUEST_delay),
        .C405PLBICUU0ATTR(C405PLBICUU0ATTR_delay),
        .C405RSTCHIPRESETREQ(C405RSTCHIPRESETREQ_delay),
        .C405RSTCORERESETREQ(C405RSTCORERESETREQ_delay),
        .C405RSTSYSRESETREQ(C405RSTSYSRESETREQ_delay),
        .C405TRCCYCLE(C405TRCCYCLE_delay),
        .C405TRCTRIGGEREVENTOUT(C405TRCTRIGGEREVENTOUT_delay),
        .C405XXXMACHINECHECK(C405XXXMACHINECHECK_delay),
        .DCREMACCLK(DCREMACCLK_delay),
        .DCREMACENABLER(DCREMACENABLER_delay),
        .DCREMACREAD(DCREMACREAD_delay),
        .DCREMACWRITE(DCREMACWRITE_delay),
        .DSOCMBRAMEN(DSOCMBRAMEN_delay),
        .DSOCMBUSY(DSOCMBUSY_delay),
        .DSOCMRDADDRVALID(DSOCMRDADDRVALID_delay),
        .DSOCMWRADDRVALID(DSOCMWRADDRVALID_delay),
        .EXTDCRREAD(EXTDCRREAD_delay),
        .EXTDCRWRITE(EXTDCRWRITE_delay),
        .ISOCMBRAMEN(ISOCMBRAMEN_delay),
        .ISOCMBRAMEVENWRITEEN(ISOCMBRAMEVENWRITEEN_delay),
        .ISOCMBRAMODDWRITEEN(ISOCMBRAMODDWRITEEN_delay),
        .ISOCMDCRBRAMEVENEN(ISOCMDCRBRAMEVENEN_delay),
        .ISOCMDCRBRAMODDEN(ISOCMDCRBRAMODDEN_delay),
        .ISOCMDCRBRAMRDSELECT(ISOCMDCRBRAMRDSELECT_delay),
        .C405TRCTRIGGEREVENTTYPE(C405TRCTRIGGEREVENTTYPE_delay),
        .C405PLBDCUPRIORITY(C405PLBDCUPRIORITY_delay),
        .C405PLBICUPRIORITY(C405PLBICUPRIORITY_delay),
        .C405TRCEVENEXECUTIONSTATUS(C405TRCEVENEXECUTIONSTATUS_delay),
        .C405TRCODDEXECUTIONSTATUS(C405TRCODDEXECUTIONSTATUS_delay),
        .C405DBGWBIAR(C405DBGWBIAR_delay),
        .C405PLBICUABUS(C405PLBICUABUS_delay),
        .APUFCMDECUDI(APUFCMDECUDI_delay),
        .APUFCMINSTRUCTION(APUFCMINSTRUCTION_delay),
        .APUFCMLOADDATA(APUFCMLOADDATA_delay),
        .APUFCMRADATA(APUFCMRADATA_delay),
        .APUFCMRBDATA(APUFCMRBDATA_delay),
        .C405PLBDCUABUS(C405PLBDCUABUS_delay),
        .DCREMACDBUS(DCREMACDBUS_delay),
        .DSOCMBRAMWRDBUS(DSOCMBRAMWRDBUS_delay),
        .EXTDCRDBUSOUT(EXTDCRDBUSOUT_delay),
        .ISOCMBRAMWRDBUS(ISOCMBRAMWRDBUS_delay),
        .APUFCMLOADBYTEEN(APUFCMLOADBYTEEN_delay),
        .C405TRCTRACESTATUS(C405TRCTRACESTATUS_delay),
        .DSOCMBRAMBYTEWRITE(DSOCMBRAMBYTEWRITE_delay),
        .C405PLBDCUWRDBUS(C405PLBDCUWRDBUS_delay),
        .C405PLBDCUBE(C405PLBDCUBE_delay),
        .EXTDCRABUS(EXTDCRABUS_delay),
        .C405PLBICUSIZE(C405PLBICUSIZE_delay),
        .ISOCMBRAMRDABUS(ISOCMBRAMRDABUS_delay),
        .ISOCMBRAMWRABUS(ISOCMBRAMWRABUS_delay),
        .DSOCMBRAMABUS(DSOCMBRAMABUS_delay),
        .DCREMACABUS(DCREMACABUS_delay),

        .BRAMDSOCMCLK(BRAMDSOCMCLK),
        .BRAMISOCMCLK(BRAMISOCMCLK),
        .CPMC405CLOCK(CPMC405CLOCK),
        .CPMC405CORECLKINACTIVE(CPMC405CORECLKINACTIVE_delay_1),
        .CPMC405CPUCLKEN(CPMC405CPUCLKEN_delay_1),
        .CPMC405JTAGCLKEN(CPMC405JTAGCLKEN_delay_1),
        .CPMC405SYNCBYPASS(CPMC405SYNCBYPASS_delay_1),
        .CPMC405TIMERCLKEN(CPMC405TIMERCLKEN_delay_1),
        .CPMC405TIMERTICK(CPMC405TIMERTICK_delay_1),
        .CPMDCRCLK(CPMDCRCLK),
        .CPMFCMCLK(CPMFCMCLK),
        .DBGC405DEBUGHALT(DBGC405DEBUGHALT_delay_1),
        .DBGC405EXTBUSHOLDACK(DBGC405EXTBUSHOLDACK_delay_1),
        .DBGC405UNCONDDEBUGEVENT(DBGC405UNCONDDEBUGEVENT_delay_1),
        .DSOCMRWCOMPLETE(DSOCMRWCOMPLETE_delay_1),
        .EICC405CRITINPUTIRQ(EICC405CRITINPUTIRQ_delay_1),
        .EICC405EXTINPUTIRQ(EICC405EXTINPUTIRQ_delay_1),
        .EMACDCRACK(EMACDCRACK_delay_1),
        .EXTDCRACK(EXTDCRACK_delay_1),
        .FCMAPUDCDCREN(FCMAPUDCDCREN_delay_1),
        .FCMAPUDCDFORCEALIGN(FCMAPUDCDFORCEALIGN_delay_1),
        .FCMAPUDCDFORCEBESTEERING(FCMAPUDCDFORCEBESTEERING_delay_1),
        .FCMAPUDCDFPUOP(FCMAPUDCDFPUOP_delay_1),
        .FCMAPUDCDGPRWRITE(FCMAPUDCDGPRWRITE_delay_1),
        .FCMAPUDCDLDSTBYTE(FCMAPUDCDLDSTBYTE_delay_1),
        .FCMAPUDCDLDSTDW(FCMAPUDCDLDSTDW_delay_1),
        .FCMAPUDCDLDSTHW(FCMAPUDCDLDSTHW_delay_1),
        .FCMAPUDCDLDSTQW(FCMAPUDCDLDSTQW_delay_1),
        .FCMAPUDCDLDSTWD(FCMAPUDCDLDSTWD_delay_1),
        .FCMAPUDCDLOAD(FCMAPUDCDLOAD_delay_1),
        .FCMAPUDCDPRIVOP(FCMAPUDCDPRIVOP_delay_1),
        .FCMAPUDCDRAEN(FCMAPUDCDRAEN_delay_1),
        .FCMAPUDCDRBEN(FCMAPUDCDRBEN_delay_1),
        .FCMAPUDCDSTORE(FCMAPUDCDSTORE_delay_1),
        .FCMAPUDCDTRAPBE(FCMAPUDCDTRAPBE_delay_1),
        .FCMAPUDCDTRAPLE(FCMAPUDCDTRAPLE_delay_1),
        .FCMAPUDCDUPDATE(FCMAPUDCDUPDATE_delay_1),
        .FCMAPUDCDXERCAEN(FCMAPUDCDXERCAEN_delay_1),
        .FCMAPUDCDXEROVEN(FCMAPUDCDXEROVEN_delay_1),
        .FCMAPUDECODEBUSY(FCMAPUDECODEBUSY_delay_1),
        .FCMAPUDONE(FCMAPUDONE_delay_1),
        .FCMAPUEXCEPTION(FCMAPUEXCEPTION_delay_1),
        .FCMAPUEXEBLOCKINGMCO(FCMAPUEXEBLOCKINGMCO_delay_1),
        .FCMAPUEXENONBLOCKINGMCO(FCMAPUEXENONBLOCKINGMCO_delay_1),
        .FCMAPUINSTRACK(FCMAPUINSTRACK_delay_1),
        .FCMAPULOADWAIT(FCMAPULOADWAIT_delay_1),
        .FCMAPURESULTVALID(FCMAPURESULTVALID_delay_1),
        .FCMAPUSLEEPNOTREADY(FCMAPUSLEEPNOTREADY_delay_1),
        .FCMAPUXERCA(FCMAPUXERCA_delay_1),
        .FCMAPUXEROV(FCMAPUXEROV_delay_1),
        .JTGC405BNDSCANTDO(JTGC405BNDSCANTDO_delay_1),
        .JTGC405TCK(JTGC405TCK),
        .JTGC405TDI(JTGC405TDI_delay_1),
        .JTGC405TMS(JTGC405TMS_delay_1),
        .JTGC405TRSTNEG(JTGC405TRSTNEG_delay_1),
        .MCBCPUCLKEN(MCBCPUCLKEN_delay_1),
        .MCBJTAGEN(MCBJTAGEN_delay_1),
        .MCBTIMEREN(MCBTIMEREN_delay_1),
        .MCPPCRST(MCPPCRST_delay_1),
        .PLBC405DCUADDRACK(PLBC405DCUADDRACK_delay_1),
        .PLBC405DCUBUSY(PLBC405DCUBUSY_delay_1),
        .PLBC405DCUERR(PLBC405DCUERR_delay_1),
        .PLBC405DCURDDACK(PLBC405DCURDDACK_delay_1),
        .PLBC405DCUSSIZE1(PLBC405DCUSSIZE1_delay_1),
        .PLBC405DCUWRDACK(PLBC405DCUWRDACK_delay_1),
        .PLBC405ICUADDRACK(PLBC405ICUADDRACK_delay_1),
        .PLBC405ICUBUSY(PLBC405ICUBUSY_delay_1),
        .PLBC405ICUERR(PLBC405ICUERR_delay_1),
        .PLBC405ICURDDACK(PLBC405ICURDDACK_delay_1),
        .PLBC405ICUSSIZE1(PLBC405ICUSSIZE1_delay_1),
        .PLBCLK(PLBCLK),
        .RSTC405RESETCHIP(RSTC405RESETCHIP_delay_1),
        .RSTC405RESETCORE(RSTC405RESETCORE_delay_1),
        .RSTC405RESETSYS(RSTC405RESETSYS_delay_1),
        .TIEC405DETERMINISTICMULT(TIEC405DETERMINISTICMULT_delay_1),
        .TIEC405DISOPERANDFWD(TIEC405DISOPERANDFWD_delay_1),
        .TIEC405MMUEN(TIEC405MMUEN_delay_1),
        .TIEPVRBIT10(TIEPVRBIT10),
        .TIEPVRBIT11(TIEPVRBIT11),
        .TIEPVRBIT28(TIEPVRBIT28),
        .TIEPVRBIT29(TIEPVRBIT29),
        .TIEPVRBIT30(TIEPVRBIT30),
        .TIEPVRBIT31(TIEPVRBIT31),
        .TIEPVRBIT8(TIEPVRBIT8),
        .TIEPVRBIT9(TIEPVRBIT9),
        .TRCC405TRACEDISABLE(TRCC405TRACEDISABLE_delay_1),
        .TRCC405TRIGGEREVENTIN(TRCC405TRIGGEREVENTIN_delay_1),
        .TIEAPUCONTROL(TIEAPUCONTROL_delay_1),
        .TIEAPUUDI1(TIEAPUUDI1_delay_1),
        .TIEAPUUDI2(TIEAPUUDI2_delay_1),
        .TIEAPUUDI3(TIEAPUUDI3_delay_1),
        .TIEAPUUDI4(TIEAPUUDI4_delay_1),
        .TIEAPUUDI5(TIEAPUUDI5_delay_1),
        .TIEAPUUDI6(TIEAPUUDI6_delay_1),
        .TIEAPUUDI7(TIEAPUUDI7_delay_1),
        .TIEAPUUDI8(TIEAPUUDI8_delay_1),
        .FCMAPUEXECRFIELD(FCMAPUEXECRFIELD_delay_1),
        .BRAMDSOCMRDDBUS(BRAMDSOCMRDDBUS_delay_1),
        .BRAMISOCMDCRRDDBUS(BRAMISOCMDCRRDDBUS_delay_1),
        .EMACDCRDBUS(EMACDCRDBUS_delay_1),
        .EXTDCRDBUSIN(EXTDCRDBUSIN_delay_1),
        .FCMAPURESULT(FCMAPURESULT_delay_1),
        .FCMAPUCR(FCMAPUCR_delay_1),
        .TIEDCRADDR(TIEDCRADDR_delay_1),
        .BRAMISOCMRDDBUS(BRAMISOCMRDDBUS_delay_1),
        .PLBC405DCURDDBUS(PLBC405DCURDDBUS_delay_1),
        .PLBC405ICURDDBUS(PLBC405ICURDDBUS_delay_1),
        .DSARCVALUE(DSARCVALUE_delay_1),
        .DSCNTLVALUE(DSCNTLVALUE_delay_1),
        .ISARCVALUE(ISARCVALUE_delay_1),
        .ISCNTLVALUE(ISCNTLVALUE_delay_1),
        .PLBC405DCURDWDADDR(PLBC405DCURDWDADDR_delay_1),
        .PLBC405ICURDWDADDR(PLBC405ICURDWDADDR_delay_1)
);

specify
	(BRAMDSOCMCLK => DSOCMBRAMABUS[10]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[11]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[12]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[13]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[14]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[15]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[16]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[17]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[18]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[19]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[20]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[21]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[22]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[23]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[24]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[25]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[26]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[27]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[28]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[29]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[8]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMABUS[9]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMBYTEWRITE[0]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMBYTEWRITE[1]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMBYTEWRITE[2]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMBYTEWRITE[3]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMEN) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[0]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[10]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[11]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[12]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[13]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[14]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[15]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[16]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[17]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[18]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[19]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[1]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[20]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[21]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[22]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[23]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[24]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[25]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[26]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[27]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[28]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[29]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[2]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[30]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[31]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[3]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[4]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[5]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[6]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[7]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[8]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBRAMWRDBUS[9]) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMBUSY) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMRDADDRVALID) = (100:100:100, 100:100:100);
	(BRAMDSOCMCLK => DSOCMWRADDRVALID) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMEN) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMEVENWRITEEN) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMODDWRITEEN) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[10]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[11]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[12]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[13]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[14]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[15]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[16]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[17]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[18]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[19]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[20]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[21]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[22]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[23]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[24]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[25]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[26]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[27]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[28]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[8]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMRDABUS[9]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[10]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[11]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[12]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[13]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[14]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[15]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[16]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[17]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[18]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[19]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[20]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[21]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[22]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[23]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[24]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[25]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[26]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[27]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[28]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[8]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRABUS[9]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[0]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[10]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[11]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[12]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[13]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[14]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[15]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[16]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[17]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[18]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[19]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[1]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[20]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[21]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[22]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[23]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[24]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[25]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[26]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[27]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[28]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[29]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[2]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[30]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[31]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[3]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[4]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[5]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[6]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[7]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[8]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMBRAMWRDBUS[9]) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMDCRBRAMEVENEN) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMDCRBRAMODDEN) = (100:100:100, 100:100:100);
	(BRAMISOCMCLK => ISOCMDCRBRAMRDSELECT) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405CPMCORESLEEPREQ) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405CPMMSRCE) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405CPMMSREE) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405CPMTIMERIRQ) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405CPMTIMERRESETREQ) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGLOADDATAONAPUDBUS) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGMSRWE) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGSTOPACK) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBCOMPLETE) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBFULL) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[0]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[10]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[11]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[12]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[13]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[14]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[15]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[16]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[17]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[18]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[19]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[1]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[20]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[21]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[22]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[23]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[24]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[25]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[26]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[27]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[28]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[29]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[2]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[3]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[4]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[5]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[6]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[7]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[8]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405DBGWBIAR[9]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405RSTCHIPRESETREQ) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405RSTCORERESETREQ) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405RSTSYSRESETREQ) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCCYCLE) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCEVENEXECUTIONSTATUS[0]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCEVENEXECUTIONSTATUS[1]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCODDEXECUTIONSTATUS[0]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCODDEXECUTIONSTATUS[1]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRACESTATUS[0]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRACESTATUS[1]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRACESTATUS[2]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRACESTATUS[3]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRIGGEREVENTOUT) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRIGGEREVENTTYPE[0]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRIGGEREVENTTYPE[10]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRIGGEREVENTTYPE[1]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRIGGEREVENTTYPE[2]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRIGGEREVENTTYPE[3]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRIGGEREVENTTYPE[4]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRIGGEREVENTTYPE[5]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRIGGEREVENTTYPE[6]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRIGGEREVENTTYPE[7]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRIGGEREVENTTYPE[8]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405TRCTRIGGEREVENTTYPE[9]) = (100:100:100, 100:100:100);
	(CPMC405CLOCK => C405XXXMACHINECHECK) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRABUS[0]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRABUS[1]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRABUS[2]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRABUS[3]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRABUS[4]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRABUS[5]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRABUS[6]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRABUS[7]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRABUS[8]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRABUS[9]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[0]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[10]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[11]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[12]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[13]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[14]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[15]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[16]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[17]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[18]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[19]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[1]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[20]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[21]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[22]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[23]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[24]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[25]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[26]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[27]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[28]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[29]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[2]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[30]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[31]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[3]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[4]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[5]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[6]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[7]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[8]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRDBUSOUT[9]) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRREAD) = (100:100:100, 100:100:100);
	(CPMDCRCLK => EXTDCRWRITE) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMDECODED) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMDECUDIVALID) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMDECUDI[0]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMDECUDI[1]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMDECUDI[2]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMENDIAN) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMFLUSH) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[0]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[10]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[11]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[12]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[13]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[14]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[15]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[16]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[17]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[18]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[19]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[1]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[20]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[21]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[22]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[23]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[24]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[25]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[26]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[27]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[28]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[29]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[2]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[30]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[31]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[3]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[4]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[5]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[6]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[7]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[8]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRUCTION[9]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMINSTRVALID) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADBYTEEN[0]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADBYTEEN[1]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADBYTEEN[2]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADBYTEEN[3]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[0]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[10]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[11]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[12]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[13]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[14]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[15]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[16]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[17]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[18]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[19]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[1]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[20]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[21]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[22]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[23]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[24]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[25]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[26]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[27]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[28]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[29]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[2]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[30]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[31]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[3]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[4]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[5]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[6]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[7]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[8]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDATA[9]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMLOADDVALID) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMOPERANDVALID) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[0]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[10]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[11]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[12]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[13]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[14]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[15]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[16]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[17]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[18]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[19]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[1]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[20]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[21]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[22]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[23]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[24]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[25]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[26]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[27]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[28]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[29]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[2]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[30]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[31]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[3]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[4]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[5]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[6]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[7]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[8]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRADATA[9]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[0]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[10]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[11]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[12]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[13]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[14]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[15]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[16]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[17]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[18]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[19]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[1]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[20]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[21]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[22]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[23]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[24]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[25]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[26]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[27]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[28]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[29]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[2]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[30]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[31]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[3]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[4]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[5]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[6]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[7]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[8]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMRBDATA[9]) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMWRITEBACKOK) = (100:100:100, 100:100:100);
	(CPMFCMCLK => APUFCMXERCA) = (100:100:100, 100:100:100);
//	(GSR => APUFCMDECODED) = (0:0:0, 0:0:0);
//	(GSR => APUFCMDECUDIVALID) = (0:0:0, 0:0:0);
//	(GSR => APUFCMENDIAN) = (0:0:0, 0:0:0);
//	(GSR => APUFCMFLUSH) = (0:0:0, 0:0:0);
//	(GSR => APUFCMINSTRVALID) = (0:0:0, 0:0:0);
//	(GSR => APUFCMLOADDVALID) = (0:0:0, 0:0:0);
//	(GSR => APUFCMOPERANDVALID) = (0:0:0, 0:0:0);
//	(GSR => APUFCMWRITEBACKOK) = (0:0:0, 0:0:0);
//	(GSR => APUFCMXERCA) = (0:0:0, 0:0:0);
//	(GSR => C405CPMCORESLEEPREQ) = (0:0:0, 0:0:0);
//	(GSR => C405CPMMSRCE) = (0:0:0, 0:0:0);
//	(GSR => C405CPMMSREE) = (0:0:0, 0:0:0);
//	(GSR => C405CPMTIMERIRQ) = (0:0:0, 0:0:0);
//	(GSR => C405CPMTIMERRESETREQ) = (0:0:0, 0:0:0);
//	(GSR => C405DBGLOADDATAONAPUDBUS) = (0:0:0, 0:0:0);
//	(GSR => C405DBGMSRWE) = (0:0:0, 0:0:0);
//	(GSR => C405DBGSTOPACK) = (0:0:0, 0:0:0);
//	(GSR => C405DBGWBCOMPLETE) = (0:0:0, 0:0:0);
//	(GSR => C405DBGWBFULL) = (0:0:0, 0:0:0);
//	(GSR => C405JTGCAPTUREDR) = (0:0:0, 0:0:0);
//	(GSR => C405JTGEXTEST) = (0:0:0, 0:0:0);
//	(GSR => C405JTGPGMOUT) = (0:0:0, 0:0:0);
//	(GSR => C405JTGSHIFTDR) = (0:0:0, 0:0:0);
//	(GSR => C405JTGTDO) = (0:0:0, 0:0:0);
//	(GSR => C405JTGTDOEN) = (0:0:0, 0:0:0);
//	(GSR => C405JTGUPDATEDR) = (0:0:0, 0:0:0);
//	(GSR => C405PLBDCUABORT) = (0:0:0, 0:0:0);
//	(GSR => C405PLBDCUCACHEABLE) = (0:0:0, 0:0:0);
//	(GSR => C405PLBDCUGUARDED) = (0:0:0, 0:0:0);
//	(GSR => C405PLBDCUREQUEST) = (0:0:0, 0:0:0);
//	(GSR => C405PLBDCURNW) = (0:0:0, 0:0:0);
//	(GSR => C405PLBDCUSIZE2) = (0:0:0, 0:0:0);
//	(GSR => C405PLBDCUU0ATTR) = (0:0:0, 0:0:0);
//	(GSR => C405PLBDCUWRITETHRU) = (0:0:0, 0:0:0);
//	(GSR => C405PLBICUABORT) = (0:0:0, 0:0:0);
//	(GSR => C405PLBICUCACHEABLE) = (0:0:0, 0:0:0);
//	(GSR => C405PLBICUREQUEST) = (0:0:0, 0:0:0);
//	(GSR => C405PLBICUU0ATTR) = (0:0:0, 0:0:0);
//	(GSR => C405RSTCHIPRESETREQ) = (0:0:0, 0:0:0);
//	(GSR => C405RSTCORERESETREQ) = (0:0:0, 0:0:0);
//	(GSR => C405RSTSYSRESETREQ) = (0:0:0, 0:0:0);
//	(GSR => C405TRCCYCLE) = (0:0:0, 0:0:0);
//	(GSR => C405TRCTRIGGEREVENTOUT) = (0:0:0, 0:0:0);
//	(GSR => C405XXXMACHINECHECK) = (0:0:0, 0:0:0);
//	(GSR => DCREMACCLK) = (0:0:0, 0:0:0);
//	(GSR => DCREMACENABLER) = (0:0:0, 0:0:0);
//	(GSR => DCREMACREAD) = (0:0:0, 0:0:0);
//	(GSR => DCREMACWRITE) = (0:0:0, 0:0:0);
//	(GSR => DSOCMBRAMEN) = (0:0:0, 0:0:0);
//	(GSR => DSOCMBUSY) = (0:0:0, 0:0:0);
//	(GSR => DSOCMRDADDRVALID) = (0:0:0, 0:0:0);
//	(GSR => DSOCMWRADDRVALID) = (0:0:0, 0:0:0);
//	(GSR => EXTDCRREAD) = (0:0:0, 0:0:0);
//	(GSR => EXTDCRWRITE) = (0:0:0, 0:0:0);
//	(GSR => ISOCMBRAMEN) = (0:0:0, 0:0:0);
//	(GSR => ISOCMBRAMEVENWRITEEN) = (0:0:0, 0:0:0);
//	(GSR => ISOCMBRAMODDWRITEEN) = (0:0:0, 0:0:0);
//	(GSR => ISOCMDCRBRAMEVENEN) = (0:0:0, 0:0:0);
//	(GSR => ISOCMDCRBRAMODDEN) = (0:0:0, 0:0:0);
//	(GSR => ISOCMDCRBRAMRDSELECT) = (0:0:0, 0:0:0);
	(JTGC405TCK => C405JTGCAPTUREDR) = (100:100:100, 100:100:100);
	(JTGC405TCK => C405JTGEXTEST) = (100:100:100, 100:100:100);
	(JTGC405TCK => C405JTGPGMOUT) = (100:100:100, 100:100:100);
	(JTGC405TCK => C405JTGSHIFTDR) = (100:100:100, 100:100:100);
	(JTGC405TCK => C405JTGTDO) = (100:100:100, 100:100:100);
	(JTGC405TCK => C405JTGTDOEN) = (100:100:100, 100:100:100);
	(JTGC405TCK => C405JTGUPDATEDR) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABORT) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[0]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[10]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[11]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[12]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[13]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[14]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[15]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[16]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[17]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[18]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[19]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[1]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[20]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[21]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[22]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[23]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[24]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[25]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[26]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[27]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[28]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[29]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[2]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[30]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[31]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[3]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[4]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[5]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[6]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[7]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[8]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUABUS[9]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUBE[0]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUBE[1]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUBE[2]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUBE[3]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUBE[4]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUBE[5]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUBE[6]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUBE[7]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUCACHEABLE) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUGUARDED) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUPRIORITY[0]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUPRIORITY[1]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUREQUEST) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCURNW) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUSIZE2) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUU0ATTR) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[0]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[10]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[11]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[12]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[13]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[14]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[15]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[16]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[17]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[18]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[19]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[1]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[20]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[21]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[22]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[23]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[24]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[25]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[26]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[27]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[28]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[29]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[2]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[30]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[31]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[32]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[33]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[34]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[35]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[36]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[37]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[38]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[39]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[3]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[40]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[41]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[42]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[43]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[44]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[45]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[46]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[47]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[48]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[49]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[4]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[50]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[51]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[52]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[53]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[54]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[55]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[56]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[57]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[58]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[59]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[5]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[60]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[61]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[62]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[63]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[6]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[7]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[8]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRDBUS[9]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBDCUWRITETHRU) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABORT) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[0]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[10]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[11]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[12]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[13]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[14]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[15]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[16]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[17]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[18]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[19]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[1]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[20]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[21]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[22]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[23]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[24]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[25]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[26]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[27]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[28]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[29]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[2]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[3]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[4]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[5]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[6]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[7]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[8]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUABUS[9]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUCACHEABLE) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUPRIORITY[0]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUPRIORITY[1]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUREQUEST) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUSIZE[2]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUSIZE[3]) = (100:100:100, 100:100:100);
	(PLBCLK => C405PLBICUU0ATTR) = (100:100:100, 100:100:100);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[0], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[10], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[11], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[12], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[13], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[14], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[15], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[16], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[17], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[18], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[19], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[1], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[20], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[21], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[22], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[23], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[24], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[25], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[26], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[27], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[28], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[29], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[2], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[30], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[31], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[3], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[4], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[5], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[6], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[7], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[8], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge BRAMDSOCMRDDBUS[9], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, negedge DSOCMRWCOMPLETE, 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[0], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[10], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[11], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[12], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[13], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[14], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[15], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[16], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[17], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[18], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[19], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[1], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[20], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[21], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[22], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[23], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[24], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[25], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[26], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[27], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[28], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[29], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[2], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[30], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[31], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[3], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[4], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[5], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[6], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[7], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[8], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge BRAMDSOCMRDDBUS[9], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMDSOCMCLK, posedge DSOCMRWCOMPLETE, 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[0], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[10], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[11], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[12], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[13], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[14], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[15], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[16], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[17], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[18], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[19], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[1], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[20], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[21], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[22], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[23], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[24], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[25], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[26], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[27], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[28], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[29], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[2], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[30], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[31], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[3], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[4], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[5], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[6], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[7], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[8], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMDCRRDDBUS[9], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[0], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[10], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[11], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[12], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[13], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[14], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[15], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[16], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[17], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[18], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[19], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[1], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[20], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[21], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[22], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[23], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[24], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[25], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[26], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[27], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[28], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[29], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[2], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[30], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[31], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[32], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[33], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[34], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[35], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[36], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[37], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[38], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[39], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[3], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[40], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[41], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[42], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[43], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[44], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[45], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[46], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[47], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[48], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[49], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[4], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[50], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[51], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[52], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[53], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[54], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[55], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[56], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[57], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[58], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[59], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[5], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[60], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[61], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[62], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[63], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[6], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[7], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[8], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, negedge BRAMISOCMRDDBUS[9], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[0], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[10], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[11], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[12], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[13], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[14], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[15], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[16], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[17], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[18], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[19], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[1], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[20], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[21], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[22], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[23], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[24], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[25], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[26], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[27], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[28], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[29], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[2], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[30], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[31], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[3], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[4], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[5], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[6], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[7], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[8], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMDCRRDDBUS[9], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[0], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[10], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[11], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[12], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[13], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[14], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[15], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[16], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[17], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[18], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[19], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[1], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[20], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[21], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[22], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[23], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[24], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[25], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[26], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[27], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[28], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[29], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[2], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[30], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[31], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[32], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[33], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[34], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[35], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[36], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[37], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[38], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[39], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[3], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[40], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[41], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[42], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[43], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[44], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[45], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[46], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[47], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[48], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[49], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[4], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[50], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[51], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[52], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[53], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[54], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[55], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[56], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[57], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[58], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[59], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[5], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[60], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[61], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[62], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[63], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[6], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[7], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[8], 0:0:0, 0:0:0);
	$setuphold (posedge BRAMISOCMCLK, posedge BRAMISOCMRDDBUS[9], 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, negedge CPMC405CORECLKINACTIVE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, negedge CPMC405CPUCLKEN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, negedge CPMC405JTAGCLKEN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, negedge CPMC405TIMERCLKEN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, negedge CPMC405TIMERTICK, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, negedge DBGC405DEBUGHALT, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, negedge DBGC405EXTBUSHOLDACK, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, negedge DBGC405UNCONDDEBUGEVENT, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, negedge EICC405CRITINPUTIRQ, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, negedge EICC405EXTINPUTIRQ, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, negedge RSTC405RESETCHIP, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, negedge RSTC405RESETCORE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, negedge RSTC405RESETSYS, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, negedge TRCC405TRACEDISABLE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, negedge TRCC405TRIGGEREVENTIN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, posedge CPMC405CORECLKINACTIVE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, posedge CPMC405CPUCLKEN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, posedge CPMC405JTAGCLKEN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, posedge CPMC405TIMERCLKEN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, posedge CPMC405TIMERTICK, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, posedge DBGC405DEBUGHALT, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, posedge DBGC405EXTBUSHOLDACK, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, posedge DBGC405UNCONDDEBUGEVENT, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, posedge EICC405CRITINPUTIRQ, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, posedge EICC405EXTINPUTIRQ, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, posedge RSTC405RESETCHIP, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, posedge RSTC405RESETCORE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, posedge RSTC405RESETSYS, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, posedge TRCC405TRACEDISABLE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMC405CLOCK, posedge TRCC405TRIGGEREVENTIN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRACK, 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[0], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[10], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[11], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[12], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[13], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[14], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[15], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[16], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[17], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[18], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[19], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[1], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[20], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[21], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[22], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[23], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[24], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[25], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[26], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[27], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[28], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[29], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[2], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[30], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[31], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[3], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[4], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[5], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[6], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[7], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[8], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, negedge EXTDCRDBUSIN[9], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRACK, 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[0], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[10], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[11], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[12], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[13], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[14], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[15], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[16], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[17], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[18], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[19], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[1], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[20], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[21], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[22], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[23], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[24], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[25], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[26], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[27], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[28], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[29], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[2], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[30], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[31], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[3], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[4], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[5], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[6], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[7], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[8], 0:0:0, 0:0:0);
	$setuphold (posedge CPMDCRCLK, posedge EXTDCRDBUSIN[9], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUCR[0], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUCR[1], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUCR[2], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUCR[3], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDCREN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDFORCEALIGN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDFORCEBESTEERING, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDFPUOP, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDGPRWRITE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDLDSTBYTE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDLDSTDW, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDLDSTHW, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDLDSTQW, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDLDSTWD, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDLOAD, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDPRIVOP, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDRAEN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDRBEN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDSTORE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDTRAPBE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDTRAPLE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDUPDATE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDXERCAEN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDCDXEROVEN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDECODEBUSY, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUDONE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUEXCEPTION, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUEXEBLOCKINGMCO, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUEXECRFIELD[0], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUEXECRFIELD[1], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUEXECRFIELD[2], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUEXENONBLOCKINGMCO, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUINSTRACK, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPULOADWAIT, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULTVALID, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[0], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[10], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[11], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[12], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[13], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[14], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[15], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[16], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[17], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[18], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[19], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[1], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[20], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[21], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[22], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[23], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[24], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[25], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[26], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[27], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[28], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[29], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[2], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[30], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[31], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[3], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[4], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[5], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[6], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[7], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[8], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPURESULT[9], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUSLEEPNOTREADY, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUXERCA, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, negedge FCMAPUXEROV, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUCR[0], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUCR[1], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUCR[2], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUCR[3], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDCREN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDFORCEALIGN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDFORCEBESTEERING, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDFPUOP, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDGPRWRITE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDLDSTBYTE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDLDSTDW, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDLDSTHW, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDLDSTQW, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDLDSTWD, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDLOAD, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDPRIVOP, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDRAEN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDRBEN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDSTORE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDTRAPBE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDTRAPLE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDUPDATE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDXERCAEN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDCDXEROVEN, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDECODEBUSY, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUDONE, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUEXCEPTION, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUEXEBLOCKINGMCO, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUEXECRFIELD[0], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUEXECRFIELD[1], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUEXECRFIELD[2], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUEXENONBLOCKINGMCO, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUINSTRACK, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPULOADWAIT, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULTVALID, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[0], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[10], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[11], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[12], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[13], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[14], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[15], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[16], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[17], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[18], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[19], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[1], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[20], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[21], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[22], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[23], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[24], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[25], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[26], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[27], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[28], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[29], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[2], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[30], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[31], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[3], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[4], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[5], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[6], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[7], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[8], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPURESULT[9], 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUSLEEPNOTREADY, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUXERCA, 0:0:0, 0:0:0);
	$setuphold (posedge CPMFCMCLK, posedge FCMAPUXEROV, 0:0:0, 0:0:0);
	$setuphold (posedge JTGC405TCK, negedge JTGC405BNDSCANTDO, 0:0:0, 0:0:0);
	$setuphold (posedge JTGC405TCK, negedge JTGC405TDI, 0:0:0, 0:0:0);
	$setuphold (posedge JTGC405TCK, negedge JTGC405TMS, 0:0:0, 0:0:0);
	$setuphold (posedge JTGC405TCK, negedge JTGC405TRSTNEG, 0:0:0, 0:0:0);
	$setuphold (posedge JTGC405TCK, posedge JTGC405BNDSCANTDO, 0:0:0, 0:0:0);
	$setuphold (posedge JTGC405TCK, posedge JTGC405TDI, 0:0:0, 0:0:0);
	$setuphold (posedge JTGC405TCK, posedge JTGC405TMS, 0:0:0, 0:0:0);
	$setuphold (posedge JTGC405TCK, posedge JTGC405TRSTNEG, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCUADDRACK, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCUBUSY, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCUERR, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDACK, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[0], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[10], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[11], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[12], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[13], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[14], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[15], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[16], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[17], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[18], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[19], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[1], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[20], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[21], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[22], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[23], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[24], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[25], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[26], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[27], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[28], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[29], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[2], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[30], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[31], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[32], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[33], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[34], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[35], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[36], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[37], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[38], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[39], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[3], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[40], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[41], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[42], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[43], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[44], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[45], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[46], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[47], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[48], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[49], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[4], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[50], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[51], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[52], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[53], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[54], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[55], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[56], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[57], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[58], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[59], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[5], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[60], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[61], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[62], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[63], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[6], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[7], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[8], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDDBUS[9], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDWDADDR[1], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDWDADDR[2], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCURDWDADDR[3], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCUSSIZE1, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405DCUWRDACK, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICUADDRACK, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICUBUSY, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICUERR, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDACK, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[0], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[10], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[11], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[12], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[13], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[14], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[15], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[16], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[17], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[18], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[19], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[1], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[20], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[21], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[22], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[23], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[24], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[25], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[26], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[27], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[28], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[29], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[2], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[30], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[31], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[32], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[33], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[34], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[35], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[36], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[37], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[38], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[39], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[3], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[40], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[41], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[42], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[43], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[44], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[45], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[46], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[47], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[48], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[49], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[4], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[50], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[51], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[52], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[53], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[54], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[55], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[56], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[57], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[58], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[59], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[5], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[60], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[61], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[62], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[63], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[6], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[7], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[8], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDDBUS[9], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDWDADDR[1], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDWDADDR[2], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICURDWDADDR[3], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, negedge PLBC405ICUSSIZE1, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCUADDRACK, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCUBUSY, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCUERR, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDACK, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[0], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[10], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[11], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[12], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[13], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[14], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[15], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[16], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[17], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[18], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[19], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[1], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[20], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[21], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[22], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[23], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[24], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[25], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[26], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[27], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[28], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[29], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[2], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[30], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[31], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[32], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[33], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[34], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[35], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[36], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[37], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[38], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[39], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[3], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[40], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[41], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[42], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[43], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[44], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[45], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[46], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[47], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[48], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[49], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[4], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[50], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[51], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[52], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[53], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[54], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[55], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[56], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[57], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[58], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[59], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[5], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[60], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[61], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[62], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[63], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[6], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[7], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[8], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDDBUS[9], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDWDADDR[1], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDWDADDR[2], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCURDWDADDR[3], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCUSSIZE1, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405DCUWRDACK, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICUADDRACK, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICUBUSY, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICUERR, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDACK, 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[0], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[10], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[11], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[12], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[13], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[14], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[15], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[16], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[17], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[18], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[19], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[1], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[20], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[21], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[22], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[23], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[24], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[25], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[26], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[27], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[28], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[29], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[2], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[30], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[31], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[32], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[33], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[34], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[35], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[36], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[37], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[38], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[39], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[3], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[40], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[41], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[42], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[43], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[44], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[45], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[46], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[47], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[48], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[49], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[4], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[50], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[51], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[52], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[53], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[54], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[55], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[56], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[57], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[58], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[59], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[5], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[60], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[61], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[62], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[63], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[6], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[7], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[8], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDDBUS[9], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDWDADDR[1], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDWDADDR[2], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICURDWDADDR[3], 0:0:0, 0:0:0);
	$setuphold (posedge PLBCLK, posedge PLBC405ICUSSIZE1, 0:0:0, 0:0:0);

	$width (posedge CPMC405CLOCK, 0:0:0, 0, notifier);
	$width (negedge CPMC405CLOCK, 0:0:0, 0, notifier);
	$period (posedge CPMC405CLOCK, 0:0:0, notifier);

	specparam PATHPULSE$ = 0;
endspecify
endmodule

module FPGA_startup_VIRTEX4 (bus_reset, ghigh_b, gsr, done, gwe, gts_b, shutdown, cclk, por);

output bus_reset;
output ghigh_b;
output gsr;
output done;
output gwe;
output gts_b;

input shutdown;
input cclk, por;

reg bus_reset, abus_reset;
reg ghigh_b, aghigh_b;
reg gsr, agsr;
reg done, adone;
reg gwe, agwe;
reg gts_b, agts_b;

reg [7:0] count;

always @ (posedge cclk or posedge por) begin
	if (por) count <= {8{1'b0}};
	else if (shutdown &&(count > {8{1'b0}})) count = count - 1;
	else if (!shutdown &&(count < {8'hFF})) count = count + 1;
end

always @ (posedge cclk or posedge por) begin
	if (por) begin
		{bus_reset,ghigh_b,gsr,done,gwe,gts_b} <= 6'b100000;
	end
	else begin
		{bus_reset,ghigh_b,gsr,done,gwe,gts_b} <= {abus_reset,aghigh_b,agsr,adone,agwe,agts_b};
	end
end

always @ (count) begin
	// defaults

	abus_reset = 1;
	aghigh_b = 0;
	agsr = 0;
	adone = 0;
	agwe = 0;
	agts_b = 0;

	// Trip times are in order for default sequence.
	if (count >= 8'h02) abus_reset = 0;
	if (count == 8'h17 || count == 8'h18) agsr = 1;
	if (count > 8'h27) aghigh_b = 1;
	if (count > 8'h31) adone = 1;
	if (count == 8'h33 || count == 8'h34) agsr = 1;
	if (count > 8'h36) agwe = 1;
	if (count > 8'h37) agts_b = 1;
end

endmodule // FPGA_startup
